{"stageStartTimestamp":1667973207935252243,"stageEndTimestamp":1667973230182207169,"hyper_mode":true,"cost":0.384847,"input_paths_taken":{"normal":1461465,"general":759805,"fallback":8612774,"unresolved":12646},"output_paths_taken":{"normal":288275,"unresolved":12646},"tasks":[{"container":{"reused":true,"requestId":"07425840-cda7-4a88-bbcc-25ab414af546","uuid":"fb20d5f2-8fc7-4a94-9a12-e6b014fd2a71","msRemaining":597518,"requestsServed":2,"startTimestamp":1667973146048773861,"deadlineTimestamp":1667973808474000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.492] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.525] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.548] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.548] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.548] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2016-10-15.json:1610612736-1611649363\n[2022-11-09 05:53:01.549] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2016-10-15.json:1610612736-1611649363\n[2022-11-09 05:53:01.550] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.623] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.627] [global] [info] retrieving pythonic sample took: 0.003698s\n[2022-11-09 05:53:01.695] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.696] [global] [info] retrieving pythonic sample took: 0.000256s\n[2022-11-09 05:53:01.705] [hyper specializer] [info] Deserialization of Code context took 0.155002s\n[2022-11-09 05:53:01.706] [hyper specializer] [info] Total Stage Decode took 0.156038s\n[2022-11-09 05:53:01.795] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:1610612736-1611649363 on 256.00 KB\n[2022-11-09 05:53:01.795] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.795] [fileinputoperator] [info] Filling sample cache for json operator took 0.089700s (1 entries, 0 rows)\n[2022-11-09 05:53:01.834] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:1610612736-1611649363 on 256.00 KB\n[2022-11-09 05:53:01.904] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:1610612736-1611649363 on 256.00 KB\n[2022-11-09 05:53:02.041] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.041] [fileinputoperator] [info] Extracting row sample took 0.246081s\n[2022-11-09 05:53:02.182] [hyper specializer] [info] sampling (setInputFiles) took 0.476440s\n[2022-11-09 05:53:02.182] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.182] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.182] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.182] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.182] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.183] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.183] [global] [warning] requested 2000 rows for sampling, but only 75 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.185] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.185] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.226] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.227] [global] [warning] requested 100 rows for sampling, but only 75 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.409] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.409] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.409] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.409] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.412] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.415] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.416] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.418] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.420] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.421] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.428] [hyper specializer] [info] generated code in 0.019184s\n[2022-11-09 05:53:02.465] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.465] [Lambda worker] [info] -- hyperspecialization took 0.917136s\n[2022-11-09 05:53:02.502] [global] [info] TransformStage - Optimization via LLVM passes took 0.036358 ms\n[2022-11-09 05:53:02.502] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.514] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.514] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.514] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:02.624] [Lambda worker] [info] fast path took: 0.109707s\n[2022-11-09 05:53:02.624] [Lambda worker] [info] Input rows processed: normal: 31 unresolved: 217\n[2022-11-09 05:53:02.624] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 217\n[2022-11-09 05:53:02.624] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:02.624] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:02.624] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:03.860] [Lambda worker] [info] Compilation of slow path took 1.236018s\n[2022-11-09 05:53:03.889] [Lambda worker] [info] Resolved buffer, compiled: 17 interpreted: 200 unresolved: 0\n[2022-11-09 05:53:03.889] [Lambda worker] [info] Exception resolution/slow path done. Took 1.264566s\n[2022-11-09 05:53:03.889] [Lambda worker] [info] Data processed in 1.3744s 167.00 B (7 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:03.889] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:03.889] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:03.889] [Lambda worker] [info] Writing output from 1 part (167.00 B, 7 rows)\n[2022-11-09 05:53:03.889] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:03.889] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:03.889] [s3fs] [info] Writing buffer of size 167\n[2022-11-09 05:53:03.889] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:03.889] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:03.955] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:03.955] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:03.955] [Lambda worker] [info] Took 1.440663s in total\n[2022-11-09 05:53:03.955] [Lambda worker] [info] Paths rows took: normal: 31 general: 17 interpreter: 200 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2016-10-15.json:1610612736-1611649363"]},{"container":{"reused":true,"requestId":"090d43ac-46ef-4740-a97b-42e179567b5b","uuid":"6e88582b-9217-4d4e-af4a-78a26be5d5b1","msRemaining":596474,"requestsServed":2,"startTimestamp":1667973146349321458,"deadlineTimestamp":1667973808759000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.779] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.812] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.834] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.834] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.834] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:4831838208-4857228670\n[2022-11-09 05:53:01.835] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:4831838208-4857228670\n[2022-11-09 05:53:01.836] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.906] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.910] [global] [info] retrieving pythonic sample took: 0.003497s\n[2022-11-09 05:53:01.976] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.978] [global] [info] retrieving pythonic sample took: 0.000265s\n[2022-11-09 05:53:01.987] [hyper specializer] [info] Deserialization of Code context took 0.150936s\n[2022-11-09 05:53:01.987] [hyper specializer] [info] Total Stage Decode took 0.151966s\n[2022-11-09 05:53:02.058] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:4831838208-4857228670 on 256.00 KB\n[2022-11-09 05:53:02.058] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.058] [fileinputoperator] [info] Filling sample cache for json operator took 0.070495s (1 entries, 0 rows)\n[2022-11-09 05:53:02.088] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:4831838208-4857228670 on 256.00 KB\n[2022-11-09 05:53:02.184] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:4831838208-4857228670 on 256.00 KB\n[2022-11-09 05:53:02.298] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.298] [fileinputoperator] [info] Extracting row sample took 0.240535s\n[2022-11-09 05:53:02.451] [hyper specializer] [info] sampling (setInputFiles) took 0.463636s\n[2022-11-09 05:53:02.451] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.451] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.451] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.451] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.451] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.451] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.452] [global] [warning] requested 2000 rows for sampling, but only 164 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.457] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.457] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.500] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.645] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.645] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.645] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.645] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.648] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.651] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.652] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.654] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.656] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.657] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.664] [hyper specializer] [info] generated code in 0.019018s\n[2022-11-09 05:53:02.703] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.703] [Lambda worker] [info] -- hyperspecialization took 0.869121s\n[2022-11-09 05:53:02.739] [global] [info] TransformStage - Optimization via LLVM passes took 0.035948 ms\n[2022-11-09 05:53:02.739] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.751] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.751] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.751] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:03.203] [Lambda worker] [info] fast path took: 0.451536s\n[2022-11-09 05:53:03.203] [Lambda worker] [info] Input rows processed: normal: 1085 unresolved: 6517\n[2022-11-09 05:53:03.203] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 6517\n[2022-11-09 05:53:03.203] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:03.203] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:03.203] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:04.449] [Lambda worker] [info] Compilation of slow path took 1.245651s\n[2022-11-09 05:53:04.845] [Lambda worker] [info] Resolved buffer, compiled: 268 interpreted: 3079 unresolved: 0\n[2022-11-09 05:53:05.228] [Lambda worker] [info] Resolved buffer, compiled: 260 interpreted: 2910 unresolved: 0\n[2022-11-09 05:53:05.228] [Lambda worker] [info] Exception resolution/slow path done. Took 2.025302s\n[2022-11-09 05:53:05.228] [Lambda worker] [info] Data processed in 2.47696s 3.33 KB (140 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:05.228] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:05.228] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:05.228] [Lambda worker] [info] Writing output from 2 parts (3.33 KB, 140 rows)\n[2022-11-09 05:53:05.228] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:05.228] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:05.229] [s3fs] [info] Writing buffer of size 1681\n[2022-11-09 05:53:05.229] [s3fs] [info] Writing buffer of size 1728\n[2022-11-09 05:53:05.229] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:05.229] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:05.284] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:05.284] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:05.284] [Lambda worker] [info] Took 2.532735s in total\n[2022-11-09 05:53:05.284] [Lambda worker] [info] Paths rows took: normal: 1085 general: 528 interpreter: 5989 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:4831838208-4857228670"]},{"container":{"reused":true,"requestId":"1b9d01bd-2511-4458-8f30-5e9b5fb00f5c","uuid":"59883bbd-c97e-4955-ab37-a947bb12e9e1","msRemaining":596375,"requestsServed":2,"startTimestamp":1667973146919413326,"deadlineTimestamp":1667973809069000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.088] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.122] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.144] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.144] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.144] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:7784628224-7798708474\n[2022-11-09 05:53:02.146] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:7784628224-7798708474\n[2022-11-09 05:53:02.147] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.217] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.222] [global] [info] retrieving pythonic sample took: 0.003554s\n[2022-11-09 05:53:02.290] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.368] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.368] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.368] [fileinputoperator] [info] Filling sample cache for json operator took 0.077630s (1 entries, 0 rows)\n[2022-11-09 05:53:02.399] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.568] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.746] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.746] [fileinputoperator] [info] Extracting row sample took 0.378264s\n[2022-11-09 05:53:02.794] [global] [info] retrieving pythonic sample took: 0.503781s\n[2022-11-09 05:53:02.804] [hyper specializer] [info] Deserialization of Code context took 0.657361s\n[2022-11-09 05:53:02.804] [hyper specializer] [info] Total Stage Decode took 0.658425s\n[2022-11-09 05:53:02.875] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:7784628224-7798708474 on 256.00 KB\n[2022-11-09 05:53:02.875] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.875] [fileinputoperator] [info] Filling sample cache for json operator took 0.040494s (1 entries, 0 rows)\n[2022-11-09 05:53:02.904] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:7784628224-7798708474 on 256.00 KB\n[2022-11-09 05:53:03.006] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:7784628224-7798708474 on 256.00 KB\n[2022-11-09 05:53:03.131] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.131] [fileinputoperator] [info] Extracting row sample took 0.256379s\n[2022-11-09 05:53:03.293] [hyper specializer] [info] sampling (setInputFiles) took 0.488379s\n[2022-11-09 05:53:03.293] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.293] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.293] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.293] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.293] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.293] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.293] [global] [warning] requested 2000 rows for sampling, but only 126 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.298] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.298] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.344] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.541] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.541] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.541] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.541] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.544] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.547] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.549] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.551] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.553] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.554] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.561] [hyper specializer] [info] generated code in 0.019711s\n[2022-11-09 05:53:03.604] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.604] [Lambda worker] [info] -- hyperspecialization took 1.459384s\n[2022-11-09 05:53:03.641] [global] [info] TransformStage - Optimization via LLVM passes took 0.037035 ms\n[2022-11-09 05:53:03.641] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.654] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.654] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.654] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:03.949] [Lambda worker] [info] fast path took: 0.294939s\n[2022-11-09 05:53:03.949] [Lambda worker] [info] Input rows processed: normal: 516 unresolved: 3414\n[2022-11-09 05:53:03.949] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 3414\n[2022-11-09 05:53:03.949] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:03.949] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:03.949] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:05.183] [Lambda worker] [info] Compilation of slow path took 1.233907s\n[2022-11-09 05:53:05.403] [Lambda worker] [info] Resolved buffer, compiled: 182 interpreted: 1639 unresolved: 0\n[2022-11-09 05:53:05.604] [Lambda worker] [info] Resolved buffer, compiled: 122 interpreted: 1471 unresolved: 0\n[2022-11-09 05:53:05.604] [Lambda worker] [info] Exception resolution/slow path done. Took 1.655299s\n[2022-11-09 05:53:05.604] [Lambda worker] [info] Data processed in 1.95037s 1.77 KB (74 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:05.604] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:05.604] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:05.604] [Lambda worker] [info] Writing output from 2 parts (1.77 KB, 74 rows)\n[2022-11-09 05:53:05.604] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:05.604] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:05.604] [s3fs] [info] Writing buffer of size 811\n[2022-11-09 05:53:05.604] [s3fs] [info] Writing buffer of size 1005\n[2022-11-09 05:53:05.604] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:05.604] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:05.693] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:05.693] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:05.693] [Lambda worker] [info] Took 2.039152s in total\n[2022-11-09 05:53:05.693] [Lambda worker] [info] Paths rows took: normal: 516 general: 304 interpreter: 3110 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:7784628224-7798708474"]},{"container":{"reused":true,"requestId":"bd40144a-1d3f-4a8d-a67e-90168b9d8cb0","uuid":"0bb08b95-1afc-4ae9-be3f-8b670532fa07","msRemaining":594444,"requestsServed":2,"startTimestamp":1667973146218383604,"deadlineTimestamp":1667973808562000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.582] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.615] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.638] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.638] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.638] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2017-10-15.json:2147483648-2204545177\n[2022-11-09 05:53:01.639] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2017-10-15.json:2147483648-2204545177\n[2022-11-09 05:53:01.640] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.710] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.714] [global] [info] retrieving pythonic sample took: 0.003545s\n[2022-11-09 05:53:01.781] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.783] [global] [info] retrieving pythonic sample took: 0.000262s\n[2022-11-09 05:53:01.792] [hyper specializer] [info] Deserialization of Code context took 0.152267s\n[2022-11-09 05:53:01.793] [hyper specializer] [info] Total Stage Decode took 0.153305s\n[2022-11-09 05:53:01.879] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:2147483648-2204545177 on 256.00 KB\n[2022-11-09 05:53:01.879] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.879] [fileinputoperator] [info] Filling sample cache for json operator took 0.086591s (1 entries, 0 rows)\n[2022-11-09 05:53:01.902] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:2147483648-2204545177 on 256.00 KB\n[2022-11-09 05:53:02.008] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:2147483648-2204545177 on 256.00 KB\n[2022-11-09 05:53:02.115] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.115] [fileinputoperator] [info] Extracting row sample took 0.235695s\n[2022-11-09 05:53:02.279] [hyper specializer] [info] sampling (setInputFiles) took 0.485970s\n[2022-11-09 05:53:02.279] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.279] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.279] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.279] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.279] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.279] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.279] [global] [warning] requested 2000 rows for sampling, but only 148 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.283] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.284] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.334] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.484] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.484] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.484] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.484] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.487] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.490] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.492] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.494] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.495] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.496] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.503] [hyper specializer] [info] generated code in 0.019151s\n[2022-11-09 05:53:02.546] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.547] [Lambda worker] [info] -- hyperspecialization took 0.908684s\n[2022-11-09 05:53:02.583] [global] [info] TransformStage - Optimization via LLVM passes took 0.035971 ms\n[2022-11-09 05:53:02.583] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.595] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.595] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.595] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:03.614] [Lambda worker] [info] fast path took: 1.018982s\n[2022-11-09 05:53:03.614] [Lambda worker] [info] Input rows processed: normal: 2716 unresolved: 19631\n[2022-11-09 05:53:03.614] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 19631\n[2022-11-09 05:53:03.614] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:03.614] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:03.614] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:04.848] [Lambda worker] [info] Compilation of slow path took 1.233474s\n[2022-11-09 05:53:05.905] [Lambda worker] [info] Resolved buffer, compiled: 757 interpreted: 9001 unresolved: 0\n[2022-11-09 05:53:07.059] [Lambda worker] [info] Resolved buffer, compiled: 791 interpreted: 9082 unresolved: 0\n[2022-11-09 05:53:07.059] [Lambda worker] [info] Exception resolution/slow path done. Took 3.444879s\n[2022-11-09 05:53:07.059] [Lambda worker] [info] Data processed in 4.46399s 12.58 KB (535 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:07.059] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:07.059] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:07.059] [Lambda worker] [info] Writing output from 2 parts (12.58 KB, 535 rows)\n[2022-11-09 05:53:07.059] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:07.059] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:07.059] [s3fs] [info] Writing buffer of size 6375\n[2022-11-09 05:53:07.059] [s3fs] [info] Writing buffer of size 6509\n[2022-11-09 05:53:07.059] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:07.059] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:07.117] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:07.117] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:07.117] [Lambda worker] [info] Took 4.522117s in total\n[2022-11-09 05:53:07.117] [Lambda worker] [info] Paths rows took: normal: 2716 general: 1548 interpreter: 18083 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2017-10-15.json:2147483648-2204545177"]},{"container":{"reused":true,"requestId":"160acb89-f7c2-404d-b67a-e78192ebe0ac","uuid":"b242c615-94ae-492e-90df-33773b223c81","msRemaining":593436,"requestsServed":2,"startTimestamp":1667973146919721977,"deadlineTimestamp":1667973809551000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.571] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.604] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.626] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.626] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.626] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:12348030976-12445448390\n[2022-11-09 05:53:02.628] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:12348030976-12445448390\n[2022-11-09 05:53:02.629] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.698] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.703] [global] [info] retrieving pythonic sample took: 0.003503s\n[2022-11-09 05:53:02.769] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.770] [global] [info] retrieving pythonic sample took: 0.000257s\n[2022-11-09 05:53:02.780] [hyper specializer] [info] Deserialization of Code context took 0.151168s\n[2022-11-09 05:53:02.780] [hyper specializer] [info] Total Stage Decode took 0.152233s\n[2022-11-09 05:53:02.874] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:12348030976-12445448390 on 256.00 KB\n[2022-11-09 05:53:02.874] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.874] [fileinputoperator] [info] Filling sample cache for json operator took 0.094181s (1 entries, 0 rows)\n[2022-11-09 05:53:02.898] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:12348030976-12445448390 on 256.00 KB\n[2022-11-09 05:53:02.975] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:12348030976-12445448390 on 256.00 KB\n[2022-11-09 05:53:03.091] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.091] [fileinputoperator] [info] Extracting row sample took 0.216879s\n[2022-11-09 05:53:03.239] [hyper specializer] [info] sampling (setInputFiles) took 0.459246s\n[2022-11-09 05:53:03.240] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.240] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.240] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.240] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.240] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.240] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.240] [global] [warning] requested 2000 rows for sampling, but only 136 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.244] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.244] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.285] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.445] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.446] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.446] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.446] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.449] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.451] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.453] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.455] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.456] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.457] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.464] [hyper specializer] [info] generated code in 0.018432s\n[2022-11-09 05:53:03.502] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.502] [Lambda worker] [info] -- hyperspecialization took 0.875945s\n[2022-11-09 05:53:03.538] [global] [info] TransformStage - Optimization via LLVM passes took 0.035810 ms\n[2022-11-09 05:53:03.538] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.551] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.551] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.551] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:05.052] [Lambda worker] [info] fast path took: 1.500489s\n[2022-11-09 05:53:05.052] [Lambda worker] [info] Input rows processed: normal: 3252 unresolved: 20481\n[2022-11-09 05:53:05.052] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 20481\n[2022-11-09 05:53:05.052] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:05.052] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:05.052] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:06.279] [Lambda worker] [info] Compilation of slow path took 1.227384s\n[2022-11-09 05:53:07.694] [Lambda worker] [info] Resolved buffer, compiled: 819 interpreted: 9826 unresolved: 0\n[2022-11-09 05:53:09.016] [Lambda worker] [info] Resolved buffer, compiled: 732 interpreted: 9104 unresolved: 0\n[2022-11-09 05:53:09.018] [Lambda worker] [info] Exception resolution/slow path done. Took 3.966220s\n[2022-11-09 05:53:09.018] [Lambda worker] [info] Data processed in 5.46687s 10.34 KB (429 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:09.018] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:09.018] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:09.018] [Lambda worker] [info] Writing output from 2 parts (10.34 KB, 429 rows)\n[2022-11-09 05:53:09.018] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:09.018] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:09.018] [s3fs] [info] Writing buffer of size 5680\n[2022-11-09 05:53:09.018] [s3fs] [info] Writing buffer of size 4905\n[2022-11-09 05:53:09.018] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:09.018] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:09.113] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:09.113] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:09.113] [Lambda worker] [info] Took 5.562372s in total\n[2022-11-09 05:53:09.113] [Lambda worker] [info] Paths rows took: normal: 3252 general: 1551 interpreter: 18930 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:12348030976-12445448390"]},{"container":{"reused":true,"requestId":"d522a592-a958-4ed9-9558-4745d5ca43cb","uuid":"42dc74b6-b64b-4f30-8635-bd67b6e88fec","msRemaining":593040,"requestsServed":2,"startTimestamp":1667973146479440558,"deadlineTimestamp":1667973809697000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.715] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.740] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.763] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.763] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.763] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2021-10-15.json:3489660928-3573656628\n[2022-11-09 05:53:02.765] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2021-10-15.json:3489660928-3573656628\n[2022-11-09 05:53:02.766] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.838] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.843] [global] [info] retrieving pythonic sample took: 0.004286s\n[2022-11-09 05:53:02.911] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.912] [global] [info] retrieving pythonic sample took: 0.000269s\n[2022-11-09 05:53:02.922] [hyper specializer] [info] Deserialization of Code context took 0.156064s\n[2022-11-09 05:53:02.922] [hyper specializer] [info] Total Stage Decode took 0.157094s\n[2022-11-09 05:53:03.044] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:3489660928-3573656628 on 256.00 KB\n[2022-11-09 05:53:03.044] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.044] [fileinputoperator] [info] Filling sample cache for json operator took 0.122558s (1 entries, 0 rows)\n[2022-11-09 05:53:03.097] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:3489660928-3573656628 on 256.00 KB\n[2022-11-09 05:53:03.180] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:3489660928-3573656628 on 256.00 KB\n[2022-11-09 05:53:03.327] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.327] [fileinputoperator] [info] Extracting row sample took 0.282485s\n[2022-11-09 05:53:03.490] [hyper specializer] [info] sampling (setInputFiles) took 0.568550s\n[2022-11-09 05:53:03.491] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.491] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.491] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.491] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.491] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.491] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.491] [global] [warning] requested 2000 rows for sampling, but only 199 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.497] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.497] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.542] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.692] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.693] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.693] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.693] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.714] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.717] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.719] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.720] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.722] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.723] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.731] [hyper specializer] [info] generated code in 0.037909s\n[2022-11-09 05:53:03.778] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.778] [Lambda worker] [info] -- hyperspecialization took 1.014896s\n[2022-11-09 05:53:03.814] [global] [info] TransformStage - Optimization via LLVM passes took 0.036356 ms\n[2022-11-09 05:53:03.814] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.827] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.828] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.829] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:05.351] [Lambda worker] [info] fast path took: 1.520989s\n[2022-11-09 05:53:05.351] [Lambda worker] [info] Input rows processed: normal: 4048 unresolved: 24571\n[2022-11-09 05:53:05.351] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 24571\n[2022-11-09 05:53:05.351] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:05.351] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:05.351] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:06.613] [Lambda worker] [info] Compilation of slow path took 1.262254s\n[2022-11-09 05:53:08.137] [Lambda worker] [info] Resolved buffer, compiled: 1264 interpreted: 11283 unresolved: 0\n[2022-11-09 05:53:09.569] [Lambda worker] [info] Resolved buffer, compiled: 1267 interpreted: 10757 unresolved: 0\n[2022-11-09 05:53:09.570] [Lambda worker] [info] Exception resolution/slow path done. Took 4.219786s\n[2022-11-09 05:53:09.570] [Lambda worker] [info] Data processed in 5.74093s 11.70 KB (485 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:09.570] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:09.570] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:09.570] [Lambda worker] [info] Writing output from 2 parts (11.70 KB, 485 rows)\n[2022-11-09 05:53:09.570] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:09.570] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:09.571] [s3fs] [info] Writing buffer of size 6358\n[2022-11-09 05:53:09.571] [s3fs] [info] Writing buffer of size 5622\n[2022-11-09 05:53:09.571] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:09.571] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:09.655] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:09.656] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:09.656] [Lambda worker] [info] Took 5.826236s in total\n[2022-11-09 05:53:09.656] [Lambda worker] [info] Paths rows took: normal: 4048 general: 2531 interpreter: 22040 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2021-10-15.json:3489660928-3573656628"]},{"container":{"reused":true,"requestId":"34f5698d-7de9-4d37-8ae4-616d02d2f7ca","uuid":"91f6c0f9-add5-47c5-8860-5734bf2e30c9","msRemaining":590804,"requestsServed":2,"startTimestamp":1667973145843696518,"deadlineTimestamp":1667973808130000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.150] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.182] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.205] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.205] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.205] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2011-10-15.json:0-78478920\n[2022-11-09 05:53:01.206] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2011-10-15.json:0-78478920\n[2022-11-09 05:53:01.207] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.277] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.281] [global] [info] retrieving pythonic sample took: 0.003579s\n[2022-11-09 05:53:01.348] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.349] [global] [info] retrieving pythonic sample took: 0.000259s\n[2022-11-09 05:53:01.359] [hyper specializer] [info] Deserialization of Code context took 0.151440s\n[2022-11-09 05:53:01.359] [hyper specializer] [info] Total Stage Decode took 0.152495s\n[2022-11-09 05:53:01.458] [global] [info] sampled s3://tuplex-public/data/github_daily/2011-10-15.json:0-78478920 on 256.00 KB\n[2022-11-09 05:53:01.459] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.459] [fileinputoperator] [info] Filling sample cache for json operator took 0.099834s (1 entries, 0 rows)\n[2022-11-09 05:53:01.490] [global] [info] sampled s3://tuplex-public/data/github_daily/2011-10-15.json:0-78478920 on 256.00 KB\n[2022-11-09 05:53:01.635] [global] [info] sampled s3://tuplex-public/data/github_daily/2011-10-15.json:0-78478920 on 256.00 KB\n[2022-11-09 05:53:01.834] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.834] [fileinputoperator] [info] Extracting row sample took 0.375476s\n[2022-11-09 05:53:02.079] [hyper specializer] [info] sampling (setInputFiles) took 0.719940s\n[2022-11-09 05:53:02.079] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.079] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.079] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.079] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.079] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.079] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.079] [global] [warning] requested 2000 rows for sampling, but only 272 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.089] [specializing stage optimizer] [info] Row type before retype: (str,boolean,Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)],str,Struct[(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'url'->str),(str,'message'->str)]]),(str,'head'->str),(str,'legacy'->Struct[(str,'head'->str),(str,'size'->i64),(str,'push_id'->i64),(str,'shas'->List[List[str]]),(str,'ref'->str)]),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],str,Struct[(str,'url'->str),(str,'id'->i64),(str,'name'->str)],Option[Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)]])\n[2022-11-09 05:53:02.089] [specializing stage optimizer] [info] Row type after retype: (str,boolean,Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)],str,Struct[(str,'head'->str),(str,'size'->i64),(str,'push_id'->i64),(str,'ref'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'url'->str),(str,'message'->str)]]),(str,'legacy'->Struct[(str,'head'->str),(str,'size'->i64),(str,'push_id'->i64),(str,'shas'->List[List[str]]),(str,'ref'->str)])],str,Struct[(str,'url'->str),(str,'id'->i64),(str,'name'->str)],Option[Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)]])\n[2022-11-09 05:53:02.158] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.357] [hyper specializer] [info] specialized to input:  (str,boolean,Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)],str,Struct[(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'url'->str),(str,'message'->str)]]),(str,'head'->str),(str,'legacy'->Struct[(str,'head'->str),(str,'size'->i64),(str,'push_id'->i64),(str,'shas'->List[List[str]]),(str,'ref'->str)]),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],str,Struct[(str,'url'->str),(str,'id'->i64),(str,'name'->str)],Option[Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)]])\n[2022-11-09 05:53:02.357] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.357] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.358] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.360] [codegen] [info] generating pipeline for (str,boolean,Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)],str,Struct[(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'url'->str),(str,'message'->str)]]),(str,'head'->str),(str,'legacy'->Struct[(str,'head'->str),(str,'size'->i64),(str,'push_id'->i64),(str,'shas'->List[List[str]]),(str,'ref'->str)]),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],str,Struct[(str,'url'->str),(str,'id'->i64),(str,'name'->str)],Option[Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.364] [codegen] [info] generating lambda function for ((str,boolean,Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)],str,Struct[(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'url'->str),(str,'message'->str)]]),(str,'head'->str),(str,'legacy'->Struct[(str,'head'->str),(str,'size'->i64),(str,'push_id'->i64),(str,'shas'->List[List[str]]),(str,'ref'->str)]),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],str,Struct[(str,'url'->str),(str,'id'->i64),(str,'name'->str)],Option[Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)]])) -> i64\n[2022-11-09 05:53:02.366] [codegen] [info] generating function extract_repo_id_code for ((str,boolean,Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)],str,Struct[(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'url'->str),(str,'message'->str)]]),(str,'head'->str),(str,'legacy'->Struct[(str,'head'->str),(str,'size'->i64),(str,'push_id'->i64),(str,'shas'->List[List[str]]),(str,'ref'->str)]),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],str,Struct[(str,'url'->str),(str,'id'->i64),(str,'name'->str)],Option[Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.368] [codegen] [info] generating lambda function for ((str,boolean,Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)],str,Struct[(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'url'->str),(str,'message'->str)]]),(str,'head'->str),(str,'legacy'->Struct[(str,'head'->str),(str,'size'->i64),(str,'push_id'->i64),(str,'shas'->List[List[str]]),(str,'ref'->str)]),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],str,Struct[(str,'url'->str),(str,'id'->i64),(str,'name'->str)],Option[Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.369] [codegen] [info] generating lambda function for ((str,boolean,Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)],str,Struct[(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'url'->str),(str,'message'->str)]]),(str,'head'->str),(str,'legacy'->Struct[(str,'head'->str),(str,'size'->i64),(str,'push_id'->i64),(str,'shas'->List[List[str]]),(str,'ref'->str)]),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],str,Struct[(str,'url'->str),(str,'id'->i64),(str,'name'->str)],Option[Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.371] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.379] [hyper specializer] [info] generated code in 0.021164s\n[2022-11-09 05:53:02.442] [Lambda worker] [info] specialized normal-case type (str,boolean,Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)],str,Struct[(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'url'->str),(str,'message'->str)]]),(str,'head'->str),(str,'legacy'->Struct[(str,'head'->str),(str,'size'->i64),(str,'push_id'->i64),(str,'shas'->List[List[str]]),(str,'ref'->str)]),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],str,Struct[(str,'url'->str),(str,'id'->i64),(str,'name'->str)],Option[Struct[(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str),(str,'id'->i64),(str,'login'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.442] [Lambda worker] [info] -- hyperspecialization took 1.236718s\n[2022-11-09 05:53:02.485] [global] [info] TransformStage - Optimization via LLVM passes took 0.043153 ms\n[2022-11-09 05:53:02.485] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.501] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.501] [global] [info] Compiled code paths for stage 0 in 0.06 ms\n[2022-11-09 05:53:02.501] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:04.189] [Lambda worker] [info] fast path took: 1.688645s\n[2022-11-09 05:53:04.189] [Lambda worker] [info] Input rows processed: normal: 3526 unresolved: 45372\n[2022-11-09 05:53:04.189] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 45372\n[2022-11-09 05:53:04.189] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:04.189] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:04.189] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:05.422] [Lambda worker] [info] Compilation of slow path took 1.232573s\n[2022-11-09 05:53:05.448] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:07.793] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 21835 unresolved: 614\n[2022-11-09 05:53:07.821] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:10.264] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 22253 unresolved: 670\n[2022-11-09 05:53:10.265] [Lambda worker] [info] Exception resolution/slow path done. Took 6.075934s\n[2022-11-09 05:53:10.265] [Lambda worker] [info] Data processed in 7.76473s 31.13 KB (1418 normal rows) 1.52 MB (1284 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:10.266] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part0.csv.csv\n[2022-11-09 05:53:10.266] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:10.266] [Lambda worker] [info] Writing output from 2 parts (31.13 KB, 1418 rows)\n[2022-11-09 05:53:10.266] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part0.csv.csv\n[2022-11-09 05:53:10.266] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:10.266] [s3fs] [info] Writing buffer of size 16876\n[2022-11-09 05:53:10.266] [s3fs] [info] Writing buffer of size 15000\n[2022-11-09 05:53:10.266] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part0.csv.csv\n[2022-11-09 05:53:10.266] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:10.325] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:10.325] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:10.325] [Lambda worker] [info] Took 7.824418s in total\n[2022-11-09 05:53:10.325] [Lambda worker] [info] Paths rows took: normal: 3526 general: 0 interpreter: 44088 unresolved: 1284\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2011-10-15.json:0-78478920"]},{"container":{"reused":true,"requestId":"ef26e3ce-19fc-4eeb-9c56-39a40f2ce9e1","uuid":"21767532-8e9b-4d7f-8b8c-7aeb7b5a01e2","msRemaining":588986,"requestsServed":2,"startTimestamp":1667973146199018071,"deadlineTimestamp":1667973808237000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.256] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.289] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.312] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.312] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.312] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2014-10-15.json:268435456-536870912\n[2022-11-09 05:53:01.313] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2014-10-15.json:268435456-536870912\n[2022-11-09 05:53:01.314] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.384] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.388] [global] [info] retrieving pythonic sample took: 0.003551s\n[2022-11-09 05:53:01.455] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.456] [global] [info] retrieving pythonic sample took: 0.000268s\n[2022-11-09 05:53:01.466] [hyper specializer] [info] Deserialization of Code context took 0.151381s\n[2022-11-09 05:53:01.466] [hyper specializer] [info] Total Stage Decode took 0.152427s\n[2022-11-09 05:53:01.554] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:01.554] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.554] [fileinputoperator] [info] Filling sample cache for json operator took 0.088389s (1 entries, 0 rows)\n[2022-11-09 05:53:01.592] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:01.693] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:01.807] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.807] [fileinputoperator] [info] Extracting row sample took 0.252891s\n[2022-11-09 05:53:01.956] [hyper specializer] [info] sampling (setInputFiles) took 0.490486s\n[2022-11-09 05:53:01.957] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.957] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.957] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.957] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.957] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.957] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.957] [global] [warning] requested 2000 rows for sampling, but only 97 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:01.960] [specializing stage optimizer] [info] Row type before retype: (str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:01.960] [specializing stage optimizer] [info] Row type after retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'full_name'->str),(str,'owner'->str),(str,'private'->boolean),(str,'html_url'->str),(str,'description'->str),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->str),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'open_issues_count'->i64),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str),(str,'stargazers'->i64),(str,'master_branch'->str)])\n[2022-11-09 05:53:02.000] [codegen] [warning] could not find column 'repo' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.068] [hyper specializer] [info] specialized to input:  (str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.068] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.068] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.069] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.071] [codegen] [info] generating pipeline for (str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.075] [codegen] [info] generating lambda function for ((str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])) -> i64\n[2022-11-09 05:53:02.077] [codegen] [info] generating function extract_repo_id_code for ((str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64)) -> i64\n[2022-11-09 05:53:02.079] [codegen] [info] generating lambda function for ((str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> boolean\n[2022-11-09 05:53:02.081] [codegen] [info] generating lambda function for ((str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.082] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.097] [hyper specializer] [info] generated code in 0.028145s\n[2022-11-09 05:53:02.134] [Lambda worker] [info] specialized normal-case type (str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.134] [Lambda worker] [info] -- hyperspecialization took 0.822328s\n[2022-11-09 05:53:02.195] [global] [info] TransformStage - Optimization via LLVM passes took 0.060129 ms\n[2022-11-09 05:53:02.195] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.218] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.219] [global] [info] Compiled code paths for stage 0 in 0.08 ms\n[2022-11-09 05:53:02.219] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:06.789] [Lambda worker] [info] fast path took: 4.570119s\n[2022-11-09 05:53:06.789] [Lambda worker] [info] Input rows processed: normal: 20788 unresolved: 27688\n[2022-11-09 05:53:06.789] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 27688\n[2022-11-09 05:53:06.789] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:06.789] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:06.789] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.025] [Lambda worker] [info] Compilation of slow path took 1.235702s\n[2022-11-09 05:53:08.094] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:09.982] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 13554 unresolved: 20\n[2022-11-09 05:53:10.360] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:12.107] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 14103 unresolved: 11\n[2022-11-09 05:53:12.111] [Lambda worker] [info] Exception resolution/slow path done. Took 5.321735s\n[2022-11-09 05:53:12.111] [Lambda worker] [info] Data processed in 9.89202s 369.61 KB (1719 normal rows) 28.89 KB (31 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:12.111] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:12.111] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:12.111] [Lambda worker] [info] Writing output from 2 parts (369.61 KB, 1719 rows)\n[2022-11-09 05:53:12.111] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:12.111] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:12.111] [s3fs] [info] Writing buffer of size 203574\n[2022-11-09 05:53:12.111] [s3fs] [info] Writing buffer of size 174910\n[2022-11-09 05:53:12.111] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:12.111] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:12.250] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:12.250] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:12.250] [Lambda worker] [info] Took 10.031323s in total\n[2022-11-09 05:53:12.250] [Lambda worker] [info] Paths rows took: normal: 20788 general: 0 interpreter: 27657 unresolved: 31\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2014-10-15.json:268435456-536870912"]},{"container":{"reused":true,"requestId":"c61179fa-3ee8-4db0-a085-8e59118794ae","uuid":"50200b11-c32c-4cb5-a01b-4f7331d8b500","msRemaining":588912,"requestsServed":2,"startTimestamp":1667973146674465511,"deadlineTimestamp":1667973808316000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.336] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.369] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.391] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.391] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.391] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2014-10-15.json:2415919104-2656017942\n[2022-11-09 05:53:01.393] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2014-10-15.json:2415919104-2656017942\n[2022-11-09 05:53:01.394] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.464] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.469] [global] [info] retrieving pythonic sample took: 0.004260s\n[2022-11-09 05:53:01.536] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.618] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.619] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.619] [fileinputoperator] [info] Filling sample cache for json operator took 0.081527s (1 entries, 0 rows)\n[2022-11-09 05:53:01.649] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.816] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.999] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.999] [fileinputoperator] [info] Extracting row sample took 0.380578s\n[2022-11-09 05:53:02.046] [global] [info] retrieving pythonic sample took: 0.509292s\n[2022-11-09 05:53:02.056] [hyper specializer] [info] Deserialization of Code context took 0.662736s\n[2022-11-09 05:53:02.056] [hyper specializer] [info] Total Stage Decode took 0.663766s\n[2022-11-09 05:53:02.114] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:2415919104-2656017942 on 256.00 KB\n[2022-11-09 05:53:02.114] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.114] [fileinputoperator] [info] Filling sample cache for json operator took 0.028112s (1 entries, 0 rows)\n[2022-11-09 05:53:02.141] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:2415919104-2656017942 on 256.00 KB\n[2022-11-09 05:53:02.263] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:2415919104-2656017942 on 256.00 KB\n[2022-11-09 05:53:02.397] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.397] [fileinputoperator] [info] Extracting row sample took 0.282509s\n[2022-11-09 05:53:02.567] [hyper specializer] [info] sampling (setInputFiles) took 0.510171s\n[2022-11-09 05:53:02.567] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.567] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.567] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.567] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.567] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.567] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.567] [global] [warning] requested 2000 rows for sampling, but only 98 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.571] [specializing stage optimizer] [info] Row type before retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.571] [specializing stage optimizer] [info] Row type after retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'full_name'->str),(str,'owner'->str),(str,'private'->boolean),(str,'html_url'->str),(str,'description'->str),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->str),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'open_issues_count'->i64),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str),(str,'stargazers'->i64),(str,'master_branch'->str)])\n[2022-11-09 05:53:02.617] [codegen] [warning] could not find column 'repo' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.692] [hyper specializer] [info] specialized to input:  (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.692] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.692] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.692] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.695] [codegen] [info] generating pipeline for (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.698] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])) -> i64\n[2022-11-09 05:53:02.701] [codegen] [info] generating function extract_repo_id_code for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64)) -> i64\n[2022-11-09 05:53:02.703] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> boolean\n[2022-11-09 05:53:02.705] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.707] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.722] [hyper specializer] [info] generated code in 0.030520s\n[2022-11-09 05:53:02.767] [Lambda worker] [info] specialized normal-case type (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.767] [Lambda worker] [info] -- hyperspecialization took 1.375842s\n[2022-11-09 05:53:02.833] [global] [info] TransformStage - Optimization via LLVM passes took 0.065997 ms\n[2022-11-09 05:53:02.833] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.860] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.860] [global] [info] Compiled code paths for stage 0 in 0.09 ms\n[2022-11-09 05:53:02.860] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:05.866] [Lambda worker] [info] fast path took: 3.006081s\n[2022-11-09 05:53:05.866] [Lambda worker] [info] Input rows processed: normal: 10897 unresolved: 33702\n[2022-11-09 05:53:05.866] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 33702\n[2022-11-09 05:53:05.866] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:05.866] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:05.866] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:07.121] [Lambda worker] [info] Compilation of slow path took 1.255076s\n[2022-11-09 05:53:07.394] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:09.601] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 16674 unresolved: 13\n[2022-11-09 05:53:10.393] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:12.201] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 17008 unresolved: 7\n[2022-11-09 05:53:12.205] [Lambda worker] [info] Exception resolution/slow path done. Took 6.339333s\n[2022-11-09 05:53:12.205] [Lambda worker] [info] Data processed in 9.34557s 7.39 MB (1884 normal rows) 12.56 KB (20 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:12.205] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:12.205] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:12.205] [Lambda worker] [info] Writing output from 2 parts (7.39 MB, 1884 rows)\n[2022-11-09 05:53:12.205] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:12.205] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:12.205] [s3fs] [info] Writing buffer of size 3602938\n[2022-11-09 05:53:12.208] [s3fs] [info] Writing buffer of size 4148465\n[2022-11-09 05:53:12.210] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:12.210] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:12.402] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:12.403] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:12.403] [Lambda worker] [info] Took 9.542783s in total\n[2022-11-09 05:53:12.403] [Lambda worker] [info] Paths rows took: normal: 10897 general: 0 interpreter: 33682 unresolved: 20\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2014-10-15.json:2415919104-2656017942"]},{"container":{"reused":true,"requestId":"f96f6dd3-3e93-410e-83fb-7a4eb9842555","uuid":"39cd45b6-70a2-4a0c-89d4-0b737f88b40d","msRemaining":588786,"requestsServed":2,"startTimestamp":1667973145824325147,"deadlineTimestamp":1667973808226000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.244] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.276] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.298] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.298] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.298] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2014-10-15.json:0-268435456\n[2022-11-09 05:53:01.299] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2014-10-15.json:0-268435456\n[2022-11-09 05:53:01.300] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.370] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.374] [global] [info] retrieving pythonic sample took: 0.003454s\n[2022-11-09 05:53:01.442] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.444] [global] [info] retrieving pythonic sample took: 0.000247s\n[2022-11-09 05:53:01.453] [hyper specializer] [info] Deserialization of Code context took 0.152512s\n[2022-11-09 05:53:01.453] [hyper specializer] [info] Total Stage Decode took 0.153531s\n[2022-11-09 05:53:01.522] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:01.522] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.522] [fileinputoperator] [info] Filling sample cache for json operator took 0.069380s (1 entries, 0 rows)\n[2022-11-09 05:53:01.551] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:01.619] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:01.731] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.731] [fileinputoperator] [info] Extracting row sample took 0.208410s\n[2022-11-09 05:53:01.877] [hyper specializer] [info] sampling (setInputFiles) took 0.423957s\n[2022-11-09 05:53:01.877] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.877] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.877] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.877] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.878] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.878] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.878] [global] [warning] requested 2000 rows for sampling, but only 90 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:01.880] [specializing stage optimizer] [info] Row type before retype: (str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:01.880] [specializing stage optimizer] [info] Row type after retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'full_name'->str),(str,'owner'->str),(str,'private'->boolean),(str,'html_url'->str),(str,'description'->str),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->str),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'open_issues_count'->i64),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str),(str,'stargazers'->i64),(str,'master_branch'->str)])\n[2022-11-09 05:53:01.920] [codegen] [warning] could not find column 'repo' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.982] [hyper specializer] [info] specialized to input:  (str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:01.982] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:01.982] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:01.982] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:01.985] [codegen] [info] generating pipeline for (str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:01.988] [codegen] [info] generating lambda function for ((str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])) -> i64\n[2022-11-09 05:53:01.991] [codegen] [info] generating function extract_repo_id_code for ((str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64)) -> i64\n[2022-11-09 05:53:01.993] [codegen] [info] generating lambda function for ((str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> boolean\n[2022-11-09 05:53:01.995] [codegen] [info] generating lambda function for ((str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:01.996] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.010] [hyper specializer] [info] generated code in 0.028149s\n[2022-11-09 05:53:02.047] [Lambda worker] [info] specialized normal-case type (str,Struct[(str,'head'->str),(str,'ref'->str),(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.047] [Lambda worker] [info] -- hyperspecialization took 0.749062s\n[2022-11-09 05:53:02.107] [global] [info] TransformStage - Optimization via LLVM passes took 0.059686 ms\n[2022-11-09 05:53:02.107] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.131] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.131] [global] [info] Compiled code paths for stage 0 in 0.08 ms\n[2022-11-09 05:53:02.131] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.149] [Lambda worker] [info] fast path took: 5.017282s\n[2022-11-09 05:53:07.149] [Lambda worker] [info] Input rows processed: normal: 23160 unresolved: 24984\n[2022-11-09 05:53:07.149] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 24984\n[2022-11-09 05:53:07.149] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.149] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.149] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.372] [Lambda worker] [info] Compilation of slow path took 1.223504s\n[2022-11-09 05:53:08.505] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:10.245] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 12805 unresolved: 10\n[2022-11-09 05:53:10.356] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:12.326] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 12155 unresolved: 14\n[2022-11-09 05:53:12.330] [Lambda worker] [info] Exception resolution/slow path done. Took 5.181045s\n[2022-11-09 05:53:12.330] [Lambda worker] [info] Data processed in 10.1985s 426.83 KB (2036 normal rows) 11.29 KB (24 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:12.330] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:12.330] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:12.330] [Lambda worker] [info] Writing output from 2 parts (426.83 KB, 2036 rows)\n[2022-11-09 05:53:12.330] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:12.330] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:12.330] [s3fs] [info] Writing buffer of size 228616\n[2022-11-09 05:53:12.330] [s3fs] [info] Writing buffer of size 208454\n[2022-11-09 05:53:12.330] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:12.330] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:12.439] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:12.439] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:12.439] [Lambda worker] [info] Took 10.307134s in total\n[2022-11-09 05:53:12.439] [Lambda worker] [info] Paths rows took: normal: 23160 general: 0 interpreter: 24960 unresolved: 24\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2014-10-15.json:0-268435456"]},{"container":{"reused":true,"requestId":"2efc770a-5dba-4e46-846c-2ac1a447ae97","uuid":"dc3e8c4a-ac03-446d-af84-333c2a96826b","msRemaining":588474,"requestsServed":2,"startTimestamp":1667973145916066700,"deadlineTimestamp":1667973808278000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.297] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.330] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.353] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.353] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.353] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2014-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:01.354] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2014-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:01.355] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.426] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.431] [global] [info] retrieving pythonic sample took: 0.003607s\n[2022-11-09 05:53:01.498] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.566] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.566] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.566] [fileinputoperator] [info] Filling sample cache for json operator took 0.067415s (1 entries, 0 rows)\n[2022-11-09 05:53:01.594] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.744] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.922] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.922] [fileinputoperator] [info] Extracting row sample took 0.355437s\n[2022-11-09 05:53:01.969] [global] [info] retrieving pythonic sample took: 0.470032s\n[2022-11-09 05:53:01.979] [hyper specializer] [info] Deserialization of Code context took 0.624035s\n[2022-11-09 05:53:01.979] [hyper specializer] [info] Total Stage Decode took 0.625071s\n[2022-11-09 05:53:02.061] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.061] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.061] [fileinputoperator] [info] Filling sample cache for json operator took 0.052366s (1 entries, 0 rows)\n[2022-11-09 05:53:02.087] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.175] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.320] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.320] [fileinputoperator] [info] Extracting row sample took 0.259281s\n[2022-11-09 05:53:02.491] [hyper specializer] [info] sampling (setInputFiles) took 0.512161s\n[2022-11-09 05:53:02.492] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.492] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.492] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.492] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.492] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.492] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.492] [global] [warning] requested 2000 rows for sampling, but only 87 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.495] [specializing stage optimizer] [info] Row type before retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.495] [specializing stage optimizer] [info] Row type after retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'full_name'->str),(str,'owner'->str),(str,'private'->boolean),(str,'html_url'->str),(str,'description'->str),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->str),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->str),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'open_issues_count'->i64),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str),(str,'stargazers'->i64),(str,'master_branch'->str),(str,'organization'->str)])\n[2022-11-09 05:53:02.541] [codegen] [warning] could not find column 'repo' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.614] [hyper specializer] [info] specialized to input:  (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.614] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.614] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.614] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.617] [codegen] [info] generating pipeline for (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.621] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])) -> i64\n[2022-11-09 05:53:02.623] [codegen] [info] generating function extract_repo_id_code for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64)) -> i64\n[2022-11-09 05:53:02.626] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> boolean\n[2022-11-09 05:53:02.628] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.630] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.645] [hyper specializer] [info] generated code in 0.030340s\n[2022-11-09 05:53:02.688] [Lambda worker] [info] specialized normal-case type (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.688] [Lambda worker] [info] -- hyperspecialization took 1.335356s\n[2022-11-09 05:53:02.752] [global] [info] TransformStage - Optimization via LLVM passes took 0.063681 ms\n[2022-11-09 05:53:02.752] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.777] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.777] [global] [info] Compiled code paths for stage 0 in 0.09 ms\n[2022-11-09 05:53:02.777] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.046] [Lambda worker] [info] fast path took: 5.269058s\n[2022-11-09 05:53:08.046] [Lambda worker] [info] Input rows processed: normal: 24365 unresolved: 22730\n[2022-11-09 05:53:08.046] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 22730\n[2022-11-09 05:53:08.046] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.046] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.046] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.275] [Lambda worker] [info] Compilation of slow path took 1.228448s\n[2022-11-09 05:53:09.501] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:11.010] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 11381 unresolved: 79\n[2022-11-09 05:53:11.075] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:12.673] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 11215 unresolved: 55\n[2022-11-09 05:53:12.677] [Lambda worker] [info] Exception resolution/slow path done. Took 4.630390s\n[2022-11-09 05:53:12.677] [Lambda worker] [info] Data processed in 9.89961s 286.29 KB (1320 normal rows) 76.60 KB (134 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:12.677] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:12.677] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:12.677] [Lambda worker] [info] Writing output from 2 parts (286.29 KB, 1320 rows)\n[2022-11-09 05:53:12.677] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:12.677] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:12.677] [s3fs] [info] Writing buffer of size 147294\n[2022-11-09 05:53:12.677] [s3fs] [info] Writing buffer of size 145869\n[2022-11-09 05:53:12.677] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:12.677] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:12.802] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:12.803] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:12.803] [Lambda worker] [info] Took 10.025410s in total\n[2022-11-09 05:53:12.803] [Lambda worker] [info] Paths rows took: normal: 24365 general: 0 interpreter: 22596 unresolved: 134\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2014-10-15.json:1342177280-1610612736"]},{"container":{"reused":true,"requestId":"bf3b6be6-5d1b-4a28-814b-6c41e69a2724","uuid":"12cd0ef5-8150-4642-b074-9c5bf9202a8e","msRemaining":586865,"requestsServed":2,"startTimestamp":1667973146246576408,"deadlineTimestamp":1667973808260000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.279] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.311] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.334] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.334] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.334] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2014-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:01.335] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2014-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:01.336] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.406] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.410] [global] [info] retrieving pythonic sample took: 0.003470s\n[2022-11-09 05:53:01.477] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.478] [global] [info] retrieving pythonic sample took: 0.000266s\n[2022-11-09 05:53:01.488] [hyper specializer] [info] Deserialization of Code context took 0.151182s\n[2022-11-09 05:53:01.488] [hyper specializer] [info] Total Stage Decode took 0.152220s\n[2022-11-09 05:53:01.593] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:01.593] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.594] [fileinputoperator] [info] Filling sample cache for json operator took 0.105794s (1 entries, 0 rows)\n[2022-11-09 05:53:01.627] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:01.758] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:01.886] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.886] [fileinputoperator] [info] Extracting row sample took 0.292574s\n[2022-11-09 05:53:02.034] [hyper specializer] [info] sampling (setInputFiles) took 0.546118s\n[2022-11-09 05:53:02.034] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.034] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.034] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.034] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.034] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.034] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.034] [global] [warning] requested 2000 rows for sampling, but only 88 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.037] [specializing stage optimizer] [info] Row type before retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.037] [specializing stage optimizer] [info] Row type after retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'full_name'->str),(str,'owner'->str),(str,'private'->boolean),(str,'html_url'->str),(str,'description'->str),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->str),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'open_issues_count'->i64),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str),(str,'stargazers'->i64),(str,'master_branch'->str)])\n[2022-11-09 05:53:02.077] [codegen] [warning] could not find column 'repo' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.139] [hyper specializer] [info] specialized to input:  (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.139] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.139] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.140] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.142] [codegen] [info] generating pipeline for (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.146] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])) -> i64\n[2022-11-09 05:53:02.148] [codegen] [info] generating function extract_repo_id_code for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64)) -> i64\n[2022-11-09 05:53:02.150] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> boolean\n[2022-11-09 05:53:02.152] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.154] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.168] [hyper specializer] [info] generated code in 0.028494s\n[2022-11-09 05:53:02.205] [Lambda worker] [info] specialized normal-case type (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.205] [Lambda worker] [info] -- hyperspecialization took 0.870923s\n[2022-11-09 05:53:02.268] [global] [info] TransformStage - Optimization via LLVM passes took 0.062668 ms\n[2022-11-09 05:53:02.268] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.293] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.293] [global] [info] Compiled code paths for stage 0 in 0.09 ms\n[2022-11-09 05:53:02.293] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.492] [Lambda worker] [info] fast path took: 5.198846s\n[2022-11-09 05:53:07.492] [Lambda worker] [info] Input rows processed: normal: 11063 unresolved: 36727\n[2022-11-09 05:53:07.492] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 36727\n[2022-11-09 05:53:07.492] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.492] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.492] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.729] [Lambda worker] [info] Compilation of slow path took 1.237208s\n[2022-11-09 05:53:09.031] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:11.437] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 18348 unresolved: 71\n[2022-11-09 05:53:11.603] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:14.182] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 18288 unresolved: 20\n[2022-11-09 05:53:14.187] [Lambda worker] [info] Exception resolution/slow path done. Took 6.694731s\n[2022-11-09 05:53:14.187] [Lambda worker] [info] Data processed in 11.8937s 5.16 MB (1299 normal rows) 69.00 KB (91 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:14.187] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:14.187] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:14.187] [Lambda worker] [info] Writing output from 2 parts (5.16 MB, 1299 rows)\n[2022-11-09 05:53:14.187] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:14.187] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:14.187] [s3fs] [info] Writing buffer of size 2646921\n[2022-11-09 05:53:14.188] [s3fs] [info] Writing buffer of size 2768174\n[2022-11-09 05:53:14.190] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:14.190] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:14.394] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:14.394] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:14.394] [Lambda worker] [info] Took 12.101022s in total\n[2022-11-09 05:53:14.394] [Lambda worker] [info] Paths rows took: normal: 11063 general: 0 interpreter: 36636 unresolved: 91\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2014-10-15.json:1073741824-1342177280"]},{"container":{"reused":true,"requestId":"acc332de-21ff-47b6-a31d-29ce59e6c976","uuid":"168f14e3-63b4-474b-86ed-e283a53102dd","msRemaining":586850,"requestsServed":2,"startTimestamp":1667973146270291942,"deadlineTimestamp":1667973808254000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.272] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.304] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.326] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.326] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.326] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2014-10-15.json:805306368-1073741824\n[2022-11-09 05:53:01.328] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2014-10-15.json:805306368-1073741824\n[2022-11-09 05:53:01.329] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.398] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.403] [global] [info] retrieving pythonic sample took: 0.003546s\n[2022-11-09 05:53:01.469] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.470] [global] [info] retrieving pythonic sample took: 0.000265s\n[2022-11-09 05:53:01.480] [hyper specializer] [info] Deserialization of Code context took 0.151223s\n[2022-11-09 05:53:01.480] [hyper specializer] [info] Total Stage Decode took 0.152284s\n[2022-11-09 05:53:01.572] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:01.572] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.572] [fileinputoperator] [info] Filling sample cache for json operator took 0.091950s (1 entries, 0 rows)\n[2022-11-09 05:53:01.608] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:01.700] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:01.808] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.808] [fileinputoperator] [info] Extracting row sample took 0.235668s\n[2022-11-09 05:53:01.945] [hyper specializer] [info] sampling (setInputFiles) took 0.464616s\n[2022-11-09 05:53:01.945] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.945] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.945] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.945] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.945] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.945] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:01.945] [global] [warning] requested 2000 rows for sampling, but only 96 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:01.948] [specializing stage optimizer] [info] Row type before retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:01.948] [specializing stage optimizer] [info] Row type after retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'full_name'->str),(str,'owner'->str),(str,'private'->boolean),(str,'html_url'->str),(str,'description'->str),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->str),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'open_issues_count'->i64),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str),(str,'stargazers'->i64),(str,'master_branch'->str)])\n[2022-11-09 05:53:01.986] [codegen] [warning] could not find column 'repo' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.046] [hyper specializer] [info] specialized to input:  (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.046] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.046] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.046] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.049] [codegen] [info] generating pipeline for (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.052] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])) -> i64\n[2022-11-09 05:53:02.054] [codegen] [info] generating function extract_repo_id_code for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64)) -> i64\n[2022-11-09 05:53:02.057] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> boolean\n[2022-11-09 05:53:02.059] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.060] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.076] [hyper specializer] [info] generated code in 0.029785s\n[2022-11-09 05:53:02.110] [Lambda worker] [info] specialized normal-case type (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.111] [Lambda worker] [info] -- hyperspecialization took 0.784251s\n[2022-11-09 05:53:02.174] [global] [info] TransformStage - Optimization via LLVM passes took 0.063724 ms\n[2022-11-09 05:53:02.174] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.200] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.200] [global] [info] Compiled code paths for stage 0 in 0.09 ms\n[2022-11-09 05:53:02.200] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.333] [Lambda worker] [info] fast path took: 5.132767s\n[2022-11-09 05:53:07.333] [Lambda worker] [info] Input rows processed: normal: 10760 unresolved: 38014\n[2022-11-09 05:53:07.333] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 38014\n[2022-11-09 05:53:07.333] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.333] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.333] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.567] [Lambda worker] [info] Compilation of slow path took 1.233295s\n[2022-11-09 05:53:08.707] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:11.390] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 19398 unresolved: 62\n[2022-11-09 05:53:11.478] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:14.197] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 18487 unresolved: 67\n[2022-11-09 05:53:14.201] [Lambda worker] [info] Exception resolution/slow path done. Took 6.867898s\n[2022-11-09 05:53:14.201] [Lambda worker] [info] Data processed in 12.0008s 5.53 MB (1392 normal rows) 84.98 KB (129 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:14.201] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:14.201] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:14.201] [Lambda worker] [info] Writing output from 2 parts (5.53 MB, 1392 rows)\n[2022-11-09 05:53:14.201] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:14.201] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:14.201] [s3fs] [info] Writing buffer of size 2778791\n[2022-11-09 05:53:14.203] [s3fs] [info] Writing buffer of size 3019982\n[2022-11-09 05:53:14.205] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:14.205] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:14.403] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:14.403] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:14.403] [Lambda worker] [info] Took 12.203072s in total\n[2022-11-09 05:53:14.403] [Lambda worker] [info] Paths rows took: normal: 10760 general: 0 interpreter: 37885 unresolved: 129\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2014-10-15.json:805306368-1073741824"]},{"container":{"reused":true,"requestId":"9fe34ad9-b77c-45be-9870-ea54451769cd","uuid":"0a436303-e3c7-4f19-a64c-7e744b4537c4","msRemaining":586605,"requestsServed":2,"startTimestamp":1667973146195428278,"deadlineTimestamp":1667973808244000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.263] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.296] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.318] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.318] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.318] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2014-10-15.json:536870912-805306368\n[2022-11-09 05:53:01.320] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2014-10-15.json:536870912-805306368\n[2022-11-09 05:53:01.321] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.391] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.395] [global] [info] retrieving pythonic sample took: 0.003543s\n[2022-11-09 05:53:01.462] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.463] [global] [info] retrieving pythonic sample took: 0.000284s\n[2022-11-09 05:53:01.473] [hyper specializer] [info] Deserialization of Code context took 0.151964s\n[2022-11-09 05:53:01.473] [hyper specializer] [info] Total Stage Decode took 0.153003s\n[2022-11-09 05:53:01.601] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:01.601] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.601] [fileinputoperator] [info] Filling sample cache for json operator took 0.128341s (1 entries, 0 rows)\n[2022-11-09 05:53:01.655] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:01.769] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:01.887] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.887] [fileinputoperator] [info] Extracting row sample took 0.286299s\n[2022-11-09 05:53:02.038] [hyper specializer] [info] sampling (setInputFiles) took 0.565344s\n[2022-11-09 05:53:02.038] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.039] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.039] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.039] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.039] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.039] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.039] [global] [warning] requested 2000 rows for sampling, but only 93 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.041] [specializing stage optimizer] [info] Row type before retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.041] [specializing stage optimizer] [info] Row type after retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'full_name'->str),(str,'owner'->str),(str,'private'->boolean),(str,'html_url'->str),(str,'description'->str),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->str),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'open_issues_count'->i64),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str),(str,'stargazers'->i64),(str,'master_branch'->str)])\n[2022-11-09 05:53:02.084] [codegen] [warning] could not find column 'repo' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.149] [hyper specializer] [info] specialized to input:  (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.149] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.149] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.149] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.152] [codegen] [info] generating pipeline for (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.155] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])) -> i64\n[2022-11-09 05:53:02.157] [codegen] [info] generating function extract_repo_id_code for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64)) -> i64\n[2022-11-09 05:53:02.160] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> boolean\n[2022-11-09 05:53:02.162] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.163] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.182] [hyper specializer] [info] generated code in 0.033615s\n[2022-11-09 05:53:02.220] [Lambda worker] [info] specialized normal-case type (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->str),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.220] [Lambda worker] [info] -- hyperspecialization took 0.901819s\n[2022-11-09 05:53:02.287] [global] [info] TransformStage - Optimization via LLVM passes took 0.066236 ms\n[2022-11-09 05:53:02.287] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.313] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.313] [global] [info] Compiled code paths for stage 0 in 0.09 ms\n[2022-11-09 05:53:02.313] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.687] [Lambda worker] [info] fast path took: 5.374019s\n[2022-11-09 05:53:07.687] [Lambda worker] [info] Input rows processed: normal: 11388 unresolved: 36553\n[2022-11-09 05:53:07.687] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 36553\n[2022-11-09 05:53:07.687] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.687] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.687] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.908] [Lambda worker] [info] Compilation of slow path took 1.220601s\n[2022-11-09 05:53:09.530] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:11.685] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 18372 unresolved: 16\n[2022-11-09 05:53:12.021] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:14.495] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 18125 unresolved: 40\n[2022-11-09 05:53:14.501] [Lambda worker] [info] Exception resolution/slow path done. Took 6.813363s\n[2022-11-09 05:53:14.501] [Lambda worker] [info] Data processed in 12.1875s 6.65 MB (1638 normal rows) 32.92 KB (56 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:14.501] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:14.501] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:14.501] [Lambda worker] [info] Writing output from 2 parts (6.65 MB, 1638 rows)\n[2022-11-09 05:53:14.501] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:14.501] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:14.501] [s3fs] [info] Writing buffer of size 3437159\n[2022-11-09 05:53:14.503] [s3fs] [info] Writing buffer of size 3532875\n[2022-11-09 05:53:14.505] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:14.505] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:14.637] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:14.638] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:14.638] [Lambda worker] [info] Took 12.324615s in total\n[2022-11-09 05:53:14.638] [Lambda worker] [info] Paths rows took: normal: 11388 general: 0 interpreter: 36497 unresolved: 56\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2014-10-15.json:536870912-805306368"]},{"container":{"reused":true,"requestId":"3218601a-9ca7-441a-a2ef-d4cde6ff781d","uuid":"0b9f8d76-f65f-4693-9812-387968f0e3cd","msRemaining":586547,"requestsServed":2,"startTimestamp":1667973146819037156,"deadlineTimestamp":1667973808401000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.422] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.455] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.478] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.478] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.478] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2015-10-15.json:1879048192-2102880576\n[2022-11-09 05:53:01.479] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2015-10-15.json:1879048192-2102880576\n[2022-11-09 05:53:01.480] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.550] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.555] [global] [info] retrieving pythonic sample took: 0.003559s\n[2022-11-09 05:53:01.622] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.693] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.693] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.693] [fileinputoperator] [info] Filling sample cache for json operator took 0.069798s (1 entries, 0 rows)\n[2022-11-09 05:53:01.723] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.875] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.051] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.051] [fileinputoperator] [info] Extracting row sample took 0.358401s\n[2022-11-09 05:53:02.097] [global] [info] retrieving pythonic sample took: 0.474618s\n[2022-11-09 05:53:02.107] [hyper specializer] [info] Deserialization of Code context took 0.627175s\n[2022-11-09 05:53:02.108] [hyper specializer] [info] Total Stage Decode took 0.628235s\n[2022-11-09 05:53:02.170] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:1879048192-2102880576 on 256.00 KB\n[2022-11-09 05:53:02.170] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.170] [fileinputoperator] [info] Filling sample cache for json operator took 0.032956s (1 entries, 0 rows)\n[2022-11-09 05:53:02.197] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:1879048192-2102880576 on 256.00 KB\n[2022-11-09 05:53:02.331] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:1879048192-2102880576 on 256.00 KB\n[2022-11-09 05:53:02.503] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.503] [fileinputoperator] [info] Extracting row sample took 0.333197s\n[2022-11-09 05:53:02.712] [hyper specializer] [info] sampling (setInputFiles) took 0.603979s\n[2022-11-09 05:53:02.712] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.712] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.712] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.712] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.712] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.712] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.712] [global] [warning] requested 2000 rows for sampling, but only 166 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.719] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.719] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.778] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.981] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.981] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.981] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.982] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.984] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.987] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.989] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.991] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.993] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.994] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.001] [hyper specializer] [info] generated code in 0.019715s\n[2022-11-09 05:53:03.056] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.056] [Lambda worker] [info] -- hyperspecialization took 1.578170s\n[2022-11-09 05:53:03.092] [global] [info] TransformStage - Optimization via LLVM passes took 0.035461 ms\n[2022-11-09 05:53:03.092] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.105] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.105] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.105] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:05.868] [Lambda worker] [info] fast path took: 2.763090s\n[2022-11-09 05:53:05.868] [Lambda worker] [info] Input rows processed: normal: 9594 unresolved: 64511\n[2022-11-09 05:53:05.868] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 64511\n[2022-11-09 05:53:05.868] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:05.868] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:05.868] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:07.071] [Lambda worker] [info] Compilation of slow path took 1.202499s\n[2022-11-09 05:53:10.778] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 31463 unresolved: 0\n[2022-11-09 05:53:14.783] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 33048 unresolved: 0\n[2022-11-09 05:53:14.787] [Lambda worker] [info] Exception resolution/slow path done. Took 8.918397s\n[2022-11-09 05:53:14.787] [Lambda worker] [info] Data processed in 11.6816s 44.53 KB (1923 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:14.787] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:14.787] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:14.787] [Lambda worker] [info] Writing output from 2 parts (44.53 KB, 1923 rows)\n[2022-11-09 05:53:14.787] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:14.787] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:14.787] [s3fs] [info] Writing buffer of size 22264\n[2022-11-09 05:53:14.787] [s3fs] [info] Writing buffer of size 23337\n[2022-11-09 05:53:14.787] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:14.787] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:14.853] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:14.853] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:14.853] [Lambda worker] [info] Took 11.748072s in total\n[2022-11-09 05:53:14.853] [Lambda worker] [info] Paths rows took: normal: 9594 general: 0 interpreter: 64511 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2015-10-15.json:1879048192-2102880576"]},{"container":{"reused":true,"requestId":"22334a04-6123-4e48-9bee-08247a52fdc9","uuid":"3e80fc7e-c6e8-42c7-bcc4-295c2358163e","msRemaining":586281,"requestsServed":2,"startTimestamp":1667973146226507317,"deadlineTimestamp":1667973808277000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.295] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.328] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.351] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.351] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.351] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2014-10-15.json:1610612736-1879048192\n[2022-11-09 05:53:01.352] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2014-10-15.json:1610612736-1879048192\n[2022-11-09 05:53:01.353] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.424] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.429] [global] [info] retrieving pythonic sample took: 0.003696s\n[2022-11-09 05:53:01.495] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.580] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.580] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.581] [fileinputoperator] [info] Filling sample cache for json operator took 0.084236s (1 entries, 0 rows)\n[2022-11-09 05:53:01.620] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.787] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.964] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.964] [fileinputoperator] [info] Extracting row sample took 0.383771s\n[2022-11-09 05:53:02.011] [global] [info] retrieving pythonic sample took: 0.514745s\n[2022-11-09 05:53:02.021] [hyper specializer] [info] Deserialization of Code context took 0.667527s\n[2022-11-09 05:53:02.021] [hyper specializer] [info] Total Stage Decode took 0.668577s\n[2022-11-09 05:53:02.116] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:02.116] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.116] [fileinputoperator] [info] Filling sample cache for json operator took 0.066635s (1 entries, 0 rows)\n[2022-11-09 05:53:02.168] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:02.267] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:02.412] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.412] [fileinputoperator] [info] Extracting row sample took 0.295774s\n[2022-11-09 05:53:02.585] [hyper specializer] [info] sampling (setInputFiles) took 0.564527s\n[2022-11-09 05:53:02.586] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.586] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.586] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.586] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.586] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.586] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.586] [global] [warning] requested 2000 rows for sampling, but only 84 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.589] [specializing stage optimizer] [info] Row type before retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.589] [specializing stage optimizer] [info] Row type after retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'full_name'->str),(str,'owner'->str),(str,'private'->boolean),(str,'html_url'->str),(str,'description'->str),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->str),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'open_issues_count'->i64),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str),(str,'stargazers'->i64),(str,'master_branch'->str)])\n[2022-11-09 05:53:02.636] [codegen] [warning] could not find column 'repo' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.711] [hyper specializer] [info] specialized to input:  (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.711] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.711] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.711] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.714] [codegen] [info] generating pipeline for (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.717] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])) -> i64\n[2022-11-09 05:53:02.720] [codegen] [info] generating function extract_repo_id_code for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64)) -> i64\n[2022-11-09 05:53:02.723] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> boolean\n[2022-11-09 05:53:02.725] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.726] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.741] [hyper specializer] [info] generated code in 0.030471s\n[2022-11-09 05:53:02.785] [Lambda worker] [info] specialized normal-case type (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.785] [Lambda worker] [info] -- hyperspecialization took 1.434760s\n[2022-11-09 05:53:02.850] [global] [info] TransformStage - Optimization via LLVM passes took 0.064067 ms\n[2022-11-09 05:53:02.850] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.876] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.876] [global] [info] Compiled code paths for stage 0 in 0.09 ms\n[2022-11-09 05:53:02.876] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.287] [Lambda worker] [info] fast path took: 5.411039s\n[2022-11-09 05:53:08.287] [Lambda worker] [info] Input rows processed: normal: 12117 unresolved: 34925\n[2022-11-09 05:53:08.287] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 34925\n[2022-11-09 05:53:08.287] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.287] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.287] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.520] [Lambda worker] [info] Compilation of slow path took 1.233022s\n[2022-11-09 05:53:09.628] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:12.132] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 17644 unresolved: 49\n[2022-11-09 05:53:12.225] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:14.797] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 17187 unresolved: 45\n[2022-11-09 05:53:14.802] [Lambda worker] [info] Exception resolution/slow path done. Took 6.514938s\n[2022-11-09 05:53:14.802] [Lambda worker] [info] Data processed in 11.9262s 5.00 MB (1259 normal rows) 59.87 KB (94 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:14.802] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:14.802] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:14.803] [Lambda worker] [info] Writing output from 2 parts (5.00 MB, 1259 rows)\n[2022-11-09 05:53:14.803] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:14.803] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:14.803] [s3fs] [info] Writing buffer of size 2592995\n[2022-11-09 05:53:14.805] [s3fs] [info] Writing buffer of size 2646613\n[2022-11-09 05:53:14.807] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:14.807] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:14.995] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:14.995] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:14.995] [Lambda worker] [info] Took 12.118817s in total\n[2022-11-09 05:53:14.995] [Lambda worker] [info] Paths rows took: normal: 12117 general: 0 interpreter: 34831 unresolved: 94\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2014-10-15.json:1610612736-1879048192"]},{"container":{"reused":true,"requestId":"f5625daa-d20a-4a1b-8409-8f040e97e48e","uuid":"1e827b2a-3ac2-481b-8f0d-f8667e89bf84","msRemaining":586043,"requestsServed":2,"startTimestamp":1667973146174094804,"deadlineTimestamp":1667973808290000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.309] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.342] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.365] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.365] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.365] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2014-10-15.json:1879048192-2147483648\n[2022-11-09 05:53:01.366] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2014-10-15.json:1879048192-2147483648\n[2022-11-09 05:53:01.367] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.441] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.529] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.529] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.529] [fileinputoperator] [info] Filling sample cache for json operator took 0.084151s (1 entries, 0 rows)\n[2022-11-09 05:53:01.563] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.725] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.903] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.903] [fileinputoperator] [info] Extracting row sample took 0.374011s\n[2022-11-09 05:53:01.951] [global] [info] retrieving pythonic sample took: 0.509417s\n[2022-11-09 05:53:02.022] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.023] [global] [info] retrieving pythonic sample took: 0.000271s\n[2022-11-09 05:53:02.034] [hyper specializer] [info] Deserialization of Code context took 0.666678s\n[2022-11-09 05:53:02.034] [hyper specializer] [info] Total Stage Decode took 0.667733s\n[2022-11-09 05:53:02.299] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.299] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.299] [fileinputoperator] [info] Filling sample cache for json operator took 0.265349s (1 entries, 0 rows)\n[2022-11-09 05:53:02.340] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.499] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.641] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.641] [fileinputoperator] [info] Extracting row sample took 0.341518s\n[2022-11-09 05:53:02.817] [hyper specializer] [info] sampling (setInputFiles) took 0.783127s\n[2022-11-09 05:53:02.818] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.818] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.818] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.818] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.818] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.818] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.818] [global] [warning] requested 2000 rows for sampling, but only 91 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.821] [specializing stage optimizer] [info] Row type before retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.821] [specializing stage optimizer] [info] Row type after retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'full_name'->str),(str,'owner'->str),(str,'private'->boolean),(str,'html_url'->str),(str,'description'->str),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->str),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'open_issues_count'->i64),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str),(str,'stargazers'->i64),(str,'master_branch'->str)])\n[2022-11-09 05:53:02.869] [codegen] [warning] could not find column 'repo' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.947] [hyper specializer] [info] specialized to input:  (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.947] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.947] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.977] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.980] [codegen] [info] generating pipeline for (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.984] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])) -> i64\n[2022-11-09 05:53:02.987] [codegen] [info] generating function extract_repo_id_code for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64)) -> i64\n[2022-11-09 05:53:02.990] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> boolean\n[2022-11-09 05:53:02.992] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.993] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.010] [hyper specializer] [info] generated code in 0.033074s\n[2022-11-09 05:53:03.055] [Lambda worker] [info] specialized normal-case type (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->Option[str]),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.055] [Lambda worker] [info] -- hyperspecialization took 1.689988s\n[2022-11-09 05:53:03.125] [global] [info] TransformStage - Optimization via LLVM passes took 0.069836 ms\n[2022-11-09 05:53:03.125] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.152] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.153] [global] [info] Compiled code paths for stage 0 in 0.10 ms\n[2022-11-09 05:53:03.153] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.604] [Lambda worker] [info] fast path took: 5.451119s\n[2022-11-09 05:53:08.604] [Lambda worker] [info] Input rows processed: normal: 12817 unresolved: 34506\n[2022-11-09 05:53:08.604] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 34506\n[2022-11-09 05:53:08.604] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.604] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.604] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.850] [Lambda worker] [info] Compilation of slow path took 1.245887s\n[2022-11-09 05:53:09.946] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:12.418] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 17164 unresolved: 25\n[2022-11-09 05:53:12.767] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:15.054] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 17299 unresolved: 18\n[2022-11-09 05:53:15.058] [Lambda worker] [info] Exception resolution/slow path done. Took 6.453990s\n[2022-11-09 05:53:15.058] [Lambda worker] [info] Data processed in 11.9053s 5.17 MB (1303 normal rows) 23.81 KB (43 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:15.058] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:15.058] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:15.058] [Lambda worker] [info] Writing output from 2 parts (5.17 MB, 1303 rows)\n[2022-11-09 05:53:15.058] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:15.058] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:15.058] [s3fs] [info] Writing buffer of size 2572441\n[2022-11-09 05:53:15.060] [s3fs] [info] Writing buffer of size 2843901\n[2022-11-09 05:53:15.062] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:15.062] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:15.245] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:15.245] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:15.246] [Lambda worker] [info] Took 12.092761s in total\n[2022-11-09 05:53:15.246] [Lambda worker] [info] Paths rows took: normal: 12817 general: 0 interpreter: 34463 unresolved: 43\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2014-10-15.json:1879048192-2147483648"]},{"container":{"reused":true,"requestId":"f4589a13-8265-4805-80b1-180c08d80e34","uuid":"30207079-d640-49fc-b9e0-29181dce9426","msRemaining":585709,"requestsServed":2,"startTimestamp":1667973146250200127,"deadlineTimestamp":1667973808309000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.329] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.366] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.388] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.389] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.389] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2014-10-15.json:2147483648-2415919104\n[2022-11-09 05:53:01.390] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2014-10-15.json:2147483648-2415919104\n[2022-11-09 05:53:01.391] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.462] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.467] [global] [info] retrieving pythonic sample took: 0.003615s\n[2022-11-09 05:53:01.534] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.613] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.613] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.613] [fileinputoperator] [info] Filling sample cache for json operator took 0.078041s (1 entries, 0 rows)\n[2022-11-09 05:53:01.647] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.813] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.990] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.991] [fileinputoperator] [info] Extracting row sample took 0.377404s\n[2022-11-09 05:53:02.038] [global] [info] retrieving pythonic sample took: 0.503385s\n[2022-11-09 05:53:02.049] [hyper specializer] [info] Deserialization of Code context took 0.657960s\n[2022-11-09 05:53:02.049] [hyper specializer] [info] Total Stage Decode took 0.658988s\n[2022-11-09 05:53:02.116] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:02.116] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.116] [fileinputoperator] [info] Filling sample cache for json operator took 0.035948s (1 entries, 0 rows)\n[2022-11-09 05:53:02.186] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:02.307] [global] [info] sampled s3://tuplex-public/data/github_daily/2014-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:02.446] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.446] [fileinputoperator] [info] Extracting row sample took 0.329373s\n[2022-11-09 05:53:02.617] [hyper specializer] [info] sampling (setInputFiles) took 0.568003s\n[2022-11-09 05:53:02.617] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.617] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.617] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.618] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.618] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.618] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.618] [global] [warning] requested 2000 rows for sampling, but only 89 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.621] [specializing stage optimizer] [info] Row type before retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.621] [specializing stage optimizer] [info] Row type after retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'full_name'->str),(str,'owner'->str),(str,'private'->boolean),(str,'html_url'->str),(str,'description'->str),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->str),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'open_issues_count'->i64),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str),(str,'stargazers'->i64),(str,'master_branch'->str)])\n[2022-11-09 05:53:02.667] [codegen] [warning] could not find column 'repo' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.740] [hyper specializer] [info] specialized to input:  (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])\n[2022-11-09 05:53:02.740] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.740] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.740] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.743] [codegen] [info] generating pipeline for (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.746] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)])) -> i64\n[2022-11-09 05:53:02.749] [codegen] [info] generating function extract_repo_id_code for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64)) -> i64\n[2022-11-09 05:53:02.752] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> boolean\n[2022-11-09 05:53:02.754] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.756] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.771] [hyper specializer] [info] generated code in 0.031760s\n[2022-11-09 05:53:02.814] [Lambda worker] [info] specialized normal-case type (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'name'->str),(str,'company'->str),(str,'blog'->str),(str,'location'->str),(str,'email'->str)],Struct[(str,'archive_url'->str),(str,'assignees_url'->str),(str,'blobs_url'->str),(str,'branches_url'->str),(str,'clone_url'->str),(str,'collaborators_url'->str),(str,'comments_url'->str),(str,'commits_url'->str),(str,'compare_url'->str),(str,'contents_url'->str),(str,'contributors_url'->str),(str,'created_at'->str),(str,'default_branch'->str),(str,'description'->Option[str]),(str,'downloads_url'->str),(str,'events_url'->str),(str,'fork'->boolean),(str,'forks'->i64),(str,'forks_count'->i64),(str,'forks_url'->str),(str,'full_name'->str),(str,'git_commits_url'->str),(str,'git_refs_url'->str),(str,'git_tags_url'->str),(str,'git_url'->str),(str,'has_downloads'->boolean),(str,'has_issues'->boolean),(str,'has_pages'->boolean),(str,'has_wiki'->boolean),(str,'homepage'->Option[str]),(str,'hooks_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'issue_comment_url'->str),(str,'issue_events_url'->str),(str,'issues_url'->str),(str,'keys_url'->str),(str,'labels_url'->str),(str,'language'->str),(str,'languages_url'->str),(str,'master_branch'->str),(str,'merges_url'->str),(str,'milestones_url'->str),(str,'mirror_url'->null),(str,'name'->str),(str,'notifications_url'->str),(str,'open_issues'->i64),(str,'open_issues_count'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'pulls_url'->str),(str,'pushed_at'->str),(str,'releases_url'->str),(str,'size'->i64),(str,'ssh_url'->str),(str,'stargazers'->i64),(str,'stargazers_count'->i64),(str,'stargazers_url'->str),(str,'statuses_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'svn_url'->str),(str,'tags_url'->str),(str,'teams_url'->str),(str,'trees_url'->str),(str,'updated_at'->str),(str,'url'->str),(str,'watchers'->i64),(str,'watchers_count'->i64)]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.815] [Lambda worker] [info] -- hyperspecialization took 1.425990s\n[2022-11-09 05:53:02.885] [global] [info] TransformStage - Optimization via LLVM passes took 0.070186 ms\n[2022-11-09 05:53:02.885] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.911] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.912] [global] [info] Compiled code paths for stage 0 in 0.10 ms\n[2022-11-09 05:53:02.912] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.226] [Lambda worker] [info] fast path took: 5.314710s\n[2022-11-09 05:53:08.226] [Lambda worker] [info] Input rows processed: normal: 11378 unresolved: 37812\n[2022-11-09 05:53:08.226] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 37812\n[2022-11-09 05:53:08.226] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.226] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.226] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.491] [Lambda worker] [info] Compilation of slow path took 1.264064s\n[2022-11-09 05:53:09.673] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:12.432] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 19023 unresolved: 8\n[2022-11-09 05:53:12.555] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:15.380] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 18774 unresolved: 7\n[2022-11-09 05:53:15.385] [Lambda worker] [info] Exception resolution/slow path done. Took 7.158676s\n[2022-11-09 05:53:15.385] [Lambda worker] [info] Data processed in 12.4736s 8.79 MB (2163 normal rows) 13.30 KB (15 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:15.385] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:15.385] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:15.385] [Lambda worker] [info] Writing output from 2 parts (8.79 MB, 2163 rows)\n[2022-11-09 05:53:15.385] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:15.385] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:15.385] [s3fs] [info] Writing buffer of size 4487571\n[2022-11-09 05:53:15.388] [s3fs] [info] Writing buffer of size 4734303\n[2022-11-09 05:53:15.391] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part3.csv.csv\n[2022-11-09 05:53:15.391] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:15.598] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:15.599] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:15.599] [Lambda worker] [info] Took 12.687183s in total\n[2022-11-09 05:53:15.599] [Lambda worker] [info] Paths rows took: normal: 11378 general: 0 interpreter: 37797 unresolved: 15\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2014-10-15.json:2147483648-2415919104"]},{"container":{"reused":true,"requestId":"c7ca8d5e-390a-4156-9c52-777ac333f781","uuid":"7cea9d3c-c936-46ea-abdd-49a504cfd952","msRemaining":585571,"requestsServed":2,"startTimestamp":1667973146813522125,"deadlineTimestamp":1667973809163000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.183] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.216] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.239] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.239] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.239] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:2147483648-2415919104\n[2022-11-09 05:53:02.240] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:2147483648-2415919104\n[2022-11-09 05:53:02.241] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.311] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.315] [global] [info] retrieving pythonic sample took: 0.003461s\n[2022-11-09 05:53:02.381] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.382] [global] [info] retrieving pythonic sample took: 0.000246s\n[2022-11-09 05:53:02.392] [hyper specializer] [info] Deserialization of Code context took 0.150887s\n[2022-11-09 05:53:02.392] [hyper specializer] [info] Total Stage Decode took 0.151923s\n[2022-11-09 05:53:02.530] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:02.530] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.530] [fileinputoperator] [info] Filling sample cache for json operator took 0.137845s (1 entries, 0 rows)\n[2022-11-09 05:53:02.578] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:02.695] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:02.787] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.787] [fileinputoperator] [info] Extracting row sample took 0.257234s\n[2022-11-09 05:53:02.908] [hyper specializer] [info] sampling (setInputFiles) took 0.515646s\n[2022-11-09 05:53:02.908] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.908] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.908] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.908] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.908] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.908] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.908] [global] [warning] requested 2000 rows for sampling, but only 128 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.912] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.912] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.948] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.099] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.099] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.099] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.099] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.102] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.105] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.107] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.108] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.110] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.111] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.118] [hyper specializer] [info] generated code in 0.018841s\n[2022-11-09 05:53:03.149] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.149] [Lambda worker] [info] -- hyperspecialization took 0.910287s\n[2022-11-09 05:53:03.185] [global] [info] TransformStage - Optimization via LLVM passes took 0.035572 ms\n[2022-11-09 05:53:03.185] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.197] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.197] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.197] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.963] [Lambda worker] [info] fast path took: 4.765516s\n[2022-11-09 05:53:07.963] [Lambda worker] [info] Input rows processed: normal: 6051 unresolved: 55099\n[2022-11-09 05:53:07.963] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 55099\n[2022-11-09 05:53:07.963] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.963] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.963] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.164] [Lambda worker] [info] Compilation of slow path took 1.200928s\n[2022-11-09 05:53:12.783] [Lambda worker] [info] Resolved buffer, compiled: 2511 interpreted: 24511 unresolved: 0\n[2022-11-09 05:53:16.535] [Lambda worker] [info] Resolved buffer, compiled: 2640 interpreted: 25437 unresolved: 0\n[2022-11-09 05:53:16.542] [Lambda worker] [info] Exception resolution/slow path done. Took 8.578879s\n[2022-11-09 05:53:16.542] [Lambda worker] [info] Data processed in 13.3446s 34.65 KB (1442 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:16.542] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:16.542] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:16.542] [Lambda worker] [info] Writing output from 2 parts (34.65 KB, 1442 rows)\n[2022-11-09 05:53:16.542] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:16.542] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:16.542] [s3fs] [info] Writing buffer of size 17637\n[2022-11-09 05:53:16.542] [s3fs] [info] Writing buffer of size 17846\n[2022-11-09 05:53:16.542] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:16.542] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:16.591] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:16.591] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:16.591] [Lambda worker] [info] Took 13.393678s in total\n[2022-11-09 05:53:16.591] [Lambda worker] [info] Paths rows took: normal: 6051 general: 5151 interpreter: 49948 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:2147483648-2415919104"]},{"container":{"reused":true,"requestId":"a45611fa-c570-45e2-8764-3f7c0943251d","uuid":"97eb6e3e-234c-416c-a6c0-2b676e4e629f","msRemaining":585125,"requestsServed":2,"startTimestamp":1667973147367252314,"deadlineTimestamp":1667973808892000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.911] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.944] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.967] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.967] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.967] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:3221225472-3489660928\n[2022-11-09 05:53:01.968] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:3221225472-3489660928\n[2022-11-09 05:53:01.969] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.041] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.045] [global] [info] retrieving pythonic sample took: 0.003697s\n[2022-11-09 05:53:02.111] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.113] [global] [info] retrieving pythonic sample took: 0.000283s\n[2022-11-09 05:53:02.122] [hyper specializer] [info] Deserialization of Code context took 0.153067s\n[2022-11-09 05:53:02.122] [hyper specializer] [info] Total Stage Decode took 0.154085s\n[2022-11-09 05:53:02.233] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:3221225472-3489660928 on 256.00 KB\n[2022-11-09 05:53:02.233] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.233] [fileinputoperator] [info] Filling sample cache for json operator took 0.111038s (1 entries, 0 rows)\n[2022-11-09 05:53:02.277] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:3221225472-3489660928 on 256.00 KB\n[2022-11-09 05:53:02.372] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:3221225472-3489660928 on 256.00 KB\n[2022-11-09 05:53:02.502] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.502] [fileinputoperator] [info] Extracting row sample took 0.268206s\n[2022-11-09 05:53:02.641] [hyper specializer] [info] sampling (setInputFiles) took 0.518371s\n[2022-11-09 05:53:02.641] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.641] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.641] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.641] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.641] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.641] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.641] [global] [warning] requested 2000 rows for sampling, but only 135 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.646] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.646] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.685] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.852] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.852] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.852] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.852] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.855] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.858] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.860] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.861] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.863] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.864] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.871] [hyper specializer] [info] generated code in 0.019093s\n[2022-11-09 05:53:02.907] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.907] [Lambda worker] [info] -- hyperspecialization took 0.940407s\n[2022-11-09 05:53:02.943] [global] [info] TransformStage - Optimization via LLVM passes took 0.035695 ms\n[2022-11-09 05:53:02.943] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.955] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.955] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.955] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.266] [Lambda worker] [info] fast path took: 4.310779s\n[2022-11-09 05:53:07.266] [Lambda worker] [info] Input rows processed: normal: 9331 unresolved: 64911\n[2022-11-09 05:53:07.266] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 64911\n[2022-11-09 05:53:07.266] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.266] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.266] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.494] [Lambda worker] [info] Compilation of slow path took 1.228069s\n[2022-11-09 05:53:12.455] [Lambda worker] [info] Resolved buffer, compiled: 3471 interpreted: 28475 unresolved: 0\n[2022-11-09 05:53:16.638] [Lambda worker] [info] Resolved buffer, compiled: 3299 interpreted: 29666 unresolved: 0\n[2022-11-09 05:53:16.644] [Lambda worker] [info] Exception resolution/slow path done. Took 9.377612s\n[2022-11-09 05:53:16.644] [Lambda worker] [info] Data processed in 13.6886s 53.80 KB (2251 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:16.644] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:16.644] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:16.644] [Lambda worker] [info] Writing output from 2 parts (53.80 KB, 2251 rows)\n[2022-11-09 05:53:16.644] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:16.644] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:16.644] [s3fs] [info] Writing buffer of size 27371\n[2022-11-09 05:53:16.644] [s3fs] [info] Writing buffer of size 27719\n[2022-11-09 05:53:16.644] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:16.644] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:16.765] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:16.766] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:16.766] [Lambda worker] [info] Took 13.810119s in total\n[2022-11-09 05:53:16.766] [Lambda worker] [info] Paths rows took: normal: 9331 general: 6770 interpreter: 58141 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:3221225472-3489660928"]},{"container":{"reused":true,"requestId":"d150a83f-1f32-4086-8910-50dd00ef088f","uuid":"8482856b-42f5-4a71-908c-a67530b6e342","msRemaining":585269,"requestsServed":2,"startTimestamp":1667973146508675401,"deadlineTimestamp":1667973809064000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.083] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.116] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.139] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.139] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.139] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:7516192768-7784628224\n[2022-11-09 05:53:02.140] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:7516192768-7784628224\n[2022-11-09 05:53:02.141] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.211] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.216] [global] [info] retrieving pythonic sample took: 0.003612s\n[2022-11-09 05:53:02.282] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.345] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.345] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.345] [fileinputoperator] [info] Filling sample cache for json operator took 0.061923s (1 entries, 0 rows)\n[2022-11-09 05:53:02.369] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.522] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.697] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.697] [fileinputoperator] [info] Extracting row sample took 0.351496s\n[2022-11-09 05:53:02.744] [global] [info] retrieving pythonic sample took: 0.460978s\n[2022-11-09 05:53:02.754] [hyper specializer] [info] Deserialization of Code context took 0.612828s\n[2022-11-09 05:53:02.754] [hyper specializer] [info] Total Stage Decode took 0.613863s\n[2022-11-09 05:53:02.823] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:7516192768-7784628224 on 256.00 KB\n[2022-11-09 05:53:02.823] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.823] [fileinputoperator] [info] Filling sample cache for json operator took 0.040073s (1 entries, 0 rows)\n[2022-11-09 05:53:02.850] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:7516192768-7784628224 on 256.00 KB\n[2022-11-09 05:53:02.939] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:7516192768-7784628224 on 256.00 KB\n[2022-11-09 05:53:03.063] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.063] [fileinputoperator] [info] Extracting row sample took 0.239068s\n[2022-11-09 05:53:03.231] [hyper specializer] [info] sampling (setInputFiles) took 0.476460s\n[2022-11-09 05:53:03.231] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.231] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.231] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.231] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.231] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.231] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.231] [global] [warning] requested 2000 rows for sampling, but only 177 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.238] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.238] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.285] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.449] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.449] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.449] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.449] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.452] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.454] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.456] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.458] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.460] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.461] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.468] [hyper specializer] [info] generated code in 0.019065s\n[2022-11-09 05:53:03.511] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.511] [Lambda worker] [info] -- hyperspecialization took 1.371958s\n[2022-11-09 05:53:03.548] [global] [info] TransformStage - Optimization via LLVM passes took 0.036692 ms\n[2022-11-09 05:53:03.548] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.561] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.561] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.561] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.301] [Lambda worker] [info] fast path took: 3.739591s\n[2022-11-09 05:53:07.301] [Lambda worker] [info] Input rows processed: normal: 8768 unresolved: 64301\n[2022-11-09 05:53:07.301] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 64301\n[2022-11-09 05:53:07.301] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.301] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.301] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.529] [Lambda worker] [info] Compilation of slow path took 1.227995s\n[2022-11-09 05:53:12.518] [Lambda worker] [info] Resolved buffer, compiled: 2903 interpreted: 29102 unresolved: 0\n[2022-11-09 05:53:16.691] [Lambda worker] [info] Resolved buffer, compiled: 3016 interpreted: 29280 unresolved: 0\n[2022-11-09 05:53:16.697] [Lambda worker] [info] Exception resolution/slow path done. Took 9.395536s\n[2022-11-09 05:53:16.697] [Lambda worker] [info] Data processed in 13.1353s 38.92 KB (1624 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:16.697] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:16.697] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:16.697] [Lambda worker] [info] Writing output from 2 parts (38.92 KB, 1624 rows)\n[2022-11-09 05:53:16.697] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:16.697] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:16.697] [s3fs] [info] Writing buffer of size 18585\n[2022-11-09 05:53:16.697] [s3fs] [info] Writing buffer of size 21272\n[2022-11-09 05:53:16.697] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:16.697] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:16.794] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:16.794] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:16.794] [Lambda worker] [info] Took 13.233050s in total\n[2022-11-09 05:53:16.794] [Lambda worker] [info] Paths rows took: normal: 8768 general: 5919 interpreter: 58382 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:7516192768-7784628224"]},{"container":{"reused":true,"requestId":"32596fec-aa79-4785-8542-cf471b9b2fb6","uuid":"3abc146c-1317-427d-8cef-d47c7d5ee840","msRemaining":585114,"requestsServed":2,"startTimestamp":1667973147244455891,"deadlineTimestamp":1667973809148000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.168] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.201] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.224] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.224] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.224] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:1879048192-2147483648\n[2022-11-09 05:53:02.225] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:1879048192-2147483648\n[2022-11-09 05:53:02.226] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.296] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.300] [global] [info] retrieving pythonic sample took: 0.003456s\n[2022-11-09 05:53:02.367] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.368] [global] [info] retrieving pythonic sample took: 0.000257s\n[2022-11-09 05:53:02.378] [hyper specializer] [info] Deserialization of Code context took 0.151597s\n[2022-11-09 05:53:02.378] [hyper specializer] [info] Total Stage Decode took 0.152657s\n[2022-11-09 05:53:02.450] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.450] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.450] [fileinputoperator] [info] Filling sample cache for json operator took 0.072497s (1 entries, 0 rows)\n[2022-11-09 05:53:02.489] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.583] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.694] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.694] [fileinputoperator] [info] Extracting row sample took 0.243935s\n[2022-11-09 05:53:02.839] [hyper specializer] [info] sampling (setInputFiles) took 0.461380s\n[2022-11-09 05:53:02.840] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.840] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.840] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.840] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.840] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.840] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.840] [global] [warning] requested 2000 rows for sampling, but only 101 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.843] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.843] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.884] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.070] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.070] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.070] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.070] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.073] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.076] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.077] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.079] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.080] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.082] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.089] [hyper specializer] [info] generated code in 0.018999s\n[2022-11-09 05:53:03.126] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.126] [Lambda worker] [info] -- hyperspecialization took 0.901994s\n[2022-11-09 05:53:03.162] [global] [info] TransformStage - Optimization via LLVM passes took 0.036265 ms\n[2022-11-09 05:53:03.162] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.175] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.175] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.175] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.447] [Lambda worker] [info] fast path took: 5.272295s\n[2022-11-09 05:53:08.447] [Lambda worker] [info] Input rows processed: normal: 6108 unresolved: 53699\n[2022-11-09 05:53:08.447] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 53699\n[2022-11-09 05:53:08.447] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.447] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.447] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.675] [Lambda worker] [info] Compilation of slow path took 1.227365s\n[2022-11-09 05:53:13.312] [Lambda worker] [info] Resolved buffer, compiled: 2122 interpreted: 24679 unresolved: 0\n[2022-11-09 05:53:16.938] [Lambda worker] [info] Resolved buffer, compiled: 2178 interpreted: 24720 unresolved: 0\n[2022-11-09 05:53:16.944] [Lambda worker] [info] Exception resolution/slow path done. Took 8.496507s\n[2022-11-09 05:53:16.944] [Lambda worker] [info] Data processed in 13.769s 33.07 KB (1375 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:16.944] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:16.944] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:16.944] [Lambda worker] [info] Writing output from 2 parts (33.07 KB, 1375 rows)\n[2022-11-09 05:53:16.944] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:16.944] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:16.944] [s3fs] [info] Writing buffer of size 15805\n[2022-11-09 05:53:16.944] [s3fs] [info] Writing buffer of size 18054\n[2022-11-09 05:53:16.944] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:16.944] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.032] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.033] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.033] [Lambda worker] [info] Took 13.858152s in total\n[2022-11-09 05:53:17.033] [Lambda worker] [info] Paths rows took: normal: 6108 general: 4300 interpreter: 49399 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:1879048192-2147483648"]},{"container":{"reused":true,"requestId":"63807f26-30fd-409e-9294-5c6e3dbb122d","uuid":"0abd90ed-c049-4211-8d36-dc19860e1c1b","msRemaining":585400,"requestsServed":2,"startTimestamp":1667973146950776054,"deadlineTimestamp":1667973809500000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.519] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.552] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.575] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.575] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.575] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:11274289152-11542724608\n[2022-11-09 05:53:02.576] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:11274289152-11542724608\n[2022-11-09 05:53:02.577] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.646] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.651] [global] [info] retrieving pythonic sample took: 0.003414s\n[2022-11-09 05:53:02.717] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.782] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.782] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.782] [fileinputoperator] [info] Filling sample cache for json operator took 0.064185s (1 entries, 0 rows)\n[2022-11-09 05:53:02.805] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.955] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.132] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.132] [fileinputoperator] [info] Extracting row sample took 0.349384s\n[2022-11-09 05:53:03.178] [global] [info] retrieving pythonic sample took: 0.460383s\n[2022-11-09 05:53:03.188] [hyper specializer] [info] Deserialization of Code context took 0.611488s\n[2022-11-09 05:53:03.188] [hyper specializer] [info] Total Stage Decode took 0.612530s\n[2022-11-09 05:53:03.292] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:11274289152-11542724608 on 256.00 KB\n[2022-11-09 05:53:03.292] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.292] [fileinputoperator] [info] Filling sample cache for json operator took 0.074293s (1 entries, 0 rows)\n[2022-11-09 05:53:03.339] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:11274289152-11542724608 on 256.00 KB\n[2022-11-09 05:53:03.425] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:11274289152-11542724608 on 256.00 KB\n[2022-11-09 05:53:03.556] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.556] [fileinputoperator] [info] Extracting row sample took 0.263704s\n[2022-11-09 05:53:03.723] [hyper specializer] [info] sampling (setInputFiles) took 0.534172s\n[2022-11-09 05:53:03.723] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.723] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.723] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.723] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.723] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.723] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.723] [global] [warning] requested 2000 rows for sampling, but only 165 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.730] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.730] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.777] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.948] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.948] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.948] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.948] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.950] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.953] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.955] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.957] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.959] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.960] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.967] [hyper specializer] [info] generated code in 0.019611s\n[2022-11-09 05:53:04.011] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:04.011] [Lambda worker] [info] -- hyperspecialization took 1.436269s\n[2022-11-09 05:53:04.047] [global] [info] TransformStage - Optimization via LLVM passes took 0.036218 ms\n[2022-11-09 05:53:04.047] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:04.060] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:04.060] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:04.060] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.276] [Lambda worker] [info] fast path took: 4.215675s\n[2022-11-09 05:53:08.284] [Lambda worker] [info] Input rows processed: normal: 7517 unresolved: 53307\n[2022-11-09 05:53:08.284] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 53307\n[2022-11-09 05:53:08.284] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.285] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.285] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.548] [Lambda worker] [info] Compilation of slow path took 1.263040s\n[2022-11-09 05:53:13.241] [Lambda worker] [info] Resolved buffer, compiled: 2055 interpreted: 23759 unresolved: 0\n[2022-11-09 05:53:17.003] [Lambda worker] [info] Resolved buffer, compiled: 2239 interpreted: 25254 unresolved: 0\n[2022-11-09 05:53:17.009] [Lambda worker] [info] Exception resolution/slow path done. Took 8.724688s\n[2022-11-09 05:53:17.009] [Lambda worker] [info] Data processed in 12.9494s 23.05 KB (958 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.009] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.009] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.009] [Lambda worker] [info] Writing output from 2 parts (23.05 KB, 958 rows)\n[2022-11-09 05:53:17.009] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.009] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.009] [s3fs] [info] Writing buffer of size 11291\n[2022-11-09 05:53:17.009] [s3fs] [info] Writing buffer of size 12309\n[2022-11-09 05:53:17.009] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.009] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.099] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.099] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.099] [Lambda worker] [info] Took 13.039090s in total\n[2022-11-09 05:53:17.099] [Lambda worker] [info] Paths rows took: normal: 7517 general: 4294 interpreter: 49013 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:11274289152-11542724608"]},{"container":{"reused":true,"requestId":"ad8e8ccf-8d5f-4f77-8d1a-25545d8774b0","uuid":"9c8ade83-3575-479b-b594-39bcbaa2fc39","msRemaining":585140,"requestsServed":2,"startTimestamp":1667973147517837271,"deadlineTimestamp":1667973809243000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.264] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.298] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.320] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.320] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.320] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:4563402752-4831838208\n[2022-11-09 05:53:02.322] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:4563402752-4831838208\n[2022-11-09 05:53:02.323] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.392] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.396] [global] [info] retrieving pythonic sample took: 0.003531s\n[2022-11-09 05:53:02.464] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.540] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.540] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.540] [fileinputoperator] [info] Filling sample cache for json operator took 0.075552s (1 entries, 0 rows)\n[2022-11-09 05:53:02.575] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.734] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.910] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.910] [fileinputoperator] [info] Extracting row sample took 0.370092s\n[2022-11-09 05:53:02.957] [global] [info] retrieving pythonic sample took: 0.492846s\n[2022-11-09 05:53:02.967] [hyper specializer] [info] Deserialization of Code context took 0.644468s\n[2022-11-09 05:53:02.967] [hyper specializer] [info] Total Stage Decode took 0.645489s\n[2022-11-09 05:53:03.035] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:4563402752-4831838208 on 256.00 KB\n[2022-11-09 05:53:03.035] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.035] [fileinputoperator] [info] Filling sample cache for json operator took 0.038620s (1 entries, 0 rows)\n[2022-11-09 05:53:03.071] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:4563402752-4831838208 on 256.00 KB\n[2022-11-09 05:53:03.183] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:4563402752-4831838208 on 256.00 KB\n[2022-11-09 05:53:03.328] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.328] [fileinputoperator] [info] Extracting row sample took 0.293257s\n[2022-11-09 05:53:03.490] [hyper specializer] [info] sampling (setInputFiles) took 0.522540s\n[2022-11-09 05:53:03.490] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.490] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.490] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.490] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.490] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.490] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.490] [global] [warning] requested 2000 rows for sampling, but only 171 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.497] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.497] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.544] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.715] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.715] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.715] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.715] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.718] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.720] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.722] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.724] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.726] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.727] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.734] [hyper specializer] [info] generated code in 0.019347s\n[2022-11-09 05:53:03.776] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.776] [Lambda worker] [info] -- hyperspecialization took 1.455699s\n[2022-11-09 05:53:03.812] [global] [info] TransformStage - Optimization via LLVM passes took 0.036095 ms\n[2022-11-09 05:53:03.812] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.825] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.825] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.825] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.219] [Lambda worker] [info] fast path took: 4.393878s\n[2022-11-09 05:53:08.219] [Lambda worker] [info] Input rows processed: normal: 7163 unresolved: 55816\n[2022-11-09 05:53:08.219] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 55816\n[2022-11-09 05:53:08.219] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.219] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.219] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.457] [Lambda worker] [info] Compilation of slow path took 1.238072s\n[2022-11-09 05:53:13.207] [Lambda worker] [info] Resolved buffer, compiled: 2694 interpreted: 25020 unresolved: 0\n[2022-11-09 05:53:16.989] [Lambda worker] [info] Resolved buffer, compiled: 2222 interpreted: 25880 unresolved: 0\n[2022-11-09 05:53:16.994] [Lambda worker] [info] Exception resolution/slow path done. Took 8.775706s\n[2022-11-09 05:53:16.995] [Lambda worker] [info] Data processed in 13.1698s 34.17 KB (1419 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:16.995] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:16.995] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:16.995] [Lambda worker] [info] Writing output from 2 parts (34.17 KB, 1419 rows)\n[2022-11-09 05:53:16.995] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:16.995] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:16.995] [s3fs] [info] Writing buffer of size 16797\n[2022-11-09 05:53:16.995] [s3fs] [info] Writing buffer of size 18196\n[2022-11-09 05:53:16.995] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:16.995] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.102] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.102] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.102] [Lambda worker] [info] Took 13.277057s in total\n[2022-11-09 05:53:17.102] [Lambda worker] [info] Paths rows took: normal: 7163 general: 4916 interpreter: 50900 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:4563402752-4831838208"]},{"container":{"reused":true,"requestId":"132585d8-7412-4255-ae73-b69004b012a1","uuid":"99721ee9-fbed-4548-85f0-992f814a3838","msRemaining":585468,"requestsServed":2,"startTimestamp":1667973146166869907,"deadlineTimestamp":1667973809619000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.636] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.664] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.683] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.683] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.683] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2021-10-15.json:1879048192-2147483648\n[2022-11-09 05:53:02.684] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2021-10-15.json:1879048192-2147483648\n[2022-11-09 05:53:02.685] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.746] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.750] [global] [info] retrieving pythonic sample took: 0.003046s\n[2022-11-09 05:53:02.807] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.882] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.882] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.882] [fileinputoperator] [info] Filling sample cache for json operator took 0.074117s (1 entries, 0 rows)\n[2022-11-09 05:53:02.916] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.062] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.213] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.213] [fileinputoperator] [info] Extracting row sample took 0.330862s\n[2022-11-09 05:53:03.253] [global] [info] retrieving pythonic sample took: 0.445484s\n[2022-11-09 05:53:03.262] [hyper specializer] [info] Deserialization of Code context took 0.576698s\n[2022-11-09 05:53:03.262] [hyper specializer] [info] Total Stage Decode took 0.577587s\n[2022-11-09 05:53:03.350] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:03.350] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.350] [fileinputoperator] [info] Filling sample cache for json operator took 0.063229s (1 entries, 0 rows)\n[2022-11-09 05:53:03.388] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:03.449] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:03.530] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.531] [fileinputoperator] [info] Extracting row sample took 0.180236s\n[2022-11-09 05:53:03.652] [hyper specializer] [info] sampling (setInputFiles) took 0.390012s\n[2022-11-09 05:53:03.652] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.652] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.653] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.653] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.653] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.653] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.653] [global] [warning] requested 2000 rows for sampling, but only 108 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.656] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.656] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.695] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.844] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.844] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.844] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.844] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.847] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.850] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.851] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.853] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.854] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.855] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.861] [hyper specializer] [info] generated code in 0.016981s\n[2022-11-09 05:53:03.892] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.893] [Lambda worker] [info] -- hyperspecialization took 1.209386s\n[2022-11-09 05:53:03.924] [global] [info] TransformStage - Optimization via LLVM passes took 0.031152 ms\n[2022-11-09 05:53:03.924] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.935] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.935] [global] [info] Compiled code paths for stage 0 in 0.04 ms\n[2022-11-09 05:53:03.935] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.109] [Lambda worker] [info] fast path took: 5.174502s\n[2022-11-09 05:53:09.109] [Lambda worker] [info] Input rows processed: normal: 9478 unresolved: 65285\n[2022-11-09 05:53:09.109] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 65285\n[2022-11-09 05:53:09.109] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.109] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.109] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.159] [Lambda worker] [info] Compilation of slow path took 1.049373s\n[2022-11-09 05:53:13.756] [Lambda worker] [info] Resolved buffer, compiled: 4223 interpreted: 30043 unresolved: 0\n[2022-11-09 05:53:17.092] [Lambda worker] [info] Resolved buffer, compiled: 4315 interpreted: 26704 unresolved: 0\n[2022-11-09 05:53:17.097] [Lambda worker] [info] Exception resolution/slow path done. Took 7.987719s\n[2022-11-09 05:53:17.097] [Lambda worker] [info] Data processed in 13.1624s 33.43 KB (1385 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.097] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:17.097] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.097] [Lambda worker] [info] Writing output from 2 parts (33.43 KB, 1385 rows)\n[2022-11-09 05:53:17.097] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:17.097] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.097] [s3fs] [info] Writing buffer of size 16867\n[2022-11-09 05:53:17.097] [s3fs] [info] Writing buffer of size 17362\n[2022-11-09 05:53:17.097] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:17.097] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.150] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.150] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.150] [Lambda worker] [info] Took 13.215091s in total\n[2022-11-09 05:53:17.150] [Lambda worker] [info] Paths rows took: normal: 9478 general: 8538 interpreter: 56747 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2021-10-15.json:1879048192-2147483648"]},{"container":{"reused":true,"requestId":"f71321c3-a46d-4c46-ba53-59054864c7d2","uuid":"a4bdb011-f836-45c3-8f10-c7273edf2f01","msRemaining":584746,"requestsServed":2,"startTimestamp":1667973146702380151,"deadlineTimestamp":1667973809009000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.029] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.062] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.085] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.085] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.085] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:6442450944-6710886400\n[2022-11-09 05:53:02.086] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:6442450944-6710886400\n[2022-11-09 05:53:02.087] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.156] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.161] [global] [info] retrieving pythonic sample took: 0.003467s\n[2022-11-09 05:53:02.228] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.229] [global] [info] retrieving pythonic sample took: 0.000266s\n[2022-11-09 05:53:02.238] [hyper specializer] [info] Deserialization of Code context took 0.151224s\n[2022-11-09 05:53:02.238] [hyper specializer] [info] Total Stage Decode took 0.152238s\n[2022-11-09 05:53:02.313] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:6442450944-6710886400 on 256.00 KB\n[2022-11-09 05:53:02.313] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.313] [fileinputoperator] [info] Filling sample cache for json operator took 0.074373s (1 entries, 0 rows)\n[2022-11-09 05:53:02.352] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:6442450944-6710886400 on 256.00 KB\n[2022-11-09 05:53:02.467] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:6442450944-6710886400 on 256.00 KB\n[2022-11-09 05:53:02.620] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.620] [fileinputoperator] [info] Extracting row sample took 0.306802s\n[2022-11-09 05:53:02.774] [hyper specializer] [info] sampling (setInputFiles) took 0.535283s\n[2022-11-09 05:53:02.774] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.774] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.774] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.774] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.774] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.774] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.774] [global] [warning] requested 2000 rows for sampling, but only 133 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.779] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.779] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.822] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.995] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.995] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.995] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.996] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.998] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.001] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.003] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.005] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.006] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.007] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.014] [hyper specializer] [info] generated code in 0.018832s\n[2022-11-09 05:53:03.054] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.054] [Lambda worker] [info] -- hyperspecialization took 0.969283s\n[2022-11-09 05:53:03.090] [global] [info] TransformStage - Optimization via LLVM passes took 0.036055 ms\n[2022-11-09 05:53:03.090] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.103] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.103] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.103] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.086] [Lambda worker] [info] fast path took: 4.983313s\n[2022-11-09 05:53:08.086] [Lambda worker] [info] Input rows processed: normal: 8354 unresolved: 61601\n[2022-11-09 05:53:08.086] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 61601\n[2022-11-09 05:53:08.086] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.086] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.086] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.288] [Lambda worker] [info] Compilation of slow path took 1.201525s\n[2022-11-09 05:53:13.124] [Lambda worker] [info] Resolved buffer, compiled: 2612 interpreted: 27456 unresolved: 0\n[2022-11-09 05:53:17.199] [Lambda worker] [info] Resolved buffer, compiled: 3045 interpreted: 28488 unresolved: 0\n[2022-11-09 05:53:17.205] [Lambda worker] [info] Exception resolution/slow path done. Took 9.119067s\n[2022-11-09 05:53:17.205] [Lambda worker] [info] Data processed in 14.1026s 39.02 KB (1629 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.205] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.205] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.205] [Lambda worker] [info] Writing output from 2 parts (39.02 KB, 1629 rows)\n[2022-11-09 05:53:17.205] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.205] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.205] [s3fs] [info] Writing buffer of size 20637\n[2022-11-09 05:53:17.205] [s3fs] [info] Writing buffer of size 19319\n[2022-11-09 05:53:17.205] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.205] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.262] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.262] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.262] [Lambda worker] [info] Took 14.159650s in total\n[2022-11-09 05:53:17.262] [Lambda worker] [info] Paths rows took: normal: 8354 general: 5657 interpreter: 55944 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:6442450944-6710886400"]},{"container":{"reused":true,"requestId":"06d87915-9d39-4f28-be5f-3c17a7d8f87a","uuid":"00010b8a-98f3-4d83-b203-c48065c4b05f","msRemaining":584585,"requestsServed":2,"startTimestamp":1667973146908867052,"deadlineTimestamp":1667973808875000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.894] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.928] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.951] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.951] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.951] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:2684354560-2952790016\n[2022-11-09 05:53:01.952] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:2684354560-2952790016\n[2022-11-09 05:53:01.953] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.024] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.028] [global] [info] retrieving pythonic sample took: 0.003617s\n[2022-11-09 05:53:02.096] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.097] [global] [info] retrieving pythonic sample took: 0.000271s\n[2022-11-09 05:53:02.107] [hyper specializer] [info] Deserialization of Code context took 0.153486s\n[2022-11-09 05:53:02.107] [hyper specializer] [info] Total Stage Decode took 0.154523s\n[2022-11-09 05:53:02.179] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:2684354560-2952790016 on 256.00 KB\n[2022-11-09 05:53:02.179] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.179] [fileinputoperator] [info] Filling sample cache for json operator took 0.072813s (1 entries, 0 rows)\n[2022-11-09 05:53:02.222] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:2684354560-2952790016 on 256.00 KB\n[2022-11-09 05:53:02.324] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:2684354560-2952790016 on 256.00 KB\n[2022-11-09 05:53:02.403] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.403] [fileinputoperator] [info] Extracting row sample took 0.223297s\n[2022-11-09 05:53:02.539] [hyper specializer] [info] sampling (setInputFiles) took 0.432785s\n[2022-11-09 05:53:02.540] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.540] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.540] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.540] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.540] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.540] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.540] [global] [warning] requested 2000 rows for sampling, but only 128 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.544] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.544] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.583] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.736] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.736] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.736] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.736] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.739] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.742] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.744] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.746] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.747] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.748] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.755] [hyper specializer] [info] generated code in 0.019291s\n[2022-11-09 05:53:02.791] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.791] [Lambda worker] [info] -- hyperspecialization took 0.840723s\n[2022-11-09 05:53:02.829] [global] [info] TransformStage - Optimization via LLVM passes took 0.037260 ms\n[2022-11-09 05:53:02.829] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.842] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.842] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.842] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.754] [Lambda worker] [info] fast path took: 4.911541s\n[2022-11-09 05:53:07.754] [Lambda worker] [info] Input rows processed: normal: 8451 unresolved: 64296\n[2022-11-09 05:53:07.754] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 64296\n[2022-11-09 05:53:07.754] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.754] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.754] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.979] [Lambda worker] [info] Compilation of slow path took 1.224654s\n[2022-11-09 05:53:13.080] [Lambda worker] [info] Resolved buffer, compiled: 3313 interpreted: 28522 unresolved: 0\n[2022-11-09 05:53:17.223] [Lambda worker] [info] Resolved buffer, compiled: 3171 interpreted: 29290 unresolved: 0\n[2022-11-09 05:53:17.229] [Lambda worker] [info] Exception resolution/slow path done. Took 9.474651s\n[2022-11-09 05:53:17.229] [Lambda worker] [info] Data processed in 14.3864s 54.74 KB (2288 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.229] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.229] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.229] [Lambda worker] [info] Writing output from 2 parts (54.74 KB, 2288 rows)\n[2022-11-09 05:53:17.229] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.229] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.229] [s3fs] [info] Writing buffer of size 29768\n[2022-11-09 05:53:17.229] [s3fs] [info] Writing buffer of size 26282\n[2022-11-09 05:53:17.229] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.229] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.289] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.289] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.289] [Lambda worker] [info] Took 14.446491s in total\n[2022-11-09 05:53:17.289] [Lambda worker] [info] Paths rows took: normal: 8451 general: 6484 interpreter: 57812 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:2684354560-2952790016"]},{"container":{"reused":true,"requestId":"44976c4a-be6c-4410-84f7-a86a33e7a379","uuid":"18bbe06b-ff1d-4787-81be-7c194e1b252d","msRemaining":585214,"requestsServed":2,"startTimestamp":1667973147328504823,"deadlineTimestamp":1667973809506000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.525] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.558] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.580] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.580] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.580] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:11005853696-11274289152\n[2022-11-09 05:53:02.581] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:11005853696-11274289152\n[2022-11-09 05:53:02.582] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.650] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.655] [global] [info] retrieving pythonic sample took: 0.003375s\n[2022-11-09 05:53:02.720] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.721] [global] [info] retrieving pythonic sample took: 0.000251s\n[2022-11-09 05:53:02.730] [hyper specializer] [info] Deserialization of Code context took 0.147814s\n[2022-11-09 05:53:02.730] [hyper specializer] [info] Total Stage Decode took 0.148804s\n[2022-11-09 05:53:02.844] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:11005853696-11274289152 on 256.00 KB\n[2022-11-09 05:53:02.844] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.844] [fileinputoperator] [info] Filling sample cache for json operator took 0.113922s (1 entries, 0 rows)\n[2022-11-09 05:53:02.910] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:11005853696-11274289152 on 256.00 KB\n[2022-11-09 05:53:03.080] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:11005853696-11274289152 on 256.00 KB\n[2022-11-09 05:53:03.200] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.200] [fileinputoperator] [info] Extracting row sample took 0.355945s\n[2022-11-09 05:53:03.351] [hyper specializer] [info] sampling (setInputFiles) took 0.620946s\n[2022-11-09 05:53:03.352] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.352] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.352] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.352] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.352] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.352] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.352] [global] [warning] requested 2000 rows for sampling, but only 117 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.356] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.356] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.398] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.575] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.575] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.575] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.575] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.578] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.581] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.583] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.584] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.586] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.587] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.594] [hyper specializer] [info] generated code in 0.018127s\n[2022-11-09 05:53:03.632] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.632] [Lambda worker] [info] -- hyperspecialization took 1.052046s\n[2022-11-09 05:53:03.667] [global] [info] TransformStage - Optimization via LLVM passes took 0.034718 ms\n[2022-11-09 05:53:03.667] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.679] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.679] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.679] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.116] [Lambda worker] [info] fast path took: 5.436413s\n[2022-11-09 05:53:09.116] [Lambda worker] [info] Input rows processed: normal: 7251 unresolved: 52390\n[2022-11-09 05:53:09.116] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 52390\n[2022-11-09 05:53:09.116] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.116] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.116] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.295] [Lambda worker] [info] Compilation of slow path took 1.179039s\n[2022-11-09 05:53:13.783] [Lambda worker] [info] Resolved buffer, compiled: 2150 interpreted: 24381 unresolved: 0\n[2022-11-09 05:53:17.229] [Lambda worker] [info] Resolved buffer, compiled: 2056 interpreted: 23803 unresolved: 0\n[2022-11-09 05:53:17.235] [Lambda worker] [info] Exception resolution/slow path done. Took 8.118673s\n[2022-11-09 05:53:17.235] [Lambda worker] [info] Data processed in 13.5552s 24.33 KB (1012 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.235] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.235] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.235] [Lambda worker] [info] Writing output from 2 parts (24.33 KB, 1012 rows)\n[2022-11-09 05:53:17.235] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.235] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.235] [s3fs] [info] Writing buffer of size 12116\n[2022-11-09 05:53:17.235] [s3fs] [info] Writing buffer of size 12796\n[2022-11-09 05:53:17.235] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.235] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.290] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.290] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.290] [Lambda worker] [info] Took 13.611141s in total\n[2022-11-09 05:53:17.290] [Lambda worker] [info] Paths rows took: normal: 7251 general: 4206 interpreter: 48184 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:11005853696-11274289152"]},{"container":{"reused":true,"requestId":"bb6e0649-a7b5-48cd-b86c-864a455578fe","uuid":"527ef388-ab03-4abb-9417-b9073718660e","msRemaining":585355,"requestsServed":2,"startTimestamp":1667973147103302131,"deadlineTimestamp":1667973809694000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.712] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.735] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.757] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.757] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.757] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2021-10-15.json:3221225472-3489660928\n[2022-11-09 05:53:02.759] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2021-10-15.json:3221225472-3489660928\n[2022-11-09 05:53:02.760] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.829] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.833] [global] [info] retrieving pythonic sample took: 0.003507s\n[2022-11-09 05:53:02.900] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.901] [global] [info] retrieving pythonic sample took: 0.000252s\n[2022-11-09 05:53:02.910] [hyper specializer] [info] Deserialization of Code context took 0.150769s\n[2022-11-09 05:53:02.910] [hyper specializer] [info] Total Stage Decode took 0.151819s\n[2022-11-09 05:53:03.068] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:3221225472-3489660928 on 256.00 KB\n[2022-11-09 05:53:03.068] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.068] [fileinputoperator] [info] Filling sample cache for json operator took 0.157448s (1 entries, 0 rows)\n[2022-11-09 05:53:03.111] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:3221225472-3489660928 on 256.00 KB\n[2022-11-09 05:53:03.250] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:3221225472-3489660928 on 256.00 KB\n[2022-11-09 05:53:03.372] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.372] [fileinputoperator] [info] Extracting row sample took 0.304345s\n[2022-11-09 05:53:03.524] [hyper specializer] [info] sampling (setInputFiles) took 0.613696s\n[2022-11-09 05:53:03.525] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.525] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.525] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.525] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.525] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.525] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.525] [global] [warning] requested 2000 rows for sampling, but only 178 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.530] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.530] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.572] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.727] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.727] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.727] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.728] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.730] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.733] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.736] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.737] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.739] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.740] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.747] [hyper specializer] [info] generated code in 0.019192s\n[2022-11-09 05:53:03.785] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.785] [Lambda worker] [info] -- hyperspecialization took 1.027921s\n[2022-11-09 05:53:03.821] [global] [info] TransformStage - Optimization via LLVM passes took 0.036019 ms\n[2022-11-09 05:53:03.821] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.834] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.834] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.834] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.644] [Lambda worker] [info] fast path took: 3.809878s\n[2022-11-09 05:53:07.644] [Lambda worker] [info] Input rows processed: normal: 12079 unresolved: 69996\n[2022-11-09 05:53:07.644] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 69996\n[2022-11-09 05:53:07.644] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.644] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.644] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.872] [Lambda worker] [info] Compilation of slow path took 1.228359s\n[2022-11-09 05:53:12.900] [Lambda worker] [info] Resolved buffer, compiled: 4303 interpreted: 29810 unresolved: 0\n[2022-11-09 05:53:17.167] [Lambda worker] [info] Resolved buffer, compiled: 4216 interpreted: 31667 unresolved: 0\n[2022-11-09 05:53:17.171] [Lambda worker] [info] Exception resolution/slow path done. Took 9.527293s\n[2022-11-09 05:53:17.171] [Lambda worker] [info] Data processed in 13.3373s 31.67 KB (1313 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.171] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:17.171] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.171] [Lambda worker] [info] Writing output from 2 parts (31.67 KB, 1313 rows)\n[2022-11-09 05:53:17.171] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:17.171] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.172] [s3fs] [info] Writing buffer of size 15172\n[2022-11-09 05:53:17.172] [s3fs] [info] Writing buffer of size 17255\n[2022-11-09 05:53:17.172] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:17.172] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.338] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.338] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.338] [Lambda worker] [info] Took 13.503828s in total\n[2022-11-09 05:53:17.338] [Lambda worker] [info] Paths rows took: normal: 12079 general: 8519 interpreter: 61477 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2021-10-15.json:3221225472-3489660928"]},{"container":{"reused":true,"requestId":"6cf238a4-f5ac-4b4b-91a2-4280c5cd6c46","uuid":"940c2f03-aacc-4cc0-b94a-bd7384e2100a","msRemaining":584841,"requestsServed":2,"startTimestamp":1667973147520848631,"deadlineTimestamp":1667973809198000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.218] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.252] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.274] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.274] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.274] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:3221225472-3489660928\n[2022-11-09 05:53:02.275] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:3221225472-3489660928\n[2022-11-09 05:53:02.276] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.346] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.350] [global] [info] retrieving pythonic sample took: 0.003485s\n[2022-11-09 05:53:02.417] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.418] [global] [info] retrieving pythonic sample took: 0.000258s\n[2022-11-09 05:53:02.427] [hyper specializer] [info] Deserialization of Code context took 0.151067s\n[2022-11-09 05:53:02.428] [hyper specializer] [info] Total Stage Decode took 0.152101s\n[2022-11-09 05:53:02.554] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:3221225472-3489660928 on 256.00 KB\n[2022-11-09 05:53:02.555] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.555] [fileinputoperator] [info] Filling sample cache for json operator took 0.127003s (1 entries, 0 rows)\n[2022-11-09 05:53:02.584] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:3221225472-3489660928 on 256.00 KB\n[2022-11-09 05:53:02.720] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:3221225472-3489660928 on 256.00 KB\n[2022-11-09 05:53:02.874] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.874] [fileinputoperator] [info] Extracting row sample took 0.319568s\n[2022-11-09 05:53:03.022] [hyper specializer] [info] sampling (setInputFiles) took 0.594231s\n[2022-11-09 05:53:03.022] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.022] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.022] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.022] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.022] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.022] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.022] [global] [warning] requested 2000 rows for sampling, but only 146 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.027] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.027] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.069] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.243] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.243] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.243] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.243] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.246] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.249] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.251] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.252] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.254] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.255] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.262] [hyper specializer] [info] generated code in 0.018602s\n[2022-11-09 05:53:03.300] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.300] [Lambda worker] [info] -- hyperspecialization took 1.026391s\n[2022-11-09 05:53:03.337] [global] [info] TransformStage - Optimization via LLVM passes took 0.036180 ms\n[2022-11-09 05:53:03.337] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.349] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.349] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.349] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.729] [Lambda worker] [info] fast path took: 5.379522s\n[2022-11-09 05:53:08.729] [Lambda worker] [info] Input rows processed: normal: 6638 unresolved: 53888\n[2022-11-09 05:53:08.729] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 53888\n[2022-11-09 05:53:08.729] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.729] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.729] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.941] [Lambda worker] [info] Compilation of slow path took 1.212001s\n[2022-11-09 05:53:13.502] [Lambda worker] [info] Resolved buffer, compiled: 2520 interpreted: 23887 unresolved: 0\n[2022-11-09 05:53:17.292] [Lambda worker] [info] Resolved buffer, compiled: 2414 interpreted: 25067 unresolved: 0\n[2022-11-09 05:53:17.299] [Lambda worker] [info] Exception resolution/slow path done. Took 8.569533s\n[2022-11-09 05:53:17.299] [Lambda worker] [info] Data processed in 13.9492s 36.06 KB (1500 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.299] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.299] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.299] [Lambda worker] [info] Writing output from 2 parts (36.06 KB, 1500 rows)\n[2022-11-09 05:53:17.299] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.299] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.299] [s3fs] [info] Writing buffer of size 17548\n[2022-11-09 05:53:17.299] [s3fs] [info] Writing buffer of size 19382\n[2022-11-09 05:53:17.299] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.299] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.356] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.356] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.356] [Lambda worker] [info] Took 14.006904s in total\n[2022-11-09 05:53:17.356] [Lambda worker] [info] Paths rows took: normal: 6638 general: 4934 interpreter: 48954 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:3221225472-3489660928"]},{"container":{"reused":true,"requestId":"24bb23f7-e0f4-4b44-8603-d4d7fb37a379","uuid":"3cea70cb-cfac-4eaf-bc38-75ec048c371e","msRemaining":584977,"requestsServed":2,"startTimestamp":1667973146629804898,"deadlineTimestamp":1667973809338000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.357] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.391] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.413] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.413] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.413] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:6710886400-6979321856\n[2022-11-09 05:53:02.414] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:6710886400-6979321856\n[2022-11-09 05:53:02.415] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.485] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.489] [global] [info] retrieving pythonic sample took: 0.003524s\n[2022-11-09 05:53:02.555] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.557] [global] [info] retrieving pythonic sample took: 0.000260s\n[2022-11-09 05:53:02.566] [hyper specializer] [info] Deserialization of Code context took 0.150692s\n[2022-11-09 05:53:02.566] [hyper specializer] [info] Total Stage Decode took 0.151731s\n[2022-11-09 05:53:02.694] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:6710886400-6979321856 on 256.00 KB\n[2022-11-09 05:53:02.694] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.694] [fileinputoperator] [info] Filling sample cache for json operator took 0.127880s (1 entries, 0 rows)\n[2022-11-09 05:53:02.723] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:6710886400-6979321856 on 256.00 KB\n[2022-11-09 05:53:02.815] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:6710886400-6979321856 on 256.00 KB\n[2022-11-09 05:53:02.917] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.917] [fileinputoperator] [info] Extracting row sample took 0.223187s\n[2022-11-09 05:53:03.044] [hyper specializer] [info] sampling (setInputFiles) took 0.478117s\n[2022-11-09 05:53:03.046] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.046] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.046] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.046] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.046] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.046] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.046] [global] [warning] requested 2000 rows for sampling, but only 110 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.050] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.050] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.085] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.253] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.253] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.253] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.253] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.256] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.259] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.260] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.262] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.264] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.265] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.272] [hyper specializer] [info] generated code in 0.019155s\n[2022-11-09 05:53:03.305] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.305] [Lambda worker] [info] -- hyperspecialization took 0.891423s\n[2022-11-09 05:53:03.341] [global] [info] TransformStage - Optimization via LLVM passes took 0.035817 ms\n[2022-11-09 05:53:03.341] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.353] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.353] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.353] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.897] [Lambda worker] [info] fast path took: 5.543448s\n[2022-11-09 05:53:08.897] [Lambda worker] [info] Input rows processed: normal: 7629 unresolved: 53202\n[2022-11-09 05:53:08.897] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 53202\n[2022-11-09 05:53:08.897] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.897] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.897] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.108] [Lambda worker] [info] Compilation of slow path took 1.211002s\n[2022-11-09 05:53:13.703] [Lambda worker] [info] Resolved buffer, compiled: 2390 interpreted: 24157 unresolved: 0\n[2022-11-09 05:53:17.291] [Lambda worker] [info] Resolved buffer, compiled: 2808 interpreted: 23847 unresolved: 0\n[2022-11-09 05:53:17.297] [Lambda worker] [info] Exception resolution/slow path done. Took 8.400857s\n[2022-11-09 05:53:17.298] [Lambda worker] [info] Data processed in 13.9445s 30.24 KB (1256 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.298] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.298] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.298] [Lambda worker] [info] Writing output from 2 parts (30.24 KB, 1256 rows)\n[2022-11-09 05:53:17.298] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.298] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.298] [s3fs] [info] Writing buffer of size 15605\n[2022-11-09 05:53:17.298] [s3fs] [info] Writing buffer of size 15363\n[2022-11-09 05:53:17.298] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.298] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.360] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.360] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.360] [Lambda worker] [info] Took 14.007364s in total\n[2022-11-09 05:53:17.360] [Lambda worker] [info] Paths rows took: normal: 7629 general: 5198 interpreter: 48004 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:6710886400-6979321856"]},{"container":{"reused":true,"requestId":"214dee54-2211-4400-87d4-12106dd0fb14","uuid":"48fa0d8b-b6b3-45e8-a243-55df3e746802","msRemaining":584565,"requestsServed":2,"startTimestamp":1667973146532408633,"deadlineTimestamp":1667973808936000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.955] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.988] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.011] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.011] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.011] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:4563402752-4831838208\n[2022-11-09 05:53:02.013] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:4563402752-4831838208\n[2022-11-09 05:53:02.014] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.084] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.088] [global] [info] retrieving pythonic sample took: 0.003592s\n[2022-11-09 05:53:02.155] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.156] [global] [info] retrieving pythonic sample took: 0.000271s\n[2022-11-09 05:53:02.166] [hyper specializer] [info] Deserialization of Code context took 0.152392s\n[2022-11-09 05:53:02.166] [hyper specializer] [info] Total Stage Decode took 0.153427s\n[2022-11-09 05:53:02.261] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:4563402752-4831838208 on 256.00 KB\n[2022-11-09 05:53:02.262] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.262] [fileinputoperator] [info] Filling sample cache for json operator took 0.095493s (1 entries, 0 rows)\n[2022-11-09 05:53:02.296] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:4563402752-4831838208 on 256.00 KB\n[2022-11-09 05:53:02.413] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:4563402752-4831838208 on 256.00 KB\n[2022-11-09 05:53:02.541] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.541] [fileinputoperator] [info] Extracting row sample took 0.279372s\n[2022-11-09 05:53:02.687] [hyper specializer] [info] sampling (setInputFiles) took 0.521349s\n[2022-11-09 05:53:02.688] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.688] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.688] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.688] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.688] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.688] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.688] [global] [warning] requested 2000 rows for sampling, but only 156 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.693] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.693] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.734] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.938] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.938] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.938] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.938] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.941] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.944] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.946] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.947] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.949] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.950] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.957] [hyper specializer] [info] generated code in 0.018995s\n[2022-11-09 05:53:02.995] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.995] [Lambda worker] [info] -- hyperspecialization took 0.983979s\n[2022-11-09 05:53:03.031] [global] [info] TransformStage - Optimization via LLVM passes took 0.035959 ms\n[2022-11-09 05:53:03.031] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.044] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.044] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.044] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.246] [Lambda worker] [info] fast path took: 5.201922s\n[2022-11-09 05:53:08.246] [Lambda worker] [info] Input rows processed: normal: 8854 unresolved: 62755\n[2022-11-09 05:53:08.246] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 62755\n[2022-11-09 05:53:08.246] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.246] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.246] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.463] [Lambda worker] [info] Compilation of slow path took 1.216909s\n[2022-11-09 05:53:13.331] [Lambda worker] [info] Resolved buffer, compiled: 3075 interpreted: 27952 unresolved: 0\n[2022-11-09 05:53:17.309] [Lambda worker] [info] Resolved buffer, compiled: 3159 interpreted: 28569 unresolved: 0\n[2022-11-09 05:53:17.315] [Lambda worker] [info] Exception resolution/slow path done. Took 9.068713s\n[2022-11-09 05:53:17.315] [Lambda worker] [info] Data processed in 14.2708s 43.73 KB (1826 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.315] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.315] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.315] [Lambda worker] [info] Writing output from 2 parts (43.73 KB, 1826 rows)\n[2022-11-09 05:53:17.315] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.315] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.315] [s3fs] [info] Writing buffer of size 22067\n[2022-11-09 05:53:17.315] [s3fs] [info] Writing buffer of size 22716\n[2022-11-09 05:53:17.315] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.315] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.369] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.369] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.370] [Lambda worker] [info] Took 14.325510s in total\n[2022-11-09 05:53:17.370] [Lambda worker] [info] Paths rows took: normal: 8854 general: 6234 interpreter: 56521 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:4563402752-4831838208"]},{"container":{"reused":true,"requestId":"12bbcc7e-17ee-4bc1-8898-3fb143feb18e","uuid":"5b70ed5c-d72f-4fd0-b57c-ae40ead3a1aa","msRemaining":584814,"requestsServed":2,"startTimestamp":1667973146743919175,"deadlineTimestamp":1667973809233000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.253] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.285] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.308] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.308] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.308] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:4026531840-4294967296\n[2022-11-09 05:53:02.309] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:4026531840-4294967296\n[2022-11-09 05:53:02.310] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.380] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.384] [global] [info] retrieving pythonic sample took: 0.003521s\n[2022-11-09 05:53:02.451] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.452] [global] [info] retrieving pythonic sample took: 0.000263s\n[2022-11-09 05:53:02.461] [hyper specializer] [info] Deserialization of Code context took 0.150973s\n[2022-11-09 05:53:02.461] [hyper specializer] [info] Total Stage Decode took 0.152003s\n[2022-11-09 05:53:02.560] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:4026531840-4294967296 on 256.00 KB\n[2022-11-09 05:53:02.561] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.561] [fileinputoperator] [info] Filling sample cache for json operator took 0.099239s (1 entries, 0 rows)\n[2022-11-09 05:53:02.594] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:4026531840-4294967296 on 256.00 KB\n[2022-11-09 05:53:02.702] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:4026531840-4294967296 on 256.00 KB\n[2022-11-09 05:53:02.782] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.782] [fileinputoperator] [info] Extracting row sample took 0.221795s\n[2022-11-09 05:53:02.916] [hyper specializer] [info] sampling (setInputFiles) took 0.454177s\n[2022-11-09 05:53:02.916] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.916] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.916] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.916] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.916] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.916] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.916] [global] [warning] requested 2000 rows for sampling, but only 115 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.920] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.920] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.959] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.116] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.117] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.117] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.117] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.120] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.122] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.124] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.126] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.128] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.129] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.136] [hyper specializer] [info] generated code in 0.019717s\n[2022-11-09 05:53:03.171] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.171] [Lambda worker] [info] -- hyperspecialization took 0.862899s\n[2022-11-09 05:53:03.209] [global] [info] TransformStage - Optimization via LLVM passes took 0.037785 ms\n[2022-11-09 05:53:03.209] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.222] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.222] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.222] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.416] [Lambda worker] [info] fast path took: 5.194058s\n[2022-11-09 05:53:08.416] [Lambda worker] [info] Input rows processed: normal: 7051 unresolved: 57398\n[2022-11-09 05:53:08.416] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 57398\n[2022-11-09 05:53:08.416] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.416] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.416] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.636] [Lambda worker] [info] Compilation of slow path took 1.219323s\n[2022-11-09 05:53:13.490] [Lambda worker] [info] Resolved buffer, compiled: 2470 interpreted: 26076 unresolved: 0\n[2022-11-09 05:53:17.354] [Lambda worker] [info] Resolved buffer, compiled: 2277 interpreted: 26575 unresolved: 0\n[2022-11-09 05:53:17.360] [Lambda worker] [info] Exception resolution/slow path done. Took 8.943654s\n[2022-11-09 05:53:17.360] [Lambda worker] [info] Data processed in 14.1379s 37.76 KB (1569 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.360] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.360] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.360] [Lambda worker] [info] Writing output from 2 parts (37.76 KB, 1569 rows)\n[2022-11-09 05:53:17.360] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.360] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.360] [s3fs] [info] Writing buffer of size 19554\n[2022-11-09 05:53:17.360] [s3fs] [info] Writing buffer of size 19108\n[2022-11-09 05:53:17.360] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.360] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.418] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.418] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.418] [Lambda worker] [info] Took 14.195669s in total\n[2022-11-09 05:53:17.418] [Lambda worker] [info] Paths rows took: normal: 7051 general: 4747 interpreter: 52651 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:4026531840-4294967296"]},{"container":{"reused":true,"requestId":"a65c6483-0847-48c4-943a-82ffba0fc411","uuid":"9626b0f3-5240-4c85-a494-da0c117bee5d","msRemaining":585012,"requestsServed":2,"startTimestamp":1667973147044896314,"deadlineTimestamp":1667973809435000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.455] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.488] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.511] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.511] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.511] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:9395240960-9663676416\n[2022-11-09 05:53:02.512] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:9395240960-9663676416\n[2022-11-09 05:53:02.513] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.583] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.587] [global] [info] retrieving pythonic sample took: 0.003530s\n[2022-11-09 05:53:02.654] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.655] [global] [info] retrieving pythonic sample took: 0.000266s\n[2022-11-09 05:53:02.665] [hyper specializer] [info] Deserialization of Code context took 0.152084s\n[2022-11-09 05:53:02.665] [hyper specializer] [info] Total Stage Decode took 0.153120s\n[2022-11-09 05:53:02.749] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:9395240960-9663676416 on 256.00 KB\n[2022-11-09 05:53:02.750] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.750] [fileinputoperator] [info] Filling sample cache for json operator took 0.084516s (1 entries, 0 rows)\n[2022-11-09 05:53:02.789] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:9395240960-9663676416 on 256.00 KB\n[2022-11-09 05:53:02.871] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:9395240960-9663676416 on 256.00 KB\n[2022-11-09 05:53:02.987] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.987] [fileinputoperator] [info] Extracting row sample took 0.237624s\n[2022-11-09 05:53:03.119] [hyper specializer] [info] sampling (setInputFiles) took 0.454070s\n[2022-11-09 05:53:03.120] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.120] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.120] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.120] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.120] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.120] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.120] [global] [warning] requested 2000 rows for sampling, but only 130 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.124] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.124] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.162] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.321] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.321] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.321] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.321] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.324] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.327] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.329] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.330] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.332] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.333] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.340] [hyper specializer] [info] generated code in 0.018988s\n[2022-11-09 05:53:03.374] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.374] [Lambda worker] [info] -- hyperspecialization took 0.863551s\n[2022-11-09 05:53:03.411] [global] [info] TransformStage - Optimization via LLVM passes took 0.036531 ms\n[2022-11-09 05:53:03.411] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.423] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.424] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.424] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.675] [Lambda worker] [info] fast path took: 5.251906s\n[2022-11-09 05:53:08.676] [Lambda worker] [info] Input rows processed: normal: 6801 unresolved: 54870\n[2022-11-09 05:53:08.676] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 54870\n[2022-11-09 05:53:08.676] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.676] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.676] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.909] [Lambda worker] [info] Compilation of slow path took 1.233831s\n[2022-11-09 05:53:13.622] [Lambda worker] [info] Resolved buffer, compiled: 2330 interpreted: 24943 unresolved: 0\n[2022-11-09 05:53:17.321] [Lambda worker] [info] Resolved buffer, compiled: 2442 interpreted: 25155 unresolved: 0\n[2022-11-09 05:53:17.327] [Lambda worker] [info] Exception resolution/slow path done. Took 8.651116s\n[2022-11-09 05:53:17.327] [Lambda worker] [info] Data processed in 13.9032s 31.18 KB (1296 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.327] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.327] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.327] [Lambda worker] [info] Writing output from 2 parts (31.18 KB, 1296 rows)\n[2022-11-09 05:53:17.327] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.327] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.327] [s3fs] [info] Writing buffer of size 15357\n[2022-11-09 05:53:17.327] [s3fs] [info] Writing buffer of size 16568\n[2022-11-09 05:53:17.327] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.327] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.421] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.422] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.422] [Lambda worker] [info] Took 13.998021s in total\n[2022-11-09 05:53:17.422] [Lambda worker] [info] Paths rows took: normal: 6801 general: 4772 interpreter: 50098 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:9395240960-9663676416"]},{"container":{"reused":true,"requestId":"31107633-c907-4c11-9603-8d05c299f92d","uuid":"cb060240-6c29-4df6-ae62-97f32ca3245d","msRemaining":585035,"requestsServed":2,"startTimestamp":1667973147234972432,"deadlineTimestamp":1667973809475000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.495] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.528] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.550] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.550] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.550] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:10200547328-10468982784\n[2022-11-09 05:53:02.551] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:10200547328-10468982784\n[2022-11-09 05:53:02.552] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.623] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.628] [global] [info] retrieving pythonic sample took: 0.003682s\n[2022-11-09 05:53:02.695] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.696] [global] [info] retrieving pythonic sample took: 0.000264s\n[2022-11-09 05:53:02.706] [hyper specializer] [info] Deserialization of Code context took 0.153428s\n[2022-11-09 05:53:02.706] [hyper specializer] [info] Total Stage Decode took 0.154458s\n[2022-11-09 05:53:02.865] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:10200547328-10468982784 on 256.00 KB\n[2022-11-09 05:53:02.865] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.865] [fileinputoperator] [info] Filling sample cache for json operator took 0.159400s (1 entries, 0 rows)\n[2022-11-09 05:53:02.897] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:10200547328-10468982784 on 256.00 KB\n[2022-11-09 05:53:02.974] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:10200547328-10468982784 on 256.00 KB\n[2022-11-09 05:53:03.081] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.082] [fileinputoperator] [info] Extracting row sample took 0.216181s\n[2022-11-09 05:53:03.228] [hyper specializer] [info] sampling (setInputFiles) took 0.522543s\n[2022-11-09 05:53:03.229] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.229] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.229] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.229] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.229] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.229] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.229] [global] [warning] requested 2000 rows for sampling, but only 104 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.232] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.233] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.274] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.464] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.464] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.464] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.464] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.467] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.470] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.472] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.474] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.475] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.476] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.484] [hyper specializer] [info] generated code in 0.019456s\n[2022-11-09 05:53:03.521] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.522] [Lambda worker] [info] -- hyperspecialization took 0.971536s\n[2022-11-09 05:53:03.558] [global] [info] TransformStage - Optimization via LLVM passes took 0.036288 ms\n[2022-11-09 05:53:03.558] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.570] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.570] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.570] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.832] [Lambda worker] [info] fast path took: 5.261279s\n[2022-11-09 05:53:08.832] [Lambda worker] [info] Input rows processed: normal: 7190 unresolved: 53149\n[2022-11-09 05:53:08.832] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 53149\n[2022-11-09 05:53:08.832] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.832] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.832] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.055] [Lambda worker] [info] Compilation of slow path took 1.223328s\n[2022-11-09 05:53:13.733] [Lambda worker] [info] Resolved buffer, compiled: 1925 interpreted: 24788 unresolved: 0\n[2022-11-09 05:53:17.366] [Lambda worker] [info] Resolved buffer, compiled: 1936 interpreted: 24500 unresolved: 0\n[2022-11-09 05:53:17.372] [Lambda worker] [info] Exception resolution/slow path done. Took 8.540058s\n[2022-11-09 05:53:17.372] [Lambda worker] [info] Data processed in 13.8015s 25.48 KB (1060 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.372] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.372] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.372] [Lambda worker] [info] Writing output from 2 parts (25.48 KB, 1060 rows)\n[2022-11-09 05:53:17.372] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.372] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.372] [s3fs] [info] Writing buffer of size 12009\n[2022-11-09 05:53:17.372] [s3fs] [info] Writing buffer of size 14085\n[2022-11-09 05:53:17.372] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.372] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.439] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.439] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.439] [Lambda worker] [info] Took 13.868889s in total\n[2022-11-09 05:53:17.439] [Lambda worker] [info] Paths rows took: normal: 7190 general: 3861 interpreter: 49288 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:10200547328-10468982784"]},{"container":{"reused":true,"requestId":"a988f90b-0b6c-4be3-a886-08b5e0c6685d","uuid":"b4cbfb5f-3fb4-470c-b2a5-d584ae4f2878","msRemaining":584421,"requestsServed":2,"startTimestamp":1667973147457958976,"deadlineTimestamp":1667973808873000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.900] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.933] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.956] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.956] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.956] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:2415919104-2684354560\n[2022-11-09 05:53:01.957] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:2415919104-2684354560\n[2022-11-09 05:53:01.958] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.028] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.032] [global] [info] retrieving pythonic sample took: 0.003507s\n[2022-11-09 05:53:02.099] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.100] [global] [info] retrieving pythonic sample took: 0.000256s\n[2022-11-09 05:53:02.110] [hyper specializer] [info] Deserialization of Code context took 0.151956s\n[2022-11-09 05:53:02.110] [hyper specializer] [info] Total Stage Decode took 0.152995s\n[2022-11-09 05:53:02.188] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:2415919104-2684354560 on 256.00 KB\n[2022-11-09 05:53:02.188] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.188] [fileinputoperator] [info] Filling sample cache for json operator took 0.077956s (1 entries, 0 rows)\n[2022-11-09 05:53:02.217] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:2415919104-2684354560 on 256.00 KB\n[2022-11-09 05:53:02.312] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:2415919104-2684354560 on 256.00 KB\n[2022-11-09 05:53:02.413] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.413] [fileinputoperator] [info] Extracting row sample took 0.224697s\n[2022-11-09 05:53:02.552] [hyper specializer] [info] sampling (setInputFiles) took 0.442338s\n[2022-11-09 05:53:02.553] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.553] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.553] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.553] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.553] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.553] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.553] [global] [warning] requested 2000 rows for sampling, but only 111 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.557] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.557] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.596] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.771] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.771] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.771] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.771] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.774] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.777] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.779] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.781] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.782] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.783] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.790] [hyper specializer] [info] generated code in 0.018988s\n[2022-11-09 05:53:02.827] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.827] [Lambda worker] [info] -- hyperspecialization took 0.871009s\n[2022-11-09 05:53:02.863] [global] [info] TransformStage - Optimization via LLVM passes took 0.035852 ms\n[2022-11-09 05:53:02.863] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.875] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.875] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.875] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.999] [Lambda worker] [info] fast path took: 5.123910s\n[2022-11-09 05:53:07.999] [Lambda worker] [info] Input rows processed: normal: 8563 unresolved: 65510\n[2022-11-09 05:53:07.999] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 65510\n[2022-11-09 05:53:07.999] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.999] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.999] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.202] [Lambda worker] [info] Compilation of slow path took 1.202093s\n[2022-11-09 05:53:13.231] [Lambda worker] [info] Resolved buffer, compiled: 3692 interpreted: 29251 unresolved: 0\n[2022-11-09 05:53:17.357] [Lambda worker] [info] Resolved buffer, compiled: 3688 interpreted: 28879 unresolved: 0\n[2022-11-09 05:53:17.363] [Lambda worker] [info] Exception resolution/slow path done. Took 9.363584s\n[2022-11-09 05:53:17.363] [Lambda worker] [info] Data processed in 14.4877s 58.75 KB (2459 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.363] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.363] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.363] [Lambda worker] [info] Writing output from 2 parts (58.75 KB, 2459 rows)\n[2022-11-09 05:53:17.363] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.363] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.363] [s3fs] [info] Writing buffer of size 30810\n[2022-11-09 05:53:17.363] [s3fs] [info] Writing buffer of size 29354\n[2022-11-09 05:53:17.363] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.363] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.451] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.451] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.451] [Lambda worker] [info] Took 14.575913s in total\n[2022-11-09 05:53:17.451] [Lambda worker] [info] Paths rows took: normal: 8563 general: 7380 interpreter: 58130 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:2415919104-2684354560"]},{"container":{"reused":true,"requestId":"784d3f07-4696-49bc-b3da-059cab1f6ce5","uuid":"2e646d65-bd02-4132-89cc-0532c5bd00f3","msRemaining":584995,"requestsServed":2,"startTimestamp":1667973147285234540,"deadlineTimestamp":1667973809466000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.509] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.531] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.531] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.531] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:9932111872-10200547328\n[2022-11-09 05:53:02.532] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:9932111872-10200547328\n[2022-11-09 05:53:02.533] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.603] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.607] [global] [info] retrieving pythonic sample took: 0.003663s\n[2022-11-09 05:53:02.674] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.675] [global] [info] retrieving pythonic sample took: 0.000258s\n[2022-11-09 05:53:02.684] [hyper specializer] [info] Deserialization of Code context took 0.151037s\n[2022-11-09 05:53:02.684] [hyper specializer] [info] Total Stage Decode took 0.152059s\n[2022-11-09 05:53:02.829] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:9932111872-10200547328 on 256.00 KB\n[2022-11-09 05:53:02.829] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.829] [fileinputoperator] [info] Filling sample cache for json operator took 0.144687s (1 entries, 0 rows)\n[2022-11-09 05:53:02.862] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:9932111872-10200547328 on 256.00 KB\n[2022-11-09 05:53:02.933] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:9932111872-10200547328 on 256.00 KB\n[2022-11-09 05:53:03.041] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.041] [fileinputoperator] [info] Extracting row sample took 0.211948s\n[2022-11-09 05:53:03.190] [hyper specializer] [info] sampling (setInputFiles) took 0.505221s\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [warning] requested 2000 rows for sampling, but only 111 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.194] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.194] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.236] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.419] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.419] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.419] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.419] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.422] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.425] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.427] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.429] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.430] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.431] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.438] [hyper specializer] [info] generated code in 0.019411s\n[2022-11-09 05:53:03.477] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.477] [Lambda worker] [info] -- hyperspecialization took 0.946129s\n[2022-11-09 05:53:03.513] [global] [info] TransformStage - Optimization via LLVM passes took 0.035899 ms\n[2022-11-09 05:53:03.513] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.526] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.526] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.526] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.839] [Lambda worker] [info] fast path took: 5.313628s\n[2022-11-09 05:53:08.839] [Lambda worker] [info] Input rows processed: normal: 7025 unresolved: 53550\n[2022-11-09 05:53:08.839] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 53550\n[2022-11-09 05:53:08.839] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.839] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.839] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.056] [Lambda worker] [info] Compilation of slow path took 1.216225s\n[2022-11-09 05:53:13.849] [Lambda worker] [info] Resolved buffer, compiled: 2247 interpreted: 25731 unresolved: 0\n[2022-11-09 05:53:17.405] [Lambda worker] [info] Resolved buffer, compiled: 2148 interpreted: 23424 unresolved: 0\n[2022-11-09 05:53:17.410] [Lambda worker] [info] Exception resolution/slow path done. Took 8.570829s\n[2022-11-09 05:53:17.410] [Lambda worker] [info] Data processed in 13.8846s 28.10 KB (1168 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.410] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.410] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.410] [Lambda worker] [info] Writing output from 2 parts (28.10 KB, 1168 rows)\n[2022-11-09 05:53:17.410] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.410] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.410] [s3fs] [info] Writing buffer of size 15504\n[2022-11-09 05:53:17.410] [s3fs] [info] Writing buffer of size 13273\n[2022-11-09 05:53:17.410] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.410] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.470] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.470] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.470] [Lambda worker] [info] Took 13.944054s in total\n[2022-11-09 05:53:17.470] [Lambda worker] [info] Paths rows took: normal: 7025 general: 4395 interpreter: 49155 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:9932111872-10200547328"]},{"container":{"reused":true,"requestId":"2b2a109a-388d-4cf2-a57c-4e4b09b7b3c2","uuid":"9131a2c7-9c27-456b-9742-5926a96efee0","msRemaining":584524,"requestsServed":2,"startTimestamp":1667973147471681148,"deadlineTimestamp":1667973808996000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.016] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.049] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.072] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.072] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.072] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:5905580032-6174015488\n[2022-11-09 05:53:02.073] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:5905580032-6174015488\n[2022-11-09 05:53:02.074] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.147] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.152] [global] [info] retrieving pythonic sample took: 0.003670s\n[2022-11-09 05:53:02.219] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.220] [global] [info] retrieving pythonic sample took: 0.000259s\n[2022-11-09 05:53:02.230] [hyper specializer] [info] Deserialization of Code context took 0.155446s\n[2022-11-09 05:53:02.230] [hyper specializer] [info] Total Stage Decode took 0.156493s\n[2022-11-09 05:53:02.361] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:5905580032-6174015488 on 256.00 KB\n[2022-11-09 05:53:02.361] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.361] [fileinputoperator] [info] Filling sample cache for json operator took 0.131249s (1 entries, 0 rows)\n[2022-11-09 05:53:02.403] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:5905580032-6174015488 on 256.00 KB\n[2022-11-09 05:53:02.535] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:5905580032-6174015488 on 256.00 KB\n[2022-11-09 05:53:02.663] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.663] [fileinputoperator] [info] Extracting row sample took 0.302265s\n[2022-11-09 05:53:02.823] [hyper specializer] [info] sampling (setInputFiles) took 0.593634s\n[2022-11-09 05:53:02.824] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.824] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.824] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.824] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.824] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.824] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.824] [global] [warning] requested 2000 rows for sampling, but only 155 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.829] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.829] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.875] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.030] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.030] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.030] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.030] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.033] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.036] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.038] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.040] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.041] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.042] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.050] [hyper specializer] [info] generated code in 0.019505s\n[2022-11-09 05:53:03.092] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.092] [Lambda worker] [info] -- hyperspecialization took 1.019949s\n[2022-11-09 05:53:03.129] [global] [info] TransformStage - Optimization via LLVM passes took 0.036547 ms\n[2022-11-09 05:53:03.129] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.141] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.141] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.141] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.365] [Lambda worker] [info] fast path took: 5.224105s\n[2022-11-09 05:53:08.365] [Lambda worker] [info] Input rows processed: normal: 8186 unresolved: 61143\n[2022-11-09 05:53:08.365] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 61143\n[2022-11-09 05:53:08.365] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.365] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.366] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.593] [Lambda worker] [info] Compilation of slow path took 1.227308s\n[2022-11-09 05:53:13.472] [Lambda worker] [info] Resolved buffer, compiled: 3118 interpreted: 27132 unresolved: 0\n[2022-11-09 05:53:17.386] [Lambda worker] [info] Resolved buffer, compiled: 3023 interpreted: 27870 unresolved: 0\n[2022-11-09 05:53:17.392] [Lambda worker] [info] Exception resolution/slow path done. Took 9.026884s\n[2022-11-09 05:53:17.392] [Lambda worker] [info] Data processed in 14.2512s 41.82 KB (1744 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.392] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.392] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.392] [Lambda worker] [info] Writing output from 2 parts (41.82 KB, 1744 rows)\n[2022-11-09 05:53:17.393] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.393] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.393] [s3fs] [info] Writing buffer of size 21901\n[2022-11-09 05:53:17.393] [s3fs] [info] Writing buffer of size 20919\n[2022-11-09 05:53:17.393] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.393] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.471] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.471] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.471] [Lambda worker] [info] Took 14.329963s in total\n[2022-11-09 05:53:17.471] [Lambda worker] [info] Paths rows took: normal: 8186 general: 6141 interpreter: 55002 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:5905580032-6174015488"]},{"container":{"reused":true,"requestId":"28592e6b-ca67-4d1f-8ff6-792a0f841792","uuid":"6742b97f-5883-4a06-be73-021bda97af0b","msRemaining":584484,"requestsServed":2,"startTimestamp":1667973147316265569,"deadlineTimestamp":1667973808984000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.003] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.036] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.059] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.059] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.059] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:5637144576-5905580032\n[2022-11-09 05:53:02.060] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:5637144576-5905580032\n[2022-11-09 05:53:02.061] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.136] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.140] [global] [info] retrieving pythonic sample took: 0.003532s\n[2022-11-09 05:53:02.208] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.209] [global] [info] retrieving pythonic sample took: 0.000254s\n[2022-11-09 05:53:02.219] [hyper specializer] [info] Deserialization of Code context took 0.157392s\n[2022-11-09 05:53:02.219] [hyper specializer] [info] Total Stage Decode took 0.158432s\n[2022-11-09 05:53:02.282] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:5637144576-5905580032 on 256.00 KB\n[2022-11-09 05:53:02.282] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.282] [fileinputoperator] [info] Filling sample cache for json operator took 0.063571s (1 entries, 0 rows)\n[2022-11-09 05:53:02.308] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:5637144576-5905580032 on 256.00 KB\n[2022-11-09 05:53:02.376] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:5637144576-5905580032 on 256.00 KB\n[2022-11-09 05:53:02.527] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.528] [fileinputoperator] [info] Extracting row sample took 0.245096s\n[2022-11-09 05:53:02.674] [hyper specializer] [info] sampling (setInputFiles) took 0.455265s\n[2022-11-09 05:53:02.675] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.675] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.675] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.675] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.675] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.675] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.675] [global] [warning] requested 2000 rows for sampling, but only 130 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.679] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.679] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.721] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.898] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.898] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.898] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.898] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.901] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.904] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.905] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.907] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.908] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.909] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.917] [hyper specializer] [info] generated code in 0.018674s\n[2022-11-09 05:53:02.954] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.954] [Lambda worker] [info] -- hyperspecialization took 0.895560s\n[2022-11-09 05:53:02.991] [global] [info] TransformStage - Optimization via LLVM passes took 0.036398 ms\n[2022-11-09 05:53:02.991] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.004] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.004] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.004] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.162] [Lambda worker] [info] fast path took: 5.157720s\n[2022-11-09 05:53:08.162] [Lambda worker] [info] Input rows processed: normal: 8175 unresolved: 61398\n[2022-11-09 05:53:08.162] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 61398\n[2022-11-09 05:53:08.162] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.162] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.162] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.384] [Lambda worker] [info] Compilation of slow path took 1.221997s\n[2022-11-09 05:53:13.368] [Lambda worker] [info] Resolved buffer, compiled: 2873 interpreted: 27261 unresolved: 0\n[2022-11-09 05:53:17.439] [Lambda worker] [info] Resolved buffer, compiled: 2727 interpreted: 28537 unresolved: 0\n[2022-11-09 05:53:17.445] [Lambda worker] [info] Exception resolution/slow path done. Took 9.283336s\n[2022-11-09 05:53:17.445] [Lambda worker] [info] Data processed in 14.4412s 42.39 KB (1773 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.445] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.445] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.445] [Lambda worker] [info] Writing output from 2 parts (42.39 KB, 1773 rows)\n[2022-11-09 05:53:17.445] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.445] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.445] [s3fs] [info] Writing buffer of size 22517\n[2022-11-09 05:53:17.445] [s3fs] [info] Writing buffer of size 20892\n[2022-11-09 05:53:17.445] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.445] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.499] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.499] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.499] [Lambda worker] [info] Took 14.494810s in total\n[2022-11-09 05:53:17.499] [Lambda worker] [info] Paths rows took: normal: 8175 general: 5600 interpreter: 55798 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:5637144576-5905580032"]},{"container":{"reused":true,"requestId":"c2a12297-574a-4a49-b85c-75456227d41b","uuid":"76822cf8-9710-4fb0-8999-b985da3a023e","msRemaining":584690,"requestsServed":2,"startTimestamp":1667973147321550170,"deadlineTimestamp":1667973809191000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.211] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.245] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.268] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.268] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.268] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:2952790016-3221225472\n[2022-11-09 05:53:02.269] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:2952790016-3221225472\n[2022-11-09 05:53:02.270] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.341] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.346] [global] [info] retrieving pythonic sample took: 0.003673s\n[2022-11-09 05:53:02.413] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.414] [global] [info] retrieving pythonic sample took: 0.000259s\n[2022-11-09 05:53:02.424] [hyper specializer] [info] Deserialization of Code context took 0.153564s\n[2022-11-09 05:53:02.424] [hyper specializer] [info] Total Stage Decode took 0.154590s\n[2022-11-09 05:53:02.514] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:2952790016-3221225472 on 256.00 KB\n[2022-11-09 05:53:02.514] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.514] [fileinputoperator] [info] Filling sample cache for json operator took 0.090546s (1 entries, 0 rows)\n[2022-11-09 05:53:02.538] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:2952790016-3221225472 on 256.00 KB\n[2022-11-09 05:53:02.641] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:2952790016-3221225472 on 256.00 KB\n[2022-11-09 05:53:02.764] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.764] [fileinputoperator] [info] Extracting row sample took 0.249370s\n[2022-11-09 05:53:02.913] [hyper specializer] [info] sampling (setInputFiles) took 0.489517s\n[2022-11-09 05:53:02.914] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.914] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.914] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.914] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.914] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.914] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.914] [global] [warning] requested 2000 rows for sampling, but only 114 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.918] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.918] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.960] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.200] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.200] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.200] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.200] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.203] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.206] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.208] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.210] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.211] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.212] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.219] [hyper specializer] [info] generated code in 0.019513s\n[2022-11-09 05:53:03.258] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.258] [Lambda worker] [info] -- hyperspecialization took 0.990675s\n[2022-11-09 05:53:03.295] [global] [info] TransformStage - Optimization via LLVM passes took 0.036914 ms\n[2022-11-09 05:53:03.295] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.308] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.308] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.308] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.621] [Lambda worker] [info] fast path took: 5.313090s\n[2022-11-09 05:53:08.621] [Lambda worker] [info] Input rows processed: normal: 7086 unresolved: 55622\n[2022-11-09 05:53:08.621] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 55622\n[2022-11-09 05:53:08.621] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.622] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.622] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.834] [Lambda worker] [info] Compilation of slow path took 1.211997s\n[2022-11-09 05:53:13.558] [Lambda worker] [info] Resolved buffer, compiled: 2443 interpreted: 25651 unresolved: 0\n[2022-11-09 05:53:17.296] [Lambda worker] [info] Resolved buffer, compiled: 2323 interpreted: 25205 unresolved: 0\n[2022-11-09 05:53:17.303] [Lambda worker] [info] Exception resolution/slow path done. Took 8.681466s\n[2022-11-09 05:53:17.303] [Lambda worker] [info] Data processed in 13.9947s 40.21 KB (1676 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.303] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.303] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.303] [Lambda worker] [info] Writing output from 2 parts (40.21 KB, 1676 rows)\n[2022-11-09 05:53:17.303] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.303] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.303] [s3fs] [info] Writing buffer of size 20749\n[2022-11-09 05:53:17.303] [s3fs] [info] Writing buffer of size 20421\n[2022-11-09 05:53:17.303] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.303] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.500] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.500] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.500] [Lambda worker] [info] Took 14.192046s in total\n[2022-11-09 05:53:17.500] [Lambda worker] [info] Paths rows took: normal: 7086 general: 4766 interpreter: 50856 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:2952790016-3221225472"]},{"container":{"reused":true,"requestId":"2fdbab09-4d98-4665-b2c7-aec44a6e05ca","uuid":"a1f37394-f188-40e5-92ae-d4ca1040b4a2","msRemaining":584448,"requestsServed":2,"startTimestamp":1667973146404121399,"deadlineTimestamp":1667973808953000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.972] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.005] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.028] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.028] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.028] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:4831838208-5100273664\n[2022-11-09 05:53:02.029] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:4831838208-5100273664\n[2022-11-09 05:53:02.030] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.105] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.110] [global] [info] retrieving pythonic sample took: 0.003892s\n[2022-11-09 05:53:02.177] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.262] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.262] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.262] [fileinputoperator] [info] Filling sample cache for json operator took 0.083756s (1 entries, 0 rows)\n[2022-11-09 05:53:02.297] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.455] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.634] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.634] [fileinputoperator] [info] Extracting row sample took 0.372407s\n[2022-11-09 05:53:02.682] [global] [info] retrieving pythonic sample took: 0.503620s\n[2022-11-09 05:53:02.692] [hyper specializer] [info] Deserialization of Code context took 0.661581s\n[2022-11-09 05:53:02.692] [hyper specializer] [info] Total Stage Decode took 0.662614s\n[2022-11-09 05:53:02.793] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:4831838208-5100273664 on 256.00 KB\n[2022-11-09 05:53:02.793] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.793] [fileinputoperator] [info] Filling sample cache for json operator took 0.071674s (1 entries, 0 rows)\n[2022-11-09 05:53:02.829] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:4831838208-5100273664 on 256.00 KB\n[2022-11-09 05:53:02.921] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:4831838208-5100273664 on 256.00 KB\n[2022-11-09 05:53:03.087] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.087] [fileinputoperator] [info] Extracting row sample took 0.294121s\n[2022-11-09 05:53:03.262] [hyper specializer] [info] sampling (setInputFiles) took 0.569787s\n[2022-11-09 05:53:03.262] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.262] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.262] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.262] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.262] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.262] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.262] [global] [warning] requested 2000 rows for sampling, but only 137 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.269] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.269] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.318] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.514] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.514] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.514] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.514] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.517] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.520] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.522] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.524] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.525] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.527] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.534] [hyper specializer] [info] generated code in 0.019642s\n[2022-11-09 05:53:03.579] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.580] [Lambda worker] [info] -- hyperspecialization took 1.551606s\n[2022-11-09 05:53:03.616] [global] [info] TransformStage - Optimization via LLVM passes took 0.036393 ms\n[2022-11-09 05:53:03.616] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.629] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.629] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.629] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.163] [Lambda worker] [info] fast path took: 4.534062s\n[2022-11-09 05:53:08.163] [Lambda worker] [info] Input rows processed: normal: 8648 unresolved: 61758\n[2022-11-09 05:53:08.163] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 61758\n[2022-11-09 05:53:08.163] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.163] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.163] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.378] [Lambda worker] [info] Compilation of slow path took 1.215387s\n[2022-11-09 05:53:13.308] [Lambda worker] [info] Resolved buffer, compiled: 3306 interpreted: 27070 unresolved: 0\n[2022-11-09 05:53:17.426] [Lambda worker] [info] Resolved buffer, compiled: 3065 interpreted: 28317 unresolved: 0\n[2022-11-09 05:53:17.432] [Lambda worker] [info] Exception resolution/slow path done. Took 9.269214s\n[2022-11-09 05:53:17.432] [Lambda worker] [info] Data processed in 13.8034s 43.97 KB (1836 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.432] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.432] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.432] [Lambda worker] [info] Writing output from 2 parts (43.97 KB, 1836 rows)\n[2022-11-09 05:53:17.432] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.432] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.432] [s3fs] [info] Writing buffer of size 20887\n[2022-11-09 05:53:17.432] [s3fs] [info] Writing buffer of size 24135\n[2022-11-09 05:53:17.432] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.432] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.504] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.504] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.504] [Lambda worker] [info] Took 13.875300s in total\n[2022-11-09 05:53:17.504] [Lambda worker] [info] Paths rows took: normal: 8648 general: 6371 interpreter: 55387 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:4831838208-5100273664"]},{"container":{"reused":true,"requestId":"df807c1f-9f99-4531-9bda-c5425466e523","uuid":"8b3c822d-4bd2-4789-8116-b7e6c904f0f2","msRemaining":584919,"requestsServed":2,"startTimestamp":1667973147340013804,"deadlineTimestamp":1667973809440000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.458] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.491] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.513] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.513] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.513] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:9126805504-9395240960\n[2022-11-09 05:53:02.515] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:9126805504-9395240960\n[2022-11-09 05:53:02.516] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.587] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.592] [global] [info] retrieving pythonic sample took: 0.003758s\n[2022-11-09 05:53:02.659] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.728] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.728] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.728] [fileinputoperator] [info] Filling sample cache for json operator took 0.068256s (1 entries, 0 rows)\n[2022-11-09 05:53:02.751] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.896] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.070] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.070] [fileinputoperator] [info] Extracting row sample took 0.342383s\n[2022-11-09 05:53:03.118] [global] [info] retrieving pythonic sample took: 0.458192s\n[2022-11-09 05:53:03.128] [hyper specializer] [info] Deserialization of Code context took 0.611951s\n[2022-11-09 05:53:03.128] [hyper specializer] [info] Total Stage Decode took 0.613003s\n[2022-11-09 05:53:03.201] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:9126805504-9395240960 on 256.00 KB\n[2022-11-09 05:53:03.201] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.201] [fileinputoperator] [info] Filling sample cache for json operator took 0.043966s (1 entries, 0 rows)\n[2022-11-09 05:53:03.228] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:9126805504-9395240960 on 256.00 KB\n[2022-11-09 05:53:03.281] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:9126805504-9395240960 on 256.00 KB\n[2022-11-09 05:53:03.366] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.366] [fileinputoperator] [info] Extracting row sample took 0.164782s\n[2022-11-09 05:53:03.447] [hyper specializer] [info] sampling (setInputFiles) took 0.319471s\n[2022-11-09 05:53:03.448] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.448] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.448] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.448] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.448] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.448] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.448] [global] [warning] requested 2000 rows for sampling, but only 47 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.450] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.450] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.474] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.475] [global] [warning] requested 100 rows for sampling, but only 47 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.584] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.584] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.584] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.585] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.588] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.591] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.592] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.594] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.596] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.597] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.604] [hyper specializer] [info] generated code in 0.019641s\n[2022-11-09 05:53:03.625] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.625] [Lambda worker] [info] -- hyperspecialization took 1.112139s\n[2022-11-09 05:53:03.663] [global] [info] TransformStage - Optimization via LLVM passes took 0.036892 ms\n[2022-11-09 05:53:03.663] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.675] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.675] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.675] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.964] [Lambda worker] [info] fast path took: 5.288515s\n[2022-11-09 05:53:08.964] [Lambda worker] [info] Input rows processed: normal: 6709 unresolved: 53209\n[2022-11-09 05:53:08.964] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 53209\n[2022-11-09 05:53:08.964] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.964] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.964] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.179] [Lambda worker] [info] Compilation of slow path took 1.214531s\n[2022-11-09 05:53:13.838] [Lambda worker] [info] Resolved buffer, compiled: 1876 interpreted: 24816 unresolved: 0\n[2022-11-09 05:53:17.454] [Lambda worker] [info] Resolved buffer, compiled: 2475 interpreted: 24042 unresolved: 0\n[2022-11-09 05:53:17.460] [Lambda worker] [info] Exception resolution/slow path done. Took 8.495876s\n[2022-11-09 05:53:17.460] [Lambda worker] [info] Data processed in 13.7846s 30.10 KB (1252 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.460] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.460] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.460] [Lambda worker] [info] Writing output from 2 parts (30.10 KB, 1252 rows)\n[2022-11-09 05:53:17.460] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.460] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.460] [s3fs] [info] Writing buffer of size 15022\n[2022-11-09 05:53:17.460] [s3fs] [info] Writing buffer of size 15802\n[2022-11-09 05:53:17.460] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.460] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.520] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.520] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.520] [Lambda worker] [info] Took 13.844325s in total\n[2022-11-09 05:53:17.520] [Lambda worker] [info] Paths rows took: normal: 6709 general: 4351 interpreter: 48858 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:9126805504-9395240960"]},{"container":{"reused":true,"requestId":"a904d4db-03e1-4a4c-89f5-abae07229a6a","uuid":"be999fa7-2a6e-4d4c-b624-7bb17508e98b","msRemaining":584369,"requestsServed":2,"startTimestamp":1667973146986858451,"deadlineTimestamp":1667973808897000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.917] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.951] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.974] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.974] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.974] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:3489660928-3758096384\n[2022-11-09 05:53:01.975] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:3489660928-3758096384\n[2022-11-09 05:53:01.976] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.048] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.052] [global] [info] retrieving pythonic sample took: 0.003596s\n[2022-11-09 05:53:02.121] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.122] [global] [info] retrieving pythonic sample took: 0.000259s\n[2022-11-09 05:53:02.132] [hyper specializer] [info] Deserialization of Code context took 0.155755s\n[2022-11-09 05:53:02.132] [hyper specializer] [info] Total Stage Decode took 0.156794s\n[2022-11-09 05:53:02.223] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:3489660928-3758096384 on 256.00 KB\n[2022-11-09 05:53:02.223] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.223] [fileinputoperator] [info] Filling sample cache for json operator took 0.090453s (1 entries, 0 rows)\n[2022-11-09 05:53:02.255] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:3489660928-3758096384 on 256.00 KB\n[2022-11-09 05:53:02.414] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:3489660928-3758096384 on 256.00 KB\n[2022-11-09 05:53:02.560] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.560] [fileinputoperator] [info] Extracting row sample took 0.336944s\n[2022-11-09 05:53:02.716] [hyper specializer] [info] sampling (setInputFiles) took 0.583565s\n[2022-11-09 05:53:02.716] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.716] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.716] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.716] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.716] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.716] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.716] [global] [warning] requested 2000 rows for sampling, but only 142 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.721] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.721] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.765] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.935] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.935] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.935] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.935] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.938] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.941] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.943] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.945] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.946] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.947] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.954] [hyper specializer] [info] generated code in 0.019074s\n[2022-11-09 05:53:02.994] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.994] [Lambda worker] [info] -- hyperspecialization took 1.020391s\n[2022-11-09 05:53:03.030] [global] [info] TransformStage - Optimization via LLVM passes took 0.035829 ms\n[2022-11-09 05:53:03.030] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.043] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.043] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.043] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.063] [Lambda worker] [info] fast path took: 5.020411s\n[2022-11-09 05:53:08.064] [Lambda worker] [info] Input rows processed: normal: 8910 unresolved: 65431\n[2022-11-09 05:53:08.064] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 65431\n[2022-11-09 05:53:08.064] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.064] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.064] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.285] [Lambda worker] [info] Compilation of slow path took 1.221493s\n[2022-11-09 05:53:13.449] [Lambda worker] [info] Resolved buffer, compiled: 3338 interpreted: 30133 unresolved: 0\n[2022-11-09 05:53:17.464] [Lambda worker] [info] Resolved buffer, compiled: 3335 interpreted: 28625 unresolved: 0\n[2022-11-09 05:53:17.470] [Lambda worker] [info] Exception resolution/slow path done. Took 9.406655s\n[2022-11-09 05:53:17.470] [Lambda worker] [info] Data processed in 14.4272s 51.90 KB (2170 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.470] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.470] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.470] [Lambda worker] [info] Writing output from 2 parts (51.90 KB, 2170 rows)\n[2022-11-09 05:53:17.470] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.470] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.470] [s3fs] [info] Writing buffer of size 27616\n[2022-11-09 05:53:17.470] [s3fs] [info] Writing buffer of size 25531\n[2022-11-09 05:53:17.470] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.470] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.527] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.527] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.527] [Lambda worker] [info] Took 14.484206s in total\n[2022-11-09 05:53:17.527] [Lambda worker] [info] Paths rows took: normal: 8910 general: 6673 interpreter: 58758 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:3489660928-3758096384"]},{"container":{"reused":true,"requestId":"7746d8fe-aea5-480b-a896-f22ad7d866b3","uuid":"64938fec-1b23-461c-9f1b-58958f94f353","msRemaining":585061,"requestsServed":2,"startTimestamp":1667973146310605947,"deadlineTimestamp":1667973809609000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.628] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.656] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.675] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.675] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.675] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2021-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:02.676] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2021-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:02.677] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.737] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.741] [global] [info] retrieving pythonic sample took: 0.003063s\n[2022-11-09 05:53:02.798] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.854] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.854] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.854] [fileinputoperator] [info] Filling sample cache for json operator took 0.055092s (1 entries, 0 rows)\n[2022-11-09 05:53:02.873] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.035] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.186] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.186] [fileinputoperator] [info] Extracting row sample took 0.331812s\n[2022-11-09 05:53:03.226] [global] [info] retrieving pythonic sample took: 0.427130s\n[2022-11-09 05:53:03.234] [hyper specializer] [info] Deserialization of Code context took 0.557445s\n[2022-11-09 05:53:03.234] [hyper specializer] [info] Total Stage Decode took 0.558333s\n[2022-11-09 05:53:03.296] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:03.296] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.296] [fileinputoperator] [info] Filling sample cache for json operator took 0.036782s (1 entries, 0 rows)\n[2022-11-09 05:53:03.318] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:03.383] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:03.501] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.501] [fileinputoperator] [info] Extracting row sample took 0.204521s\n[2022-11-09 05:53:03.634] [hyper specializer] [info] sampling (setInputFiles) took 0.399110s\n[2022-11-09 05:53:03.634] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.634] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.634] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.634] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.634] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.634] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.634] [global] [warning] requested 2000 rows for sampling, but only 129 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.639] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.639] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.676] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.829] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.829] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.829] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.829] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.832] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.834] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.836] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.837] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.839] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.840] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.846] [hyper specializer] [info] generated code in 0.016654s\n[2022-11-09 05:53:03.880] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.880] [Lambda worker] [info] -- hyperspecialization took 1.204960s\n[2022-11-09 05:53:03.911] [global] [info] TransformStage - Optimization via LLVM passes took 0.031042 ms\n[2022-11-09 05:53:03.911] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.922] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.922] [global] [info] Compiled code paths for stage 0 in 0.04 ms\n[2022-11-09 05:53:03.922] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.111] [Lambda worker] [info] fast path took: 5.189277s\n[2022-11-09 05:53:09.111] [Lambda worker] [info] Input rows processed: normal: 10181 unresolved: 69801\n[2022-11-09 05:53:09.111] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 69801\n[2022-11-09 05:53:09.111] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.111] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.111] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.166] [Lambda worker] [info] Compilation of slow path took 1.055150s\n[2022-11-09 05:53:13.828] [Lambda worker] [info] Resolved buffer, compiled: 5260 interpreted: 30691 unresolved: 0\n[2022-11-09 05:53:17.459] [Lambda worker] [info] Resolved buffer, compiled: 5368 interpreted: 28482 unresolved: 0\n[2022-11-09 05:53:17.464] [Lambda worker] [info] Exception resolution/slow path done. Took 8.352725s\n[2022-11-09 05:53:17.464] [Lambda worker] [info] Data processed in 13.5422s 46.19 KB (1916 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.464] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:17.464] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.464] [Lambda worker] [info] Writing output from 2 parts (46.19 KB, 1916 rows)\n[2022-11-09 05:53:17.464] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:17.464] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.464] [s3fs] [info] Writing buffer of size 25410\n[2022-11-09 05:53:17.464] [s3fs] [info] Writing buffer of size 21888\n[2022-11-09 05:53:17.464] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:17.464] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.547] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.547] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.547] [Lambda worker] [info] Took 13.625170s in total\n[2022-11-09 05:53:17.547] [Lambda worker] [info] Paths rows took: normal: 10181 general: 10628 interpreter: 59173 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2021-10-15.json:1073741824-1342177280"]},{"container":{"reused":true,"requestId":"166b439b-be5e-4643-8979-58967722eff9","uuid":"9f49c1f8-7bdc-4c4f-b8c9-c4042403a45a","msRemaining":584192,"requestsServed":2,"startTimestamp":1667973146834412092,"deadlineTimestamp":1667973808755000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.776] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.810] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.833] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.833] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.833] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:4563402752-4831838208\n[2022-11-09 05:53:01.834] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:4563402752-4831838208\n[2022-11-09 05:53:01.835] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.905] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.910] [global] [info] retrieving pythonic sample took: 0.003563s\n[2022-11-09 05:53:01.976] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.049] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.049] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.049] [fileinputoperator] [info] Filling sample cache for json operator took 0.072353s (1 entries, 0 rows)\n[2022-11-09 05:53:02.081] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.238] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.416] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.416] [fileinputoperator] [info] Extracting row sample took 0.366443s\n[2022-11-09 05:53:02.463] [global] [info] retrieving pythonic sample took: 0.485818s\n[2022-11-09 05:53:02.473] [hyper specializer] [info] Deserialization of Code context took 0.637462s\n[2022-11-09 05:53:02.473] [hyper specializer] [info] Total Stage Decode took 0.638521s\n[2022-11-09 05:53:02.591] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:4563402752-4831838208 on 256.00 KB\n[2022-11-09 05:53:02.591] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.592] [fileinputoperator] [info] Filling sample cache for json operator took 0.089278s (1 entries, 0 rows)\n[2022-11-09 05:53:02.624] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:4563402752-4831838208 on 256.00 KB\n[2022-11-09 05:53:02.740] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:4563402752-4831838208 on 256.00 KB\n[2022-11-09 05:53:02.875] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.875] [fileinputoperator] [info] Extracting row sample took 0.283188s\n[2022-11-09 05:53:03.051] [hyper specializer] [info] sampling (setInputFiles) took 0.578306s\n[2022-11-09 05:53:03.052] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.052] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.052] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.052] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.052] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.052] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.052] [global] [warning] requested 2000 rows for sampling, but only 216 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.060] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.060] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.111] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.266] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.266] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.266] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.266] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.269] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.272] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.274] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.276] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.278] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.279] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.286] [hyper specializer] [info] generated code in 0.019844s\n[2022-11-09 05:53:03.334] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.334] [Lambda worker] [info] -- hyperspecialization took 1.500819s\n[2022-11-09 05:53:03.370] [global] [info] TransformStage - Optimization via LLVM passes took 0.036059 ms\n[2022-11-09 05:53:03.370] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.383] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.383] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.383] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.169] [Lambda worker] [info] fast path took: 3.786003s\n[2022-11-09 05:53:07.169] [Lambda worker] [info] Input rows processed: normal: 10647 unresolved: 71478\n[2022-11-09 05:53:07.169] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 71478\n[2022-11-09 05:53:07.169] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.169] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.169] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.416] [Lambda worker] [info] Compilation of slow path took 1.246809s\n[2022-11-09 05:53:12.714] [Lambda worker] [info] Resolved buffer, compiled: 3411 interpreted: 30848 unresolved: 0\n[2022-11-09 05:53:17.430] [Lambda worker] [info] Resolved buffer, compiled: 3612 interpreted: 33607 unresolved: 0\n[2022-11-09 05:53:17.436] [Lambda worker] [info] Exception resolution/slow path done. Took 10.267065s\n[2022-11-09 05:53:17.436] [Lambda worker] [info] Data processed in 14.0532s 44.00 KB (1844 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.436] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.436] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.436] [Lambda worker] [info] Writing output from 2 parts (44.00 KB, 1844 rows)\n[2022-11-09 05:53:17.436] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.437] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.437] [s3fs] [info] Writing buffer of size 20601\n[2022-11-09 05:53:17.437] [s3fs] [info] Writing buffer of size 24454\n[2022-11-09 05:53:17.437] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.437] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.562] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.562] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.562] [Lambda worker] [info] Took 14.179229s in total\n[2022-11-09 05:53:17.562] [Lambda worker] [info] Paths rows took: normal: 10647 general: 7023 interpreter: 64455 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:4563402752-4831838208"]},{"container":{"reused":true,"requestId":"935268e5-25ac-4c15-8432-31acb1a16ff7","uuid":"694e8fe1-5df6-4c20-b1ef-56f97791db48","msRemaining":584797,"requestsServed":2,"startTimestamp":1667973146894406078,"deadlineTimestamp":1667973809365000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.386] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.419] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.442] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.442] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.442] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:7516192768-7784628224\n[2022-11-09 05:53:02.444] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:7516192768-7784628224\n[2022-11-09 05:53:02.445] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.517] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.521] [global] [info] retrieving pythonic sample took: 0.003679s\n[2022-11-09 05:53:02.588] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.651] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.652] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.652] [fileinputoperator] [info] Filling sample cache for json operator took 0.062325s (1 entries, 0 rows)\n[2022-11-09 05:53:02.677] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.845] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.021] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.021] [fileinputoperator] [info] Extracting row sample took 0.368995s\n[2022-11-09 05:53:03.068] [global] [info] retrieving pythonic sample took: 0.478644s\n[2022-11-09 05:53:03.078] [hyper specializer] [info] Deserialization of Code context took 0.633282s\n[2022-11-09 05:53:03.078] [hyper specializer] [info] Total Stage Decode took 0.634387s\n[2022-11-09 05:53:03.158] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:7516192768-7784628224 on 256.00 KB\n[2022-11-09 05:53:03.159] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.159] [fileinputoperator] [info] Filling sample cache for json operator took 0.051341s (1 entries, 0 rows)\n[2022-11-09 05:53:03.209] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:7516192768-7784628224 on 256.00 KB\n[2022-11-09 05:53:03.294] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:7516192768-7784628224 on 256.00 KB\n[2022-11-09 05:53:03.429] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.429] [fileinputoperator] [info] Extracting row sample took 0.270055s\n[2022-11-09 05:53:03.597] [hyper specializer] [info] sampling (setInputFiles) took 0.519387s\n[2022-11-09 05:53:03.598] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.598] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.598] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.598] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.598] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.598] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.598] [global] [warning] requested 2000 rows for sampling, but only 157 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.604] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.604] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.652] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.822] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.822] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.822] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.823] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.826] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.829] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.831] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.833] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.835] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.837] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.844] [hyper specializer] [info] generated code in 0.021557s\n[2022-11-09 05:53:03.887] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.890] [Lambda worker] [info] -- hyperspecialization took 1.447600s\n[2022-11-09 05:53:03.926] [global] [info] TransformStage - Optimization via LLVM passes took 0.036522 ms\n[2022-11-09 05:53:03.926] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.939] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.939] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.939] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.619] [Lambda worker] [info] fast path took: 4.679709s\n[2022-11-09 05:53:08.619] [Lambda worker] [info] Input rows processed: normal: 7032 unresolved: 54555\n[2022-11-09 05:53:08.619] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 54555\n[2022-11-09 05:53:08.619] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.619] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.619] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.840] [Lambda worker] [info] Compilation of slow path took 1.220897s\n[2022-11-09 05:53:13.743] [Lambda worker] [info] Resolved buffer, compiled: 2166 interpreted: 25396 unresolved: 0\n[2022-11-09 05:53:17.483] [Lambda worker] [info] Resolved buffer, compiled: 1960 interpreted: 25033 unresolved: 0\n[2022-11-09 05:53:17.489] [Lambda worker] [info] Exception resolution/slow path done. Took 8.870545s\n[2022-11-09 05:53:17.490] [Lambda worker] [info] Data processed in 13.5504s 28.83 KB (1199 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.490] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.490] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.490] [Lambda worker] [info] Writing output from 2 parts (28.83 KB, 1199 rows)\n[2022-11-09 05:53:17.490] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.490] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.490] [s3fs] [info] Writing buffer of size 14981\n[2022-11-09 05:53:17.490] [s3fs] [info] Writing buffer of size 14539\n[2022-11-09 05:53:17.490] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.490] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.567] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.567] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.567] [Lambda worker] [info] Took 13.628233s in total\n[2022-11-09 05:53:17.567] [Lambda worker] [info] Paths rows took: normal: 7032 general: 4126 interpreter: 50429 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:7516192768-7784628224"]},{"container":{"reused":true,"requestId":"872b6bc6-8106-4c89-87e0-db40128187f1","uuid":"37e75f53-1db0-4d30-a7f6-4e23c2440040","msRemaining":583783,"requestsServed":2,"startTimestamp":1667973146482887822,"deadlineTimestamp":1667973808377000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.396] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.429] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.451] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.451] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.451] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2015-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:01.453] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2015-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:01.454] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.523] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.528] [global] [info] retrieving pythonic sample took: 0.003472s\n[2022-11-09 05:53:01.594] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.595] [global] [info] retrieving pythonic sample took: 0.000258s\n[2022-11-09 05:53:01.605] [hyper specializer] [info] Deserialization of Code context took 0.151322s\n[2022-11-09 05:53:01.605] [hyper specializer] [info] Total Stage Decode took 0.152367s\n[2022-11-09 05:53:01.709] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:01.709] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.709] [fileinputoperator] [info] Filling sample cache for json operator took 0.104003s (1 entries, 0 rows)\n[2022-11-09 05:53:01.756] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:01.871] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.012] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.012] [fileinputoperator] [info] Extracting row sample took 0.303315s\n[2022-11-09 05:53:02.190] [hyper specializer] [info] sampling (setInputFiles) took 0.585148s\n[2022-11-09 05:53:02.191] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.191] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.191] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.191] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.191] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.191] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.191] [global] [warning] requested 2000 rows for sampling, but only 179 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.196] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.196] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.247] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.418] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.418] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.418] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.418] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.421] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.424] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.425] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.427] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.429] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.430] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.437] [hyper specializer] [info] generated code in 0.018725s\n[2022-11-09 05:53:02.484] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.484] [Lambda worker] [info] -- hyperspecialization took 1.032991s\n[2022-11-09 05:53:02.519] [global] [info] TransformStage - Optimization via LLVM passes took 0.034968 ms\n[2022-11-09 05:53:02.519] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.531] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.532] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.532] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.416] [Lambda worker] [info] fast path took: 4.884454s\n[2022-11-09 05:53:07.416] [Lambda worker] [info] Input rows processed: normal: 11633 unresolved: 76029\n[2022-11-09 05:53:07.416] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 76029\n[2022-11-09 05:53:07.416] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.416] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.416] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.657] [Lambda worker] [info] Compilation of slow path took 1.241215s\n[2022-11-09 05:53:13.120] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 38410 unresolved: 0\n[2022-11-09 05:53:17.514] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 37619 unresolved: 0\n[2022-11-09 05:53:17.520] [Lambda worker] [info] Exception resolution/slow path done. Took 10.103730s\n[2022-11-09 05:53:17.520] [Lambda worker] [info] Data processed in 14.9883s 57.25 KB (2480 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.520] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:17.520] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.520] [Lambda worker] [info] Writing output from 2 parts (57.25 KB, 2480 rows)\n[2022-11-09 05:53:17.520] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:17.520] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.520] [s3fs] [info] Writing buffer of size 29608\n[2022-11-09 05:53:17.520] [s3fs] [info] Writing buffer of size 29021\n[2022-11-09 05:53:17.520] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:17.520] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.592] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.593] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.593] [Lambda worker] [info] Took 15.060949s in total\n[2022-11-09 05:53:17.593] [Lambda worker] [info] Paths rows took: normal: 11633 general: 0 interpreter: 76029 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2015-10-15.json:1342177280-1610612736"]},{"container":{"reused":true,"requestId":"4d68fe13-6bab-4189-8045-591873cd4ebb","uuid":"06256221-73f3-452f-8c13-31d1ac58178a","msRemaining":584661,"requestsServed":2,"startTimestamp":1667973146815349925,"deadlineTimestamp":1667973809260000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.279] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.312] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.334] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.334] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.334] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:4831838208-5100273664\n[2022-11-09 05:53:02.336] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:4831838208-5100273664\n[2022-11-09 05:53:02.337] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.408] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.412] [global] [info] retrieving pythonic sample took: 0.003625s\n[2022-11-09 05:53:02.489] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.558] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.558] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.558] [fileinputoperator] [info] Filling sample cache for json operator took 0.068556s (1 entries, 0 rows)\n[2022-11-09 05:53:02.591] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.745] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.922] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.922] [fileinputoperator] [info] Extracting row sample took 0.363563s\n[2022-11-09 05:53:02.969] [global] [info] retrieving pythonic sample took: 0.479854s\n[2022-11-09 05:53:02.980] [hyper specializer] [info] Deserialization of Code context took 0.642792s\n[2022-11-09 05:53:02.980] [hyper specializer] [info] Total Stage Decode took 0.643903s\n[2022-11-09 05:53:03.043] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:4831838208-5100273664 on 256.00 KB\n[2022-11-09 05:53:03.044] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.044] [fileinputoperator] [info] Filling sample cache for json operator took 0.034552s (1 entries, 0 rows)\n[2022-11-09 05:53:03.072] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:4831838208-5100273664 on 256.00 KB\n[2022-11-09 05:53:03.173] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:4831838208-5100273664 on 256.00 KB\n[2022-11-09 05:53:03.287] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.287] [fileinputoperator] [info] Extracting row sample took 0.242987s\n[2022-11-09 05:53:03.445] [hyper specializer] [info] sampling (setInputFiles) took 0.465904s\n[2022-11-09 05:53:03.446] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.446] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.446] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.446] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.446] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.446] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.446] [global] [warning] requested 2000 rows for sampling, but only 113 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.451] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.451] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.496] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.694] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.694] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.694] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.694] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.697] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.700] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.702] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.704] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.705] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.706] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.714] [hyper specializer] [info] generated code in 0.019348s\n[2022-11-09 05:53:03.754] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.754] [Lambda worker] [info] -- hyperspecialization took 1.420126s\n[2022-11-09 05:53:03.791] [global] [info] TransformStage - Optimization via LLVM passes took 0.036296 ms\n[2022-11-09 05:53:03.791] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.803] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.803] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.803] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.324] [Lambda worker] [info] fast path took: 4.520535s\n[2022-11-09 05:53:08.324] [Lambda worker] [info] Input rows processed: normal: 7401 unresolved: 57894\n[2022-11-09 05:53:08.324] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 57894\n[2022-11-09 05:53:08.324] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.324] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.324] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.552] [Lambda worker] [info] Compilation of slow path took 1.228366s\n[2022-11-09 05:53:13.550] [Lambda worker] [info] Resolved buffer, compiled: 2368 interpreted: 26486 unresolved: 0\n[2022-11-09 05:53:17.529] [Lambda worker] [info] Resolved buffer, compiled: 2430 interpreted: 26610 unresolved: 0\n[2022-11-09 05:53:17.535] [Lambda worker] [info] Exception resolution/slow path done. Took 9.210996s\n[2022-11-09 05:53:17.535] [Lambda worker] [info] Data processed in 13.7317s 34.47 KB (1434 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.535] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.535] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.535] [Lambda worker] [info] Writing output from 2 parts (34.47 KB, 1434 rows)\n[2022-11-09 05:53:17.535] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.535] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.535] [s3fs] [info] Writing buffer of size 17879\n[2022-11-09 05:53:17.535] [s3fs] [info] Writing buffer of size 17415\n[2022-11-09 05:53:17.535] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.535] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.597] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.598] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.598] [Lambda worker] [info] Took 13.794097s in total\n[2022-11-09 05:53:17.598] [Lambda worker] [info] Paths rows took: normal: 7401 general: 4798 interpreter: 53096 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:4831838208-5100273664"]},{"container":{"reused":true,"requestId":"f84f43de-d2a2-483a-99ae-593f6f4f2fbe","uuid":"a5d64f77-6bac-423c-be1f-7df0fbecf938","msRemaining":584816,"requestsServed":2,"startTimestamp":1667973146869420656,"deadlineTimestamp":1667973809419000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.438] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.471] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.496] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.496] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.496] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:8858370048-9126805504\n[2022-11-09 05:53:02.497] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:8858370048-9126805504\n[2022-11-09 05:53:02.498] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.569] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.574] [global] [info] retrieving pythonic sample took: 0.003504s\n[2022-11-09 05:53:02.641] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.642] [global] [info] retrieving pythonic sample took: 0.000263s\n[2022-11-09 05:53:02.653] [hyper specializer] [info] Deserialization of Code context took 0.154162s\n[2022-11-09 05:53:02.653] [hyper specializer] [info] Total Stage Decode took 0.155218s\n[2022-11-09 05:53:02.739] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:8858370048-9126805504 on 256.00 KB\n[2022-11-09 05:53:02.739] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.739] [fileinputoperator] [info] Filling sample cache for json operator took 0.086571s (1 entries, 0 rows)\n[2022-11-09 05:53:02.769] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:8858370048-9126805504 on 256.00 KB\n[2022-11-09 05:53:02.873] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:8858370048-9126805504 on 256.00 KB\n[2022-11-09 05:53:02.945] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.946] [fileinputoperator] [info] Extracting row sample took 0.206273s\n[2022-11-09 05:53:03.079] [hyper specializer] [info] sampling (setInputFiles) took 0.426129s\n[2022-11-09 05:53:03.079] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.079] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.079] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.079] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.079] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.079] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.079] [global] [warning] requested 2000 rows for sampling, but only 119 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.083] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.083] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.121] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.319] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.319] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.319] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.320] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.322] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.325] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.327] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.329] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.330] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.331] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.338] [hyper specializer] [info] generated code in 0.018935s\n[2022-11-09 05:53:03.372] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.372] [Lambda worker] [info] -- hyperspecialization took 0.875934s\n[2022-11-09 05:53:03.410] [global] [info] TransformStage - Optimization via LLVM passes took 0.037639 ms\n[2022-11-09 05:53:03.410] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.422] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.423] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.423] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.913] [Lambda worker] [info] fast path took: 5.490105s\n[2022-11-09 05:53:08.913] [Lambda worker] [info] Input rows processed: normal: 7121 unresolved: 52752\n[2022-11-09 05:53:08.913] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 52752\n[2022-11-09 05:53:08.913] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.913] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.913] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.156] [Lambda worker] [info] Compilation of slow path took 1.243176s\n[2022-11-09 05:53:13.832] [Lambda worker] [info] Resolved buffer, compiled: 2033 interpreted: 24257 unresolved: 0\n[2022-11-09 05:53:17.534] [Lambda worker] [info] Resolved buffer, compiled: 2179 interpreted: 24283 unresolved: 0\n[2022-11-09 05:53:17.541] [Lambda worker] [info] Exception resolution/slow path done. Took 8.627815s\n[2022-11-09 05:53:17.541] [Lambda worker] [info] Data processed in 14.1181s 27.72 KB (1151 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.541] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.541] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.541] [Lambda worker] [info] Writing output from 2 parts (27.72 KB, 1151 rows)\n[2022-11-09 05:53:17.541] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.541] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.541] [s3fs] [info] Writing buffer of size 13768\n[2022-11-09 05:53:17.541] [s3fs] [info] Writing buffer of size 14620\n[2022-11-09 05:53:17.541] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.541] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.602] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.602] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.602] [Lambda worker] [info] Took 14.179309s in total\n[2022-11-09 05:53:17.602] [Lambda worker] [info] Paths rows took: normal: 7121 general: 4212 interpreter: 48540 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:8858370048-9126805504"]},{"container":{"reused":true,"requestId":"ba5432eb-bf9f-4281-ab5b-765d2151d9ba","uuid":"2863aa3e-6556-4f55-82d7-924f3cbfca4b","msRemaining":584096,"requestsServed":2,"startTimestamp":1667973146870513601,"deadlineTimestamp":1667973808710000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.732] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.765] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.788] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.788] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.788] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:3489660928-3758096384\n[2022-11-09 05:53:01.789] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:3489660928-3758096384\n[2022-11-09 05:53:01.790] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.862] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.866] [global] [info] retrieving pythonic sample took: 0.003576s\n[2022-11-09 05:53:01.934] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.935] [global] [info] retrieving pythonic sample took: 0.000262s\n[2022-11-09 05:53:01.945] [hyper specializer] [info] Deserialization of Code context took 0.154867s\n[2022-11-09 05:53:01.945] [hyper specializer] [info] Total Stage Decode took 0.155907s\n[2022-11-09 05:53:02.041] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:3489660928-3758096384 on 256.00 KB\n[2022-11-09 05:53:02.041] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.041] [fileinputoperator] [info] Filling sample cache for json operator took 0.095742s (1 entries, 0 rows)\n[2022-11-09 05:53:02.107] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:3489660928-3758096384 on 256.00 KB\n[2022-11-09 05:53:02.191] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:3489660928-3758096384 on 256.00 KB\n[2022-11-09 05:53:02.325] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.325] [fileinputoperator] [info] Extracting row sample took 0.283907s\n[2022-11-09 05:53:02.474] [hyper specializer] [info] sampling (setInputFiles) took 0.528831s\n[2022-11-09 05:53:02.475] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.475] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.475] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.475] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.475] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.475] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.475] [global] [warning] requested 2000 rows for sampling, but only 155 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.480] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.480] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.522] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.684] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.684] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.684] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.684] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.687] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.690] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.693] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.695] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.696] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.697] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.705] [hyper specializer] [info] generated code in 0.020821s\n[2022-11-09 05:53:02.743] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.743] [Lambda worker] [info] -- hyperspecialization took 0.955567s\n[2022-11-09 05:53:02.781] [global] [info] TransformStage - Optimization via LLVM passes took 0.037466 ms\n[2022-11-09 05:53:02.781] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.794] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.794] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.794] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.403] [Lambda worker] [info] fast path took: 4.608982s\n[2022-11-09 05:53:07.403] [Lambda worker] [info] Input rows processed: normal: 9291 unresolved: 69095\n[2022-11-09 05:53:07.403] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 69095\n[2022-11-09 05:53:07.403] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.403] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.403] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.663] [Lambda worker] [info] Compilation of slow path took 1.260233s\n[2022-11-09 05:53:13.084] [Lambda worker] [info] Resolved buffer, compiled: 2869 interpreted: 31192 unresolved: 0\n[2022-11-09 05:53:17.520] [Lambda worker] [info] Resolved buffer, compiled: 2941 interpreted: 32093 unresolved: 0\n[2022-11-09 05:53:17.526] [Lambda worker] [info] Exception resolution/slow path done. Took 10.123435s\n[2022-11-09 05:53:17.526] [Lambda worker] [info] Data processed in 14.7326s 45.15 KB (1897 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.526] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.526] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.526] [Lambda worker] [info] Writing output from 2 parts (45.15 KB, 1897 rows)\n[2022-11-09 05:53:17.526] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.527] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.527] [s3fs] [info] Writing buffer of size 23965\n[2022-11-09 05:53:17.527] [s3fs] [info] Writing buffer of size 22273\n[2022-11-09 05:53:17.527] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.527] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.612] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.613] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.613] [Lambda worker] [info] Took 14.818676s in total\n[2022-11-09 05:53:17.613] [Lambda worker] [info] Paths rows took: normal: 9291 general: 5810 interpreter: 63285 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:3489660928-3758096384"]},{"container":{"reused":true,"requestId":"d9331795-e2fd-4520-a149-f811c3c27381","uuid":"a2687913-1691-4291-b324-d1b045d0689d","msRemaining":584849,"requestsServed":2,"startTimestamp":1667973146931580897,"deadlineTimestamp":1667973809480000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.499] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.532] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.555] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.555] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.555] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:10737418240-11005853696\n[2022-11-09 05:53:02.556] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:10737418240-11005853696\n[2022-11-09 05:53:02.557] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.626] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.630] [global] [info] retrieving pythonic sample took: 0.003462s\n[2022-11-09 05:53:02.697] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.698] [global] [info] retrieving pythonic sample took: 0.000266s\n[2022-11-09 05:53:02.708] [hyper specializer] [info] Deserialization of Code context took 0.150871s\n[2022-11-09 05:53:02.708] [hyper specializer] [info] Total Stage Decode took 0.151888s\n[2022-11-09 05:53:02.777] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:10737418240-11005853696 on 256.00 KB\n[2022-11-09 05:53:02.777] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.777] [fileinputoperator] [info] Filling sample cache for json operator took 0.069079s (1 entries, 0 rows)\n[2022-11-09 05:53:02.805] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:10737418240-11005853696 on 256.00 KB\n[2022-11-09 05:53:02.894] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:10737418240-11005853696 on 256.00 KB\n[2022-11-09 05:53:03.038] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.038] [fileinputoperator] [info] Extracting row sample took 0.260780s\n[2022-11-09 05:53:03.191] [hyper specializer] [info] sampling (setInputFiles) took 0.482823s\n[2022-11-09 05:53:03.192] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.192] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.192] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.192] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.192] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.192] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.192] [global] [warning] requested 2000 rows for sampling, but only 163 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.197] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.197] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.241] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.410] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.410] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.410] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.410] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.413] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.416] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.418] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.421] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.423] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.424] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.432] [hyper specializer] [info] generated code in 0.022012s\n[2022-11-09 05:53:03.471] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.471] [Lambda worker] [info] -- hyperspecialization took 0.916511s\n[2022-11-09 05:53:03.507] [global] [info] TransformStage - Optimization via LLVM passes took 0.035717 ms\n[2022-11-09 05:53:03.507] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.520] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.520] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.520] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.043] [Lambda worker] [info] fast path took: 5.523024s\n[2022-11-09 05:53:09.043] [Lambda worker] [info] Input rows processed: normal: 7180 unresolved: 53005\n[2022-11-09 05:53:09.043] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 53005\n[2022-11-09 05:53:09.043] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.043] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.043] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.258] [Lambda worker] [info] Compilation of slow path took 1.214914s\n[2022-11-09 05:53:13.923] [Lambda worker] [info] Resolved buffer, compiled: 2003 interpreted: 24591 unresolved: 0\n[2022-11-09 05:53:17.538] [Lambda worker] [info] Resolved buffer, compiled: 2283 interpreted: 24128 unresolved: 0\n[2022-11-09 05:53:17.544] [Lambda worker] [info] Exception resolution/slow path done. Took 8.500913s\n[2022-11-09 05:53:17.544] [Lambda worker] [info] Data processed in 14.0241s 26.88 KB (1115 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.544] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.544] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.544] [Lambda worker] [info] Writing output from 2 parts (26.88 KB, 1115 rows)\n[2022-11-09 05:53:17.544] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.544] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.544] [s3fs] [info] Writing buffer of size 13386\n[2022-11-09 05:53:17.544] [s3fs] [info] Writing buffer of size 14134\n[2022-11-09 05:53:17.544] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.544] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.630] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.630] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.630] [Lambda worker] [info] Took 14.110162s in total\n[2022-11-09 05:53:17.630] [Lambda worker] [info] Paths rows took: normal: 7180 general: 4286 interpreter: 48719 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:10737418240-11005853696"]},{"container":{"reused":true,"requestId":"f95768ef-3679-48c3-b096-206df3168fcd","uuid":"d8495234-a82e-4c4c-a6b1-950d82c8409c","msRemaining":584615,"requestsServed":2,"startTimestamp":1667973146250022100,"deadlineTimestamp":1667973809290000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.309] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.341] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.364] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.364] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.364] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:5637144576-5905580032\n[2022-11-09 05:53:02.366] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:5637144576-5905580032\n[2022-11-09 05:53:02.367] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.436] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.441] [global] [info] retrieving pythonic sample took: 0.003463s\n[2022-11-09 05:53:02.508] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.509] [global] [info] retrieving pythonic sample took: 0.000254s\n[2022-11-09 05:53:02.519] [hyper specializer] [info] Deserialization of Code context took 0.152125s\n[2022-11-09 05:53:02.519] [hyper specializer] [info] Total Stage Decode took 0.153167s\n[2022-11-09 05:53:02.590] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:5637144576-5905580032 on 256.00 KB\n[2022-11-09 05:53:02.590] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.590] [fileinputoperator] [info] Filling sample cache for json operator took 0.070881s (1 entries, 0 rows)\n[2022-11-09 05:53:02.621] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:5637144576-5905580032 on 256.00 KB\n[2022-11-09 05:53:02.732] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:5637144576-5905580032 on 256.00 KB\n[2022-11-09 05:53:02.849] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.849] [fileinputoperator] [info] Extracting row sample took 0.259327s\n[2022-11-09 05:53:02.989] [hyper specializer] [info] sampling (setInputFiles) took 0.470359s\n[2022-11-09 05:53:02.990] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.990] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.990] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.990] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.990] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.990] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.990] [global] [warning] requested 2000 rows for sampling, but only 116 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.994] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.995] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.035] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.217] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.217] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.217] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.217] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.220] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.223] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.225] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.227] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.228] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.229] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.236] [hyper specializer] [info] generated code in 0.018957s\n[2022-11-09 05:53:03.272] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.272] [Lambda worker] [info] -- hyperspecialization took 0.907777s\n[2022-11-09 05:53:03.308] [global] [info] TransformStage - Optimization via LLVM passes took 0.036146 ms\n[2022-11-09 05:53:03.308] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.321] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.321] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.321] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.625] [Lambda worker] [info] fast path took: 5.303617s\n[2022-11-09 05:53:08.625] [Lambda worker] [info] Input rows processed: normal: 7184 unresolved: 56876\n[2022-11-09 05:53:08.625] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 56876\n[2022-11-09 05:53:08.625] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.625] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.625] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.848] [Lambda worker] [info] Compilation of slow path took 1.223754s\n[2022-11-09 05:53:13.590] [Lambda worker] [info] Resolved buffer, compiled: 2309 interpreted: 25727 unresolved: 0\n[2022-11-09 05:53:17.588] [Lambda worker] [info] Resolved buffer, compiled: 2360 interpreted: 26480 unresolved: 0\n[2022-11-09 05:53:17.594] [Lambda worker] [info] Exception resolution/slow path done. Took 8.969220s\n[2022-11-09 05:53:17.594] [Lambda worker] [info] Data processed in 14.273s 34.14 KB (1419 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.594] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.594] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.594] [Lambda worker] [info] Writing output from 2 parts (34.14 KB, 1419 rows)\n[2022-11-09 05:53:17.594] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.594] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.594] [s3fs] [info] Writing buffer of size 18239\n[2022-11-09 05:53:17.594] [s3fs] [info] Writing buffer of size 16723\n[2022-11-09 05:53:17.594] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.594] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.674] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.674] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.674] [Lambda worker] [info] Took 14.353056s in total\n[2022-11-09 05:53:17.674] [Lambda worker] [info] Paths rows took: normal: 7184 general: 4669 interpreter: 52207 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:5637144576-5905580032"]},{"container":{"reused":true,"requestId":"c1c4b95d-c88e-412b-9e8d-a0effca74eef","uuid":"7cb14dde-7ac1-4090-a160-4e64eaf85665","msRemaining":584629,"requestsServed":2,"startTimestamp":1667973146776662651,"deadlineTimestamp":1667973809316000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.336] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.369] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.391] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.391] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.391] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:6174015488-6442450944\n[2022-11-09 05:53:02.393] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:6174015488-6442450944\n[2022-11-09 05:53:02.394] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.464] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.468] [global] [info] retrieving pythonic sample took: 0.003585s\n[2022-11-09 05:53:02.535] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.536] [global] [info] retrieving pythonic sample took: 0.000290s\n[2022-11-09 05:53:02.546] [hyper specializer] [info] Deserialization of Code context took 0.152035s\n[2022-11-09 05:53:02.546] [hyper specializer] [info] Total Stage Decode took 0.153066s\n[2022-11-09 05:53:02.652] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:6174015488-6442450944 on 256.00 KB\n[2022-11-09 05:53:02.652] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.652] [fileinputoperator] [info] Filling sample cache for json operator took 0.106727s (1 entries, 0 rows)\n[2022-11-09 05:53:02.690] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:6174015488-6442450944 on 256.00 KB\n[2022-11-09 05:53:02.838] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:6174015488-6442450944 on 256.00 KB\n[2022-11-09 05:53:02.979] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.979] [fileinputoperator] [info] Extracting row sample took 0.326588s\n[2022-11-09 05:53:03.120] [hyper specializer] [info] sampling (setInputFiles) took 0.574278s\n[2022-11-09 05:53:03.120] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.120] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.121] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.121] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.121] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.121] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.121] [global] [warning] requested 2000 rows for sampling, but only 97 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.124] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.124] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.163] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.164] [global] [warning] requested 100 rows for sampling, but only 97 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.349] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.349] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.349] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.349] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.352] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.355] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.357] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.359] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.360] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.361] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.368] [hyper specializer] [info] generated code in 0.019066s\n[2022-11-09 05:53:03.404] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.404] [Lambda worker] [info] -- hyperspecialization took 1.013062s\n[2022-11-09 05:53:03.441] [global] [info] TransformStage - Optimization via LLVM passes took 0.036439 ms\n[2022-11-09 05:53:03.441] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.453] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.453] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.453] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.624] [Lambda worker] [info] fast path took: 5.170159s\n[2022-11-09 05:53:08.624] [Lambda worker] [info] Input rows processed: normal: 7513 unresolved: 57528\n[2022-11-09 05:53:08.624] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 57528\n[2022-11-09 05:53:08.624] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.624] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.624] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.855] [Lambda worker] [info] Compilation of slow path took 1.230855s\n[2022-11-09 05:53:13.756] [Lambda worker] [info] Resolved buffer, compiled: 2635 interpreted: 26960 unresolved: 0\n[2022-11-09 05:53:17.588] [Lambda worker] [info] Resolved buffer, compiled: 2180 interpreted: 25753 unresolved: 0\n[2022-11-09 05:53:17.594] [Lambda worker] [info] Exception resolution/slow path done. Took 8.970048s\n[2022-11-09 05:53:17.594] [Lambda worker] [info] Data processed in 14.1404s 33.61 KB (1396 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.594] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.594] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.594] [Lambda worker] [info] Writing output from 2 parts (33.61 KB, 1396 rows)\n[2022-11-09 05:53:17.594] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.594] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.594] [s3fs] [info] Writing buffer of size 17162\n[2022-11-09 05:53:17.594] [s3fs] [info] Writing buffer of size 17258\n[2022-11-09 05:53:17.594] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.594] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.686] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.686] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.686] [Lambda worker] [info] Took 14.232668s in total\n[2022-11-09 05:53:17.686] [Lambda worker] [info] Paths rows took: normal: 7513 general: 4815 interpreter: 52713 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:6174015488-6442450944"]},{"container":{"reused":true,"requestId":"0cae937e-736a-4394-8383-921bd2c860b1","uuid":"266301ba-a420-4543-8bbb-27a83aab7794","msRemaining":584769,"requestsServed":2,"startTimestamp":1667973147372395430,"deadlineTimestamp":1667973809482000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.502] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.536] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.560] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.560] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.560] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:10468982784-10737418240\n[2022-11-09 05:53:02.562] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:10468982784-10737418240\n[2022-11-09 05:53:02.563] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.633] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.637] [global] [info] retrieving pythonic sample took: 0.003536s\n[2022-11-09 05:53:02.704] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.705] [global] [info] retrieving pythonic sample took: 0.000264s\n[2022-11-09 05:53:02.715] [hyper specializer] [info] Deserialization of Code context took 0.151320s\n[2022-11-09 05:53:02.715] [hyper specializer] [info] Total Stage Decode took 0.152382s\n[2022-11-09 05:53:02.815] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:10468982784-10737418240 on 256.00 KB\n[2022-11-09 05:53:02.815] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.815] [fileinputoperator] [info] Filling sample cache for json operator took 0.100357s (1 entries, 0 rows)\n[2022-11-09 05:53:02.847] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:10468982784-10737418240 on 256.00 KB\n[2022-11-09 05:53:02.931] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:10468982784-10737418240 on 256.00 KB\n[2022-11-09 05:53:03.078] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.078] [fileinputoperator] [info] Extracting row sample took 0.262760s\n[2022-11-09 05:53:03.218] [hyper specializer] [info] sampling (setInputFiles) took 0.503846s\n[2022-11-09 05:53:03.219] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.219] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.219] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.219] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.219] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.219] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.219] [global] [warning] requested 2000 rows for sampling, but only 130 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.223] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.223] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.263] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.432] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.433] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.433] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.433] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.436] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.440] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.441] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.443] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.445] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.446] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.453] [hyper specializer] [info] generated code in 0.020638s\n[2022-11-09 05:53:03.491] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.491] [Lambda worker] [info] -- hyperspecialization took 0.931111s\n[2022-11-09 05:53:03.544] [global] [info] TransformStage - Optimization via LLVM passes took 0.052894 ms\n[2022-11-09 05:53:03.544] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.557] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.557] [global] [info] Compiled code paths for stage 0 in 0.07 ms\n[2022-11-09 05:53:03.557] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.108] [Lambda worker] [info] fast path took: 5.551436s\n[2022-11-09 05:53:09.108] [Lambda worker] [info] Input rows processed: normal: 6979 unresolved: 52700\n[2022-11-09 05:53:09.108] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 52700\n[2022-11-09 05:53:09.108] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.108] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.108] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.317] [Lambda worker] [info] Compilation of slow path took 1.208201s\n[2022-11-09 05:53:13.873] [Lambda worker] [info] Resolved buffer, compiled: 1978 interpreted: 23780 unresolved: 0\n[2022-11-09 05:53:17.653] [Lambda worker] [info] Resolved buffer, compiled: 2017 interpreted: 24925 unresolved: 0\n[2022-11-09 05:53:17.659] [Lambda worker] [info] Exception resolution/slow path done. Took 8.550491s\n[2022-11-09 05:53:17.659] [Lambda worker] [info] Data processed in 14.1021s 24.47 KB (1019 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.659] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.659] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.659] [Lambda worker] [info] Writing output from 2 parts (24.47 KB, 1019 rows)\n[2022-11-09 05:53:17.659] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.659] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.659] [s3fs] [info] Writing buffer of size 12325\n[2022-11-09 05:53:17.659] [s3fs] [info] Writing buffer of size 12735\n[2022-11-09 05:53:17.659] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.659] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.712] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.712] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.712] [Lambda worker] [info] Took 14.155286s in total\n[2022-11-09 05:53:17.712] [Lambda worker] [info] Paths rows took: normal: 6979 general: 3995 interpreter: 48705 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:10468982784-10737418240"]},{"container":{"reused":true,"requestId":"94a88834-1bf2-4a05-b809-99940c13e866","uuid":"f38307fb-818a-4b05-aa02-a73ef652f12d","msRemaining":584519,"requestsServed":2,"startTimestamp":1667973147182277967,"deadlineTimestamp":1667973809255000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.274] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.309] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.332] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.332] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.332] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:5100273664-5368709120\n[2022-11-09 05:53:02.334] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:5100273664-5368709120\n[2022-11-09 05:53:02.335] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.404] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.409] [global] [info] retrieving pythonic sample took: 0.003532s\n[2022-11-09 05:53:02.476] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.477] [global] [info] retrieving pythonic sample took: 0.000259s\n[2022-11-09 05:53:02.487] [hyper specializer] [info] Deserialization of Code context took 0.151911s\n[2022-11-09 05:53:02.487] [hyper specializer] [info] Total Stage Decode took 0.152956s\n[2022-11-09 05:53:02.584] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:5100273664-5368709120 on 256.00 KB\n[2022-11-09 05:53:02.584] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.584] [fileinputoperator] [info] Filling sample cache for json operator took 0.097528s (1 entries, 0 rows)\n[2022-11-09 05:53:02.666] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:5100273664-5368709120 on 256.00 KB\n[2022-11-09 05:53:02.736] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:5100273664-5368709120 on 256.00 KB\n[2022-11-09 05:53:02.853] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.853] [fileinputoperator] [info] Extracting row sample took 0.268514s\n[2022-11-09 05:53:02.978] [hyper specializer] [info] sampling (setInputFiles) took 0.490967s\n[2022-11-09 05:53:02.978] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.978] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.978] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.978] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.978] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.978] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.978] [global] [warning] requested 2000 rows for sampling, but only 65 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.980] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.980] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.018] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.022] [global] [warning] requested 100 rows for sampling, but only 65 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.188] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.188] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.188] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.188] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.191] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.194] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.195] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.197] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.199] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.200] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.207] [hyper specializer] [info] generated code in 0.019086s\n[2022-11-09 05:53:03.240] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.240] [Lambda worker] [info] -- hyperspecialization took 0.907315s\n[2022-11-09 05:53:03.277] [global] [info] TransformStage - Optimization via LLVM passes took 0.036788 ms\n[2022-11-09 05:53:03.277] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.289] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.289] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.289] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.767] [Lambda worker] [info] fast path took: 5.477895s\n[2022-11-09 05:53:08.767] [Lambda worker] [info] Input rows processed: normal: 7590 unresolved: 55580\n[2022-11-09 05:53:08.767] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 55580\n[2022-11-09 05:53:08.767] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.767] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.767] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.016] [Lambda worker] [info] Compilation of slow path took 1.248631s\n[2022-11-09 05:53:13.820] [Lambda worker] [info] Resolved buffer, compiled: 2199 interpreted: 25341 unresolved: 0\n[2022-11-09 05:53:17.660] [Lambda worker] [info] Resolved buffer, compiled: 2214 interpreted: 25826 unresolved: 0\n[2022-11-09 05:53:17.666] [Lambda worker] [info] Exception resolution/slow path done. Took 8.899322s\n[2022-11-09 05:53:17.666] [Lambda worker] [info] Data processed in 14.3774s 32.28 KB (1342 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.666] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.666] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.666] [Lambda worker] [info] Writing output from 2 parts (32.28 KB, 1342 rows)\n[2022-11-09 05:53:17.666] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.666] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.666] [s3fs] [info] Writing buffer of size 15693\n[2022-11-09 05:53:17.666] [s3fs] [info] Writing buffer of size 17359\n[2022-11-09 05:53:17.666] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.666] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.735] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.735] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.735] [Lambda worker] [info] Took 14.445925s in total\n[2022-11-09 05:53:17.735] [Lambda worker] [info] Paths rows took: normal: 7590 general: 4413 interpreter: 51167 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:5100273664-5368709120"]},{"container":{"reused":true,"requestId":"0a3cef3e-d014-4499-b758-b743a11bbff2","uuid":"03238cf3-ad33-4512-b708-eb2a6d462305","msRemaining":584127,"requestsServed":2,"startTimestamp":1667973146744532417,"deadlineTimestamp":1667973808849000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.869] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.902] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.925] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.926] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.926] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:2147483648-2415919104\n[2022-11-09 05:53:01.927] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:2147483648-2415919104\n[2022-11-09 05:53:01.928] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.998] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.003] [global] [info] retrieving pythonic sample took: 0.003468s\n[2022-11-09 05:53:02.070] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.071] [global] [info] retrieving pythonic sample took: 0.000259s\n[2022-11-09 05:53:02.081] [hyper specializer] [info] Deserialization of Code context took 0.153220s\n[2022-11-09 05:53:02.081] [hyper specializer] [info] Total Stage Decode took 0.154277s\n[2022-11-09 05:53:02.174] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:02.175] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.175] [fileinputoperator] [info] Filling sample cache for json operator took 0.093417s (1 entries, 0 rows)\n[2022-11-09 05:53:02.211] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:02.322] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:02.458] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.458] [fileinputoperator] [info] Extracting row sample took 0.283131s\n[2022-11-09 05:53:02.615] [hyper specializer] [info] sampling (setInputFiles) took 0.533928s\n[2022-11-09 05:53:02.616] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.616] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.616] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.616] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.616] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.616] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.616] [global] [warning] requested 2000 rows for sampling, but only 147 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.621] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.621] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.665] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.836] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.836] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.836] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.837] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.840] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.843] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.845] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.846] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.848] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.849] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.857] [hyper specializer] [info] generated code in 0.020565s\n[2022-11-09 05:53:02.900] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.900] [Lambda worker] [info] -- hyperspecialization took 0.974163s\n[2022-11-09 05:53:02.936] [global] [info] TransformStage - Optimization via LLVM passes took 0.036642 ms\n[2022-11-09 05:53:02.937] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.949] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.950] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.950] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.001] [Lambda worker] [info] fast path took: 5.051289s\n[2022-11-09 05:53:08.001] [Lambda worker] [info] Input rows processed: normal: 8155 unresolved: 65652\n[2022-11-09 05:53:08.001] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 65652\n[2022-11-09 05:53:08.001] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.001] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.001] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.227] [Lambda worker] [info] Compilation of slow path took 1.226415s\n[2022-11-09 05:53:13.494] [Lambda worker] [info] Resolved buffer, compiled: 4024 interpreted: 30529 unresolved: 0\n[2022-11-09 05:53:17.608] [Lambda worker] [info] Resolved buffer, compiled: 3425 interpreted: 27674 unresolved: 0\n[2022-11-09 05:53:17.614] [Lambda worker] [info] Exception resolution/slow path done. Took 9.612880s\n[2022-11-09 05:53:17.614] [Lambda worker] [info] Data processed in 14.6643s 59.87 KB (2505 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.614] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.614] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.614] [Lambda worker] [info] Writing output from 2 parts (59.87 KB, 2505 rows)\n[2022-11-09 05:53:17.614] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.614] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.614] [s3fs] [info] Writing buffer of size 32450\n[2022-11-09 05:53:17.614] [s3fs] [info] Writing buffer of size 28857\n[2022-11-09 05:53:17.614] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.614] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.721] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.721] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.721] [Lambda worker] [info] Took 14.771295s in total\n[2022-11-09 05:53:17.721] [Lambda worker] [info] Paths rows took: normal: 8155 general: 7449 interpreter: 58203 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:2147483648-2415919104"]},{"container":{"reused":true,"requestId":"3ab59254-5532-49f5-a169-29f4b0b632f7","uuid":"3c85b1d8-8208-4d97-94e2-34426d77cde0","msRemaining":584425,"requestsServed":2,"startTimestamp":1667973146740806107,"deadlineTimestamp":1667973809170000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.195] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.229] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.252] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.254] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.254] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:2684354560-2952790016\n[2022-11-09 05:53:02.255] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:2684354560-2952790016\n[2022-11-09 05:53:02.256] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.334] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.340] [global] [info] retrieving pythonic sample took: 0.004683s\n[2022-11-09 05:53:02.408] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.473] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.473] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.473] [fileinputoperator] [info] Filling sample cache for json operator took 0.064394s (1 entries, 0 rows)\n[2022-11-09 05:53:02.502] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.655] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.832] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.832] [fileinputoperator] [info] Extracting row sample took 0.359546s\n[2022-11-09 05:53:02.880] [global] [info] retrieving pythonic sample took: 0.471498s\n[2022-11-09 05:53:02.890] [hyper specializer] [info] Deserialization of Code context took 0.633976s\n[2022-11-09 05:53:02.890] [hyper specializer] [info] Total Stage Decode took 0.635022s\n[2022-11-09 05:53:02.987] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:2684354560-2952790016 on 256.00 KB\n[2022-11-09 05:53:02.987] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.987] [fileinputoperator] [info] Filling sample cache for json operator took 0.067606s (1 entries, 0 rows)\n[2022-11-09 05:53:03.028] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:2684354560-2952790016 on 256.00 KB\n[2022-11-09 05:53:03.116] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:2684354560-2952790016 on 256.00 KB\n[2022-11-09 05:53:03.260] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.261] [fileinputoperator] [info] Extracting row sample took 0.273124s\n[2022-11-09 05:53:03.404] [hyper specializer] [info] sampling (setInputFiles) took 0.514179s\n[2022-11-09 05:53:03.405] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.405] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.405] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.405] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.405] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.405] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.405] [global] [warning] requested 2000 rows for sampling, but only 129 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.410] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.410] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.451] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.620] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.620] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.620] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.621] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.623] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.626] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.628] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.630] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.632] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.633] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.640] [hyper specializer] [info] generated code in 0.019417s\n[2022-11-09 05:53:03.678] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.678] [Lambda worker] [info] -- hyperspecialization took 1.423962s\n[2022-11-09 05:53:03.714] [global] [info] TransformStage - Optimization via LLVM passes took 0.035734 ms\n[2022-11-09 05:53:03.714] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.726] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.726] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.726] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.904] [Lambda worker] [info] fast path took: 5.177557s\n[2022-11-09 05:53:08.904] [Lambda worker] [info] Input rows processed: normal: 6771 unresolved: 55148\n[2022-11-09 05:53:08.904] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 55148\n[2022-11-09 05:53:08.904] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.904] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.904] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.126] [Lambda worker] [info] Compilation of slow path took 1.221719s\n[2022-11-09 05:53:13.850] [Lambda worker] [info] Resolved buffer, compiled: 2375 interpreted: 24479 unresolved: 0\n[2022-11-09 05:53:17.683] [Lambda worker] [info] Resolved buffer, compiled: 2726 interpreted: 25568 unresolved: 0\n[2022-11-09 05:53:17.689] [Lambda worker] [info] Exception resolution/slow path done. Took 8.785074s\n[2022-11-09 05:53:17.689] [Lambda worker] [info] Data processed in 13.9628s 40.57 KB (1686 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.689] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.689] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.689] [Lambda worker] [info] Writing output from 2 parts (40.57 KB, 1686 rows)\n[2022-11-09 05:53:17.689] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.689] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.689] [s3fs] [info] Writing buffer of size 18993\n[2022-11-09 05:53:17.689] [s3fs] [info] Writing buffer of size 22552\n[2022-11-09 05:53:17.689] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.689] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.744] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.744] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.744] [Lambda worker] [info] Took 14.017915s in total\n[2022-11-09 05:53:17.744] [Lambda worker] [info] Paths rows took: normal: 6771 general: 5101 interpreter: 50047 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:2684354560-2952790016"]},{"container":{"reused":true,"requestId":"6abd9cc0-42c9-486b-8bdc-c842d6dac4da","uuid":"907c6645-01bc-4256-bd98-a0358edb5e33","msRemaining":584623,"requestsServed":2,"startTimestamp":1667973147140010741,"deadlineTimestamp":1667973809405000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.426] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.460] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.484] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.484] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.484] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:8053063680-8321499136\n[2022-11-09 05:53:02.485] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:8053063680-8321499136\n[2022-11-09 05:53:02.486] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.556] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.561] [global] [info] retrieving pythonic sample took: 0.003541s\n[2022-11-09 05:53:02.628] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.629] [global] [info] retrieving pythonic sample took: 0.000263s\n[2022-11-09 05:53:02.639] [hyper specializer] [info] Deserialization of Code context took 0.152956s\n[2022-11-09 05:53:02.639] [hyper specializer] [info] Total Stage Decode took 0.154017s\n[2022-11-09 05:53:02.732] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:8053063680-8321499136 on 256.00 KB\n[2022-11-09 05:53:02.732] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.732] [fileinputoperator] [info] Filling sample cache for json operator took 0.093118s (1 entries, 0 rows)\n[2022-11-09 05:53:02.764] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:8053063680-8321499136 on 256.00 KB\n[2022-11-09 05:53:02.835] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:8053063680-8321499136 on 256.00 KB\n[2022-11-09 05:53:02.957] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.959] [fileinputoperator] [info] Extracting row sample took 0.227109s\n[2022-11-09 05:53:03.117] [hyper specializer] [info] sampling (setInputFiles) took 0.478240s\n[2022-11-09 05:53:03.118] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.118] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.118] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.118] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.118] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.118] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.118] [global] [warning] requested 2000 rows for sampling, but only 120 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.122] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.122] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.168] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.350] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.350] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.350] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.350] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.353] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.356] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.358] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.360] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.361] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.362] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.369] [hyper specializer] [info] generated code in 0.019191s\n[2022-11-09 05:53:03.410] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.410] [Lambda worker] [info] -- hyperspecialization took 0.926658s\n[2022-11-09 05:53:03.447] [global] [info] TransformStage - Optimization via LLVM passes took 0.036890 ms\n[2022-11-09 05:53:03.447] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.460] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.460] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.460] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.936] [Lambda worker] [info] fast path took: 5.476204s\n[2022-11-09 05:53:08.936] [Lambda worker] [info] Input rows processed: normal: 7241 unresolved: 53346\n[2022-11-09 05:53:08.936] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 53346\n[2022-11-09 05:53:08.936] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.936] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.936] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.194] [Lambda worker] [info] Compilation of slow path took 1.257423s\n[2022-11-09 05:53:13.991] [Lambda worker] [info] Resolved buffer, compiled: 2020 interpreted: 24933 unresolved: 0\n[2022-11-09 05:53:17.721] [Lambda worker] [info] Resolved buffer, compiled: 2089 interpreted: 24304 unresolved: 0\n[2022-11-09 05:53:17.727] [Lambda worker] [info] Exception resolution/slow path done. Took 8.790785s\n[2022-11-09 05:53:17.727] [Lambda worker] [info] Data processed in 14.2672s 31.66 KB (1315 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.727] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.727] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.727] [Lambda worker] [info] Writing output from 2 parts (31.66 KB, 1315 rows)\n[2022-11-09 05:53:17.727] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.727] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.727] [s3fs] [info] Writing buffer of size 16494\n[2022-11-09 05:53:17.727] [s3fs] [info] Writing buffer of size 15930\n[2022-11-09 05:53:17.727] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.727] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.781] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.781] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.781] [Lambda worker] [info] Took 14.321210s in total\n[2022-11-09 05:53:17.781] [Lambda worker] [info] Paths rows took: normal: 7241 general: 4109 interpreter: 49237 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:8053063680-8321499136"]},{"container":{"reused":true,"requestId":"3f0ae415-fcf0-4be9-a4ec-14f9d209ce14","uuid":"930606c4-fd5d-4352-8dc2-cf524e36d44f","msRemaining":584485,"requestsServed":2,"startTimestamp":1667973146481465154,"deadlineTimestamp":1667973809297000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.316] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.350] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.372] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.372] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.372] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:5905580032-6174015488\n[2022-11-09 05:53:02.374] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:5905580032-6174015488\n[2022-11-09 05:53:02.375] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.444] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.449] [global] [info] retrieving pythonic sample took: 0.003609s\n[2022-11-09 05:53:02.515] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.516] [global] [info] retrieving pythonic sample took: 0.000268s\n[2022-11-09 05:53:02.526] [hyper specializer] [info] Deserialization of Code context took 0.151506s\n[2022-11-09 05:53:02.526] [hyper specializer] [info] Total Stage Decode took 0.152547s\n[2022-11-09 05:53:02.631] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:5905580032-6174015488 on 256.00 KB\n[2022-11-09 05:53:02.631] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.631] [fileinputoperator] [info] Filling sample cache for json operator took 0.104530s (1 entries, 0 rows)\n[2022-11-09 05:53:02.664] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:5905580032-6174015488 on 256.00 KB\n[2022-11-09 05:53:02.798] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:5905580032-6174015488 on 256.00 KB\n[2022-11-09 05:53:02.917] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.917] [fileinputoperator] [info] Extracting row sample took 0.286488s\n[2022-11-09 05:53:03.065] [hyper specializer] [info] sampling (setInputFiles) took 0.538585s\n[2022-11-09 05:53:03.065] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.065] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.065] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.065] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.065] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.065] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.065] [global] [warning] requested 2000 rows for sampling, but only 151 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.070] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.070] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.112] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.265] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.265] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.265] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.265] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.268] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.270] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.272] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.274] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.275] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.276] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.283] [hyper specializer] [info] generated code in 0.018469s\n[2022-11-09 05:53:03.321] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.321] [Lambda worker] [info] -- hyperspecialization took 0.949176s\n[2022-11-09 05:53:03.357] [global] [info] TransformStage - Optimization via LLVM passes took 0.035871 ms\n[2022-11-09 05:53:03.357] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.370] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.370] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.370] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.767] [Lambda worker] [info] fast path took: 5.397337s\n[2022-11-09 05:53:08.767] [Lambda worker] [info] Input rows processed: normal: 7105 unresolved: 58667\n[2022-11-09 05:53:08.767] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 58667\n[2022-11-09 05:53:08.767] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.767] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.767] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.986] [Lambda worker] [info] Compilation of slow path took 1.218311s\n[2022-11-09 05:53:13.903] [Lambda worker] [info] Resolved buffer, compiled: 2613 interpreted: 26904 unresolved: 0\n[2022-11-09 05:53:17.743] [Lambda worker] [info] Resolved buffer, compiled: 2509 interpreted: 26641 unresolved: 0\n[2022-11-09 05:53:17.749] [Lambda worker] [info] Exception resolution/slow path done. Took 8.981889s\n[2022-11-09 05:53:17.749] [Lambda worker] [info] Data processed in 14.3794s 32.42 KB (1348 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.749] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.749] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.749] [Lambda worker] [info] Writing output from 2 parts (32.42 KB, 1348 rows)\n[2022-11-09 05:53:17.749] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.749] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.749] [s3fs] [info] Writing buffer of size 16805\n[2022-11-09 05:53:17.749] [s3fs] [info] Writing buffer of size 16391\n[2022-11-09 05:53:17.749] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.749] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.811] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.811] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.811] [Lambda worker] [info] Took 14.441137s in total\n[2022-11-09 05:53:17.811] [Lambda worker] [info] Paths rows took: normal: 7105 general: 5122 interpreter: 53545 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:5905580032-6174015488"]},{"container":{"reused":true,"requestId":"558e2a4b-6cb8-4650-b551-4d2995ee4606","uuid":"b630af07-248a-4059-bdef-822ccc9c2851","msRemaining":584174,"requestsServed":2,"startTimestamp":1667973146721191339,"deadlineTimestamp":1667973808999000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.019] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.052] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.075] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.075] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.075] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:6174015488-6442450944\n[2022-11-09 05:53:02.076] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:6174015488-6442450944\n[2022-11-09 05:53:02.077] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.152] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.157] [global] [info] retrieving pythonic sample took: 0.003805s\n[2022-11-09 05:53:02.225] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.226] [global] [info] retrieving pythonic sample took: 0.000256s\n[2022-11-09 05:53:02.236] [hyper specializer] [info] Deserialization of Code context took 0.158623s\n[2022-11-09 05:53:02.236] [hyper specializer] [info] Total Stage Decode took 0.159692s\n[2022-11-09 05:53:02.326] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:6174015488-6442450944 on 256.00 KB\n[2022-11-09 05:53:02.326] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.326] [fileinputoperator] [info] Filling sample cache for json operator took 0.090048s (1 entries, 0 rows)\n[2022-11-09 05:53:02.421] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:6174015488-6442450944 on 256.00 KB\n[2022-11-09 05:53:02.531] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:6174015488-6442450944 on 256.00 KB\n[2022-11-09 05:53:02.657] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.657] [fileinputoperator] [info] Extracting row sample took 0.331141s\n[2022-11-09 05:53:02.822] [hyper specializer] [info] sampling (setInputFiles) took 0.585693s\n[2022-11-09 05:53:02.822] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.822] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.822] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.822] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.822] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.822] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.822] [global] [warning] requested 2000 rows for sampling, but only 177 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.828] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.828] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.875] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.032] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.032] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.032] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.032] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.035] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.038] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.039] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.041] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.042] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.044] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.051] [hyper specializer] [info] generated code in 0.018952s\n[2022-11-09 05:53:03.093] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.093] [Lambda worker] [info] -- hyperspecialization took 1.018077s\n[2022-11-09 05:53:03.130] [global] [info] TransformStage - Optimization via LLVM passes took 0.036491 ms\n[2022-11-09 05:53:03.130] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.142] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.143] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.143] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.362] [Lambda worker] [info] fast path took: 5.219727s\n[2022-11-09 05:53:08.362] [Lambda worker] [info] Input rows processed: normal: 8495 unresolved: 62793\n[2022-11-09 05:53:08.362] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 62793\n[2022-11-09 05:53:08.362] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.362] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.362] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.611] [Lambda worker] [info] Compilation of slow path took 1.248330s\n[2022-11-09 05:53:13.678] [Lambda worker] [info] Resolved buffer, compiled: 2925 interpreted: 28608 unresolved: 0\n[2022-11-09 05:53:17.758] [Lambda worker] [info] Resolved buffer, compiled: 3415 interpreted: 27845 unresolved: 0\n[2022-11-09 05:53:17.764] [Lambda worker] [info] Exception resolution/slow path done. Took 9.401892s\n[2022-11-09 05:53:17.764] [Lambda worker] [info] Data processed in 14.6218s 41.46 KB (1729 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.764] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.764] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.764] [Lambda worker] [info] Writing output from 2 parts (41.46 KB, 1729 rows)\n[2022-11-09 05:53:17.764] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.764] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.764] [s3fs] [info] Writing buffer of size 22191\n[2022-11-09 05:53:17.764] [s3fs] [info] Writing buffer of size 20261\n[2022-11-09 05:53:17.764] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.764] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.824] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.824] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.824] [Lambda worker] [info] Took 14.681155s in total\n[2022-11-09 05:53:17.824] [Lambda worker] [info] Paths rows took: normal: 8495 general: 6340 interpreter: 56453 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:6174015488-6442450944"]},{"container":{"reused":true,"requestId":"53cfc08b-f094-4890-a170-39041d9ffc7f","uuid":"cc461c20-bcc1-423a-93c2-97523062c51b","msRemaining":584157,"requestsServed":2,"startTimestamp":1667973146901711377,"deadlineTimestamp":1667973809016000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.038] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.072] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.095] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.095] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.095] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:6710886400-6979321856\n[2022-11-09 05:53:02.097] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:6710886400-6979321856\n[2022-11-09 05:53:02.098] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.169] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.174] [global] [info] retrieving pythonic sample took: 0.003852s\n[2022-11-09 05:53:02.241] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.242] [global] [info] retrieving pythonic sample took: 0.000263s\n[2022-11-09 05:53:02.253] [hyper specializer] [info] Deserialization of Code context took 0.154673s\n[2022-11-09 05:53:02.253] [hyper specializer] [info] Total Stage Decode took 0.155733s\n[2022-11-09 05:53:02.369] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:6710886400-6979321856 on 256.00 KB\n[2022-11-09 05:53:02.370] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.370] [fileinputoperator] [info] Filling sample cache for json operator took 0.116981s (1 entries, 0 rows)\n[2022-11-09 05:53:02.399] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:6710886400-6979321856 on 256.00 KB\n[2022-11-09 05:53:02.538] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:6710886400-6979321856 on 256.00 KB\n[2022-11-09 05:53:02.678] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.678] [fileinputoperator] [info] Extracting row sample took 0.308268s\n[2022-11-09 05:53:02.841] [hyper specializer] [info] sampling (setInputFiles) took 0.588526s\n[2022-11-09 05:53:02.842] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.842] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.842] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.842] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.842] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.842] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.842] [global] [warning] requested 2000 rows for sampling, but only 154 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.847] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.847] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.893] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.062] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.062] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.062] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.062] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.065] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.068] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.070] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.071] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.073] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.074] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.081] [hyper specializer] [info] generated code in 0.019663s\n[2022-11-09 05:53:03.124] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.124] [Lambda worker] [info] -- hyperspecialization took 1.028614s\n[2022-11-09 05:53:03.161] [global] [info] TransformStage - Optimization via LLVM passes took 0.037035 ms\n[2022-11-09 05:53:03.161] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.174] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.174] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.174] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.629] [Lambda worker] [info] fast path took: 5.454688s\n[2022-11-09 05:53:08.629] [Lambda worker] [info] Input rows processed: normal: 8448 unresolved: 62431\n[2022-11-09 05:53:08.629] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 62431\n[2022-11-09 05:53:08.629] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.629] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.629] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.852] [Lambda worker] [info] Compilation of slow path took 1.222915s\n[2022-11-09 05:53:13.886] [Lambda worker] [info] Resolved buffer, compiled: 3048 interpreted: 29039 unresolved: 0\n[2022-11-09 05:53:17.797] [Lambda worker] [info] Resolved buffer, compiled: 2599 interpreted: 27745 unresolved: 0\n[2022-11-09 05:53:17.804] [Lambda worker] [info] Exception resolution/slow path done. Took 9.174610s\n[2022-11-09 05:53:17.804] [Lambda worker] [info] Data processed in 14.6295s 38.91 KB (1624 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.804] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.804] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.804] [Lambda worker] [info] Writing output from 2 parts (38.91 KB, 1624 rows)\n[2022-11-09 05:53:17.804] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.804] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.804] [s3fs] [info] Writing buffer of size 20949\n[2022-11-09 05:53:17.804] [s3fs] [info] Writing buffer of size 18893\n[2022-11-09 05:53:17.804] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.804] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.858] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.858] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.858] [Lambda worker] [info] Took 14.684033s in total\n[2022-11-09 05:53:17.858] [Lambda worker] [info] Paths rows took: normal: 8448 general: 5647 interpreter: 56784 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:6710886400-6979321856"]},{"container":{"reused":true,"requestId":"229fd54c-0542-4d65-8e48-fb4482ff76eb","uuid":"539522a8-d736-4caf-a830-35a3caecbce8","msRemaining":583345,"requestsServed":2,"startTimestamp":1667973146065597952,"deadlineTimestamp":1667973808214000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.233] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.266] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.288] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.288] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.288] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2013-10-15.json:268435456-533607666\n[2022-11-09 05:53:01.290] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2013-10-15.json:268435456-533607666\n[2022-11-09 05:53:01.291] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.361] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.365] [global] [info] retrieving pythonic sample took: 0.003573s\n[2022-11-09 05:53:01.432] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.495] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.495] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.495] [fileinputoperator] [info] Filling sample cache for json operator took 0.062059s (1 entries, 0 rows)\n[2022-11-09 05:53:01.520] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.669] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.846] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.846] [fileinputoperator] [info] Extracting row sample took 0.351068s\n[2022-11-09 05:53:01.893] [global] [info] retrieving pythonic sample took: 0.460163s\n[2022-11-09 05:53:01.903] [hyper specializer] [info] Deserialization of Code context took 0.612386s\n[2022-11-09 05:53:01.903] [hyper specializer] [info] Total Stage Decode took 0.613416s\n[2022-11-09 05:53:01.972] [global] [info] sampled s3://tuplex-public/data/github_daily/2013-10-15.json:268435456-533607666 on 256.00 KB\n[2022-11-09 05:53:01.972] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.972] [fileinputoperator] [info] Filling sample cache for json operator took 0.039441s (1 entries, 0 rows)\n[2022-11-09 05:53:01.993] [global] [info] sampled s3://tuplex-public/data/github_daily/2013-10-15.json:268435456-533607666 on 256.00 KB\n[2022-11-09 05:53:02.153] [global] [info] sampled s3://tuplex-public/data/github_daily/2013-10-15.json:268435456-533607666 on 256.00 KB\n[2022-11-09 05:53:02.448] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.448] [fileinputoperator] [info] Extracting row sample took 0.475405s\n[2022-11-09 05:53:02.789] [hyper specializer] [info] sampling (setInputFiles) took 0.885640s\n[2022-11-09 05:53:02.789] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.789] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.789] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.789] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.789] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.789] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.789] [global] [warning] requested 2000 rows for sampling, but only 297 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.800] [specializing stage optimizer] [info] Row type before retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)])\n[2022-11-09 05:53:02.800] [specializing stage optimizer] [info] Row type after retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)])\n[2022-11-09 05:53:02.894] [codegen] [warning] could not find column 'repo' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.028] [hyper specializer] [info] specialized to input:  (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)])\n[2022-11-09 05:53:03.028] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.028] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.028] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.031] [codegen] [info] generating pipeline for (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.034] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)])) -> i64\n[2022-11-09 05:53:03.036] [codegen] [info] generating function extract_repo_id_code for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)],i64)) -> i64\n[2022-11-09 05:53:03.038] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)],i64,i64)) -> boolean\n[2022-11-09 05:53:03.040] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.041] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.049] [hyper specializer] [info] generated code in 0.021055s\n[2022-11-09 05:53:03.130] [Lambda worker] [info] specialized normal-case type (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.130] [Lambda worker] [info] -- hyperspecialization took 1.842128s\n[2022-11-09 05:53:03.161] [global] [info] TransformStage - Optimization via LLVM passes took 0.030788 ms\n[2022-11-09 05:53:03.161] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.174] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.174] [global] [info] Compiled code paths for stage 0 in 0.04 ms\n[2022-11-09 05:53:03.174] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:06.794] [Lambda worker] [info] fast path took: 3.619956s\n[2022-11-09 05:53:06.794] [Lambda worker] [info] Input rows processed: normal: 62388 unresolved: 85182\n[2022-11-09 05:53:06.794] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 85182\n[2022-11-09 05:53:06.794] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:06.794] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:06.794] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.036] [Lambda worker] [info] Compilation of slow path took 1.242369s\n[2022-11-09 05:53:08.100] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:12.764] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 38719 unresolved: 2137\n[2022-11-09 05:53:12.830] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:17.756] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 41671 unresolved: 2655\n[2022-11-09 05:53:17.760] [Lambda worker] [info] Exception resolution/slow path done. Took 10.966313s\n[2022-11-09 05:53:17.760] [Lambda worker] [info] Data processed in 14.5864s 1.20 MB (5184 normal rows) 2.13 MB (4792 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.760] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part2.csv.csv\n[2022-11-09 05:53:17.760] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.760] [Lambda worker] [info] Writing output from 2 parts (1.20 MB, 5184 rows)\n[2022-11-09 05:53:17.760] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part2.csv.csv\n[2022-11-09 05:53:17.760] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.760] [s3fs] [info] Writing buffer of size 553198\n[2022-11-09 05:53:17.761] [s3fs] [info] Writing buffer of size 702084\n[2022-11-09 05:53:17.761] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part2.csv.csv\n[2022-11-09 05:53:17.761] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.868] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.868] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.868] [Lambda worker] [info] Took 14.694200s in total\n[2022-11-09 05:53:17.868] [Lambda worker] [info] Paths rows took: normal: 62388 general: 0 interpreter: 80390 unresolved: 4792\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2013-10-15.json:268435456-533607666"]},{"container":{"reused":true,"requestId":"7e83838c-ff0a-4a28-a0fb-a3cbd449340e","uuid":"ca0d2d9e-597c-45be-9e58-e26bee8016ad","msRemaining":584052,"requestsServed":2,"startTimestamp":1667973147154488069,"deadlineTimestamp":1667973808929000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.949] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.982] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.004] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.004] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.004] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:4294967296-4563402752\n[2022-11-09 05:53:02.006] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:4294967296-4563402752\n[2022-11-09 05:53:02.007] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.078] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.082] [global] [info] retrieving pythonic sample took: 0.003715s\n[2022-11-09 05:53:02.150] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.222] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.222] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.222] [fileinputoperator] [info] Filling sample cache for json operator took 0.071002s (1 entries, 0 rows)\n[2022-11-09 05:53:02.249] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.418] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.600] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.600] [fileinputoperator] [info] Extracting row sample took 0.377891s\n[2022-11-09 05:53:02.647] [global] [info] retrieving pythonic sample took: 0.496771s\n[2022-11-09 05:53:02.657] [hyper specializer] [info] Deserialization of Code context took 0.650607s\n[2022-11-09 05:53:02.657] [hyper specializer] [info] Total Stage Decode took 0.651665s\n[2022-11-09 05:53:02.721] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:4294967296-4563402752 on 256.00 KB\n[2022-11-09 05:53:02.723] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.723] [fileinputoperator] [info] Filling sample cache for json operator took 0.036260s (1 entries, 0 rows)\n[2022-11-09 05:53:02.754] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:4294967296-4563402752 on 256.00 KB\n[2022-11-09 05:53:02.859] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:4294967296-4563402752 on 256.00 KB\n[2022-11-09 05:53:03.009] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.009] [fileinputoperator] [info] Extracting row sample took 0.285793s\n[2022-11-09 05:53:03.190] [hyper specializer] [info] sampling (setInputFiles) took 0.532084s\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [warning] requested 2000 rows for sampling, but only 156 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.201] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.201] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.253] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.445] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.446] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.446] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.446] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.450] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.453] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.455] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.456] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.458] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.459] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.466] [hyper specializer] [info] generated code in 0.020135s\n[2022-11-09 05:53:03.511] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.511] [Lambda worker] [info] -- hyperspecialization took 1.506970s\n[2022-11-09 05:53:03.548] [global] [info] TransformStage - Optimization via LLVM passes took 0.036253 ms\n[2022-11-09 05:53:03.548] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.561] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.561] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.561] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.527] [Lambda worker] [info] fast path took: 4.966264s\n[2022-11-09 05:53:08.527] [Lambda worker] [info] Input rows processed: normal: 8797 unresolved: 62737\n[2022-11-09 05:53:08.527] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 62737\n[2022-11-09 05:53:08.527] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.527] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.527] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.756] [Lambda worker] [info] Compilation of slow path took 1.229088s\n[2022-11-09 05:53:13.857] [Lambda worker] [info] Resolved buffer, compiled: 3575 interpreted: 28306 unresolved: 0\n[2022-11-09 05:53:17.814] [Lambda worker] [info] Resolved buffer, compiled: 3658 interpreted: 27198 unresolved: 0\n[2022-11-09 05:53:17.820] [Lambda worker] [info] Exception resolution/slow path done. Took 9.293004s\n[2022-11-09 05:53:17.820] [Lambda worker] [info] Data processed in 14.2594s 45.24 KB (1889 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.820] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.820] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.820] [Lambda worker] [info] Writing output from 2 parts (45.24 KB, 1889 rows)\n[2022-11-09 05:53:17.820] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.820] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.820] [s3fs] [info] Writing buffer of size 22718\n[2022-11-09 05:53:17.820] [s3fs] [info] Writing buffer of size 23610\n[2022-11-09 05:53:17.820] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.820] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.876] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.876] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.876] [Lambda worker] [info] Took 14.315013s in total\n[2022-11-09 05:53:17.876] [Lambda worker] [info] Paths rows took: normal: 8797 general: 7233 interpreter: 55504 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:4294967296-4563402752"]},{"container":{"reused":true,"requestId":"85e6015a-b055-4c03-a900-d5a160b951d6","uuid":"c57f3749-d026-48fc-b62e-6668d6e7633f","msRemaining":583855,"requestsServed":2,"startTimestamp":1667973146906236331,"deadlineTimestamp":1667973808746000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.788] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.811] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.811] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.811] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:4294967296-4563402752\n[2022-11-09 05:53:01.812] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:4294967296-4563402752\n[2022-11-09 05:53:01.813] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.884] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.889] [global] [info] retrieving pythonic sample took: 0.003570s\n[2022-11-09 05:53:01.955] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.956] [global] [info] retrieving pythonic sample took: 0.000258s\n[2022-11-09 05:53:01.965] [hyper specializer] [info] Deserialization of Code context took 0.151771s\n[2022-11-09 05:53:01.965] [hyper specializer] [info] Total Stage Decode took 0.152801s\n[2022-11-09 05:53:02.042] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:4294967296-4563402752 on 256.00 KB\n[2022-11-09 05:53:02.042] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.042] [fileinputoperator] [info] Filling sample cache for json operator took 0.076648s (1 entries, 0 rows)\n[2022-11-09 05:53:02.074] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:4294967296-4563402752 on 256.00 KB\n[2022-11-09 05:53:02.206] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:4294967296-4563402752 on 256.00 KB\n[2022-11-09 05:53:02.326] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.326] [fileinputoperator] [info] Extracting row sample took 0.284125s\n[2022-11-09 05:53:02.479] [hyper specializer] [info] sampling (setInputFiles) took 0.514234s\n[2022-11-09 05:53:02.480] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.480] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.480] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.480] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.480] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.480] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.480] [global] [warning] requested 2000 rows for sampling, but only 158 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.485] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.485] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.529] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.688] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.688] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.688] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.688] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.691] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.694] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.696] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.697] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.699] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.700] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.707] [hyper specializer] [info] generated code in 0.019597s\n[2022-11-09 05:53:02.747] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.747] [Lambda worker] [info] -- hyperspecialization took 0.936326s\n[2022-11-09 05:53:02.785] [global] [info] TransformStage - Optimization via LLVM passes took 0.037215 ms\n[2022-11-09 05:53:02.785] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.798] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.798] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.798] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.060] [Lambda worker] [info] fast path took: 5.261706s\n[2022-11-09 05:53:08.060] [Lambda worker] [info] Input rows processed: normal: 9617 unresolved: 68171\n[2022-11-09 05:53:08.060] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 68171\n[2022-11-09 05:53:08.060] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.060] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.060] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.295] [Lambda worker] [info] Compilation of slow path took 1.235067s\n[2022-11-09 05:53:13.589] [Lambda worker] [info] Resolved buffer, compiled: 2732 interpreted: 31631 unresolved: 0\n[2022-11-09 05:53:17.808] [Lambda worker] [info] Resolved buffer, compiled: 2882 interpreted: 30926 unresolved: 0\n[2022-11-09 05:53:17.814] [Lambda worker] [info] Exception resolution/slow path done. Took 9.754457s\n[2022-11-09 05:53:17.815] [Lambda worker] [info] Data processed in 15.0164s 42.75 KB (1790 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.815] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.815] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.815] [Lambda worker] [info] Writing output from 2 parts (42.75 KB, 1790 rows)\n[2022-11-09 05:53:17.815] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.815] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.815] [s3fs] [info] Writing buffer of size 22567\n[2022-11-09 05:53:17.815] [s3fs] [info] Writing buffer of size 21212\n[2022-11-09 05:53:17.815] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.815] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.890] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.890] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.890] [Lambda worker] [info] Took 15.091850s in total\n[2022-11-09 05:53:17.890] [Lambda worker] [info] Paths rows took: normal: 9617 general: 5614 interpreter: 62557 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:4294967296-4563402752"]},{"container":{"reused":true,"requestId":"f9a13b66-099c-44dd-9ab3-97e869bc2e94","uuid":"1a163ad3-9b5a-43ce-a226-b66cec35120d","msRemaining":584476,"requestsServed":2,"startTimestamp":1667973146792276691,"deadlineTimestamp":1667973809378000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.397] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.430] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.452] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.453] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.453] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:7784628224-8053063680\n[2022-11-09 05:53:02.454] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:7784628224-8053063680\n[2022-11-09 05:53:02.455] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.524] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.529] [global] [info] retrieving pythonic sample took: 0.003406s\n[2022-11-09 05:53:02.595] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.596] [global] [info] retrieving pythonic sample took: 0.000258s\n[2022-11-09 05:53:02.606] [hyper specializer] [info] Deserialization of Code context took 0.150775s\n[2022-11-09 05:53:02.606] [hyper specializer] [info] Total Stage Decode took 0.151795s\n[2022-11-09 05:53:02.718] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:7784628224-8053063680 on 256.00 KB\n[2022-11-09 05:53:02.718] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.718] [fileinputoperator] [info] Filling sample cache for json operator took 0.112588s (1 entries, 0 rows)\n[2022-11-09 05:53:02.763] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:7784628224-8053063680 on 256.00 KB\n[2022-11-09 05:53:02.882] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:7784628224-8053063680 on 256.00 KB\n[2022-11-09 05:53:03.037] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.037] [fileinputoperator] [info] Extracting row sample took 0.318560s\n[2022-11-09 05:53:03.189] [hyper specializer] [info] sampling (setInputFiles) took 0.583685s\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.190] [global] [warning] requested 2000 rows for sampling, but only 134 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.195] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.195] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.238] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.415] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.415] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.415] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.415] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.418] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.421] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.422] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.424] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.426] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.427] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.434] [hyper specializer] [info] generated code in 0.018969s\n[2022-11-09 05:53:03.474] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.474] [Lambda worker] [info] -- hyperspecialization took 1.021065s\n[2022-11-09 05:53:03.510] [global] [info] TransformStage - Optimization via LLVM passes took 0.036272 ms\n[2022-11-09 05:53:03.510] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.523] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.523] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.523] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.055] [Lambda worker] [info] fast path took: 5.532277s\n[2022-11-09 05:53:09.055] [Lambda worker] [info] Input rows processed: normal: 7181 unresolved: 54020\n[2022-11-09 05:53:09.055] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 54020\n[2022-11-09 05:53:09.055] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.055] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.055] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.255] [Lambda worker] [info] Compilation of slow path took 1.199754s\n[2022-11-09 05:53:14.055] [Lambda worker] [info] Resolved buffer, compiled: 2025 interpreted: 25512 unresolved: 0\n[2022-11-09 05:53:17.743] [Lambda worker] [info] Resolved buffer, compiled: 1971 interpreted: 24512 unresolved: 0\n[2022-11-09 05:53:17.749] [Lambda worker] [info] Exception resolution/slow path done. Took 8.694214s\n[2022-11-09 05:53:17.749] [Lambda worker] [info] Data processed in 14.2267s 29.25 KB (1217 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.749] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.749] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.749] [Lambda worker] [info] Writing output from 2 parts (29.25 KB, 1217 rows)\n[2022-11-09 05:53:17.749] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.749] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.749] [s3fs] [info] Writing buffer of size 14643\n[2022-11-09 05:53:17.749] [s3fs] [info] Writing buffer of size 15314\n[2022-11-09 05:53:17.749] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.749] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.901] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.901] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.901] [Lambda worker] [info] Took 14.378342s in total\n[2022-11-09 05:53:17.901] [Lambda worker] [info] Paths rows took: normal: 7181 general: 3996 interpreter: 50024 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:7784628224-8053063680"]},{"container":{"reused":true,"requestId":"62266292-5043-4103-8371-44095d5e2b5e","uuid":"993f9287-49f3-4867-9859-7c2b2268786f","msRemaining":583766,"requestsServed":2,"startTimestamp":1667973146993295358,"deadlineTimestamp":1667973808682000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.701] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.735] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.758] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.758] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.758] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:2952790016-3221225472\n[2022-11-09 05:53:01.760] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:2952790016-3221225472\n[2022-11-09 05:53:01.761] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.849] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.853] [global] [info] retrieving pythonic sample took: 0.003704s\n[2022-11-09 05:53:01.920] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.922] [global] [info] retrieving pythonic sample took: 0.000262s\n[2022-11-09 05:53:01.931] [hyper specializer] [info] Deserialization of Code context took 0.170256s\n[2022-11-09 05:53:01.931] [hyper specializer] [info] Total Stage Decode took 0.171704s\n[2022-11-09 05:53:02.008] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:2952790016-3221225472 on 256.00 KB\n[2022-11-09 05:53:02.008] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.008] [fileinputoperator] [info] Filling sample cache for json operator took 0.076645s (1 entries, 0 rows)\n[2022-11-09 05:53:02.042] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:2952790016-3221225472 on 256.00 KB\n[2022-11-09 05:53:02.163] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:2952790016-3221225472 on 256.00 KB\n[2022-11-09 05:53:02.281] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.281] [fileinputoperator] [info] Extracting row sample took 0.272382s\n[2022-11-09 05:53:02.439] [hyper specializer] [info] sampling (setInputFiles) took 0.507240s\n[2022-11-09 05:53:02.439] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.439] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.439] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.439] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.439] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.439] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.439] [global] [warning] requested 2000 rows for sampling, but only 128 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.444] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.444] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.488] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.669] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.669] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.669] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.669] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.672] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.675] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.677] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.678] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.680] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.681] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.688] [hyper specializer] [info] generated code in 0.019629s\n[2022-11-09 05:53:02.728] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.728] [Lambda worker] [info] -- hyperspecialization took 0.970371s\n[2022-11-09 05:53:02.765] [global] [info] TransformStage - Optimization via LLVM passes took 0.036512 ms\n[2022-11-09 05:53:02.765] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.778] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.778] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.778] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.208] [Lambda worker] [info] fast path took: 5.430627s\n[2022-11-09 05:53:08.208] [Lambda worker] [info] Input rows processed: normal: 9853 unresolved: 67671\n[2022-11-09 05:53:08.208] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 67671\n[2022-11-09 05:53:08.208] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.208] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.208] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.425] [Lambda worker] [info] Compilation of slow path took 1.216966s\n[2022-11-09 05:53:13.679] [Lambda worker] [info] Resolved buffer, compiled: 3077 interpreted: 31357 unresolved: 0\n[2022-11-09 05:53:17.851] [Lambda worker] [info] Resolved buffer, compiled: 2874 interpreted: 30363 unresolved: 0\n[2022-11-09 05:53:17.857] [Lambda worker] [info] Exception resolution/slow path done. Took 9.648582s\n[2022-11-09 05:53:17.857] [Lambda worker] [info] Data processed in 15.0794s 50.51 KB (2119 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.857] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.857] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.857] [Lambda worker] [info] Writing output from 2 parts (50.51 KB, 2119 rows)\n[2022-11-09 05:53:17.857] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.857] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.857] [s3fs] [info] Writing buffer of size 26233\n[2022-11-09 05:53:17.857] [s3fs] [info] Writing buffer of size 25485\n[2022-11-09 05:53:17.857] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.857] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.915] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.915] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.915] [Lambda worker] [info] Took 15.137526s in total\n[2022-11-09 05:53:17.915] [Lambda worker] [info] Paths rows took: normal: 9853 general: 5951 interpreter: 61720 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:2952790016-3221225472"]},{"container":{"reused":true,"requestId":"ef2f56d0-b891-482d-b026-ec26eada4ba9","uuid":"b77e5ba9-a73e-4f81-b912-4860c854a175","msRemaining":583463,"requestsServed":2,"startTimestamp":1667973146828073799,"deadlineTimestamp":1667973808387000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.407] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.440] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.463] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.463] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.463] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2015-10-15.json:1610612736-1879048192\n[2022-11-09 05:53:01.464] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2015-10-15.json:1610612736-1879048192\n[2022-11-09 05:53:01.466] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.537] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.541] [global] [info] retrieving pythonic sample took: 0.003674s\n[2022-11-09 05:53:01.609] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.610] [global] [info] retrieving pythonic sample took: 0.000256s\n[2022-11-09 05:53:01.620] [hyper specializer] [info] Deserialization of Code context took 0.154491s\n[2022-11-09 05:53:01.620] [hyper specializer] [info] Total Stage Decode took 0.155576s\n[2022-11-09 05:53:01.700] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:01.700] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.700] [fileinputoperator] [info] Filling sample cache for json operator took 0.079836s (1 entries, 0 rows)\n[2022-11-09 05:53:01.733] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:01.882] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:02.034] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.034] [fileinputoperator] [info] Extracting row sample took 0.334467s\n[2022-11-09 05:53:02.220] [hyper specializer] [info] sampling (setInputFiles) took 0.599550s\n[2022-11-09 05:53:02.220] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.220] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.220] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.220] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.220] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.220] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.220] [global] [warning] requested 2000 rows for sampling, but only 174 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.226] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.226] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.278] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.466] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.466] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.466] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.466] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.469] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.472] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.473] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.475] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.477] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.478] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.485] [hyper specializer] [info] generated code in 0.019404s\n[2022-11-09 05:53:02.533] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.533] [Lambda worker] [info] -- hyperspecialization took 1.070162s\n[2022-11-09 05:53:02.569] [global] [info] TransformStage - Optimization via LLVM passes took 0.035980 ms\n[2022-11-09 05:53:02.569] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.582] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.582] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.582] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.650] [Lambda worker] [info] fast path took: 5.067705s\n[2022-11-09 05:53:07.650] [Lambda worker] [info] Input rows processed: normal: 11929 unresolved: 77026\n[2022-11-09 05:53:07.650] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 77026\n[2022-11-09 05:53:07.650] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.650] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.650] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.899] [Lambda worker] [info] Compilation of slow path took 1.248833s\n[2022-11-09 05:53:13.404] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 38684 unresolved: 0\n[2022-11-09 05:53:17.855] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 38342 unresolved: 0\n[2022-11-09 05:53:17.861] [Lambda worker] [info] Exception resolution/slow path done. Took 10.211454s\n[2022-11-09 05:53:17.861] [Lambda worker] [info] Data processed in 15.2793s 57.67 KB (2494 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.861] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:17.861] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.861] [Lambda worker] [info] Writing output from 2 parts (57.67 KB, 2494 rows)\n[2022-11-09 05:53:17.861] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:17.861] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.861] [s3fs] [info] Writing buffer of size 29376\n[2022-11-09 05:53:17.861] [s3fs] [info] Writing buffer of size 29679\n[2022-11-09 05:53:17.861] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:17.861] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.923] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.923] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.923] [Lambda worker] [info] Took 15.341365s in total\n[2022-11-09 05:53:17.923] [Lambda worker] [info] Paths rows took: normal: 11929 general: 0 interpreter: 77026 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2015-10-15.json:1610612736-1879048192"]},{"container":{"reused":true,"requestId":"744255d1-605f-4d47-8829-e78410c9bc32","uuid":"d39a773d-b7ad-4901-8824-b02a26b99494","msRemaining":583749,"requestsServed":2,"startTimestamp":1667973146247810563,"deadlineTimestamp":1667973808682000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.701] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.734] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.757] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.757] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.757] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:2684354560-2952790016\n[2022-11-09 05:53:01.758] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:2684354560-2952790016\n[2022-11-09 05:53:01.759] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.829] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.833] [global] [info] retrieving pythonic sample took: 0.003646s\n[2022-11-09 05:53:01.900] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.902] [global] [info] retrieving pythonic sample took: 0.000249s\n[2022-11-09 05:53:01.911] [hyper specializer] [info] Deserialization of Code context took 0.152360s\n[2022-11-09 05:53:01.911] [hyper specializer] [info] Total Stage Decode took 0.153390s\n[2022-11-09 05:53:02.009] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:2684354560-2952790016 on 256.00 KB\n[2022-11-09 05:53:02.009] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.009] [fileinputoperator] [info] Filling sample cache for json operator took 0.097442s (1 entries, 0 rows)\n[2022-11-09 05:53:02.036] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:2684354560-2952790016 on 256.00 KB\n[2022-11-09 05:53:02.115] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:2684354560-2952790016 on 256.00 KB\n[2022-11-09 05:53:02.216] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.216] [fileinputoperator] [info] Extracting row sample took 0.207139s\n[2022-11-09 05:53:02.372] [hyper specializer] [info] sampling (setInputFiles) took 0.460665s\n[2022-11-09 05:53:02.373] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.373] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.373] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.373] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.373] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.373] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.373] [global] [warning] requested 2000 rows for sampling, but only 118 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.377] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.377] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.421] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.608] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.608] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.608] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.608] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.611] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.614] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.616] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.618] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.619] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.620] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.627] [hyper specializer] [info] generated code in 0.018766s\n[2022-11-09 05:53:02.667] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.667] [Lambda worker] [info] -- hyperspecialization took 0.910591s\n[2022-11-09 05:53:02.703] [global] [info] TransformStage - Optimization via LLVM passes took 0.036092 ms\n[2022-11-09 05:53:02.703] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.716] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.716] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.716] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.869] [Lambda worker] [info] fast path took: 5.152792s\n[2022-11-09 05:53:07.869] [Lambda worker] [info] Input rows processed: normal: 9486 unresolved: 69561\n[2022-11-09 05:53:07.869] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 69561\n[2022-11-09 05:53:07.869] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.869] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.869] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.116] [Lambda worker] [info] Compilation of slow path took 1.246839s\n[2022-11-09 05:53:13.545] [Lambda worker] [info] Resolved buffer, compiled: 3225 interpreted: 31833 unresolved: 0\n[2022-11-09 05:53:17.868] [Lambda worker] [info] Resolved buffer, compiled: 3051 interpreted: 31452 unresolved: 0\n[2022-11-09 05:53:17.874] [Lambda worker] [info] Exception resolution/slow path done. Took 10.004720s\n[2022-11-09 05:53:17.874] [Lambda worker] [info] Data processed in 15.1577s 53.44 KB (2247 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.874] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.874] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.874] [Lambda worker] [info] Writing output from 2 parts (53.44 KB, 2247 rows)\n[2022-11-09 05:53:17.874] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.874] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.874] [s3fs] [info] Writing buffer of size 28831\n[2022-11-09 05:53:17.874] [s3fs] [info] Writing buffer of size 25890\n[2022-11-09 05:53:17.874] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.874] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.932] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.932] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.932] [Lambda worker] [info] Took 15.215865s in total\n[2022-11-09 05:53:17.932] [Lambda worker] [info] Paths rows took: normal: 9486 general: 6276 interpreter: 63285 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:2684354560-2952790016"]},{"container":{"reused":true,"requestId":"44b04be3-a4e3-477e-8027-398f349a8c52","uuid":"ca566f7d-87de-43ba-851e-653ba87e05b2","msRemaining":584045,"requestsServed":2,"startTimestamp":1667973146570847721,"deadlineTimestamp":1667973808981000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.000] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.033] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.056] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.056] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.056] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:5368709120-5637144576\n[2022-11-09 05:53:02.057] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:5368709120-5637144576\n[2022-11-09 05:53:02.058] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.130] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.134] [global] [info] retrieving pythonic sample took: 0.003547s\n[2022-11-09 05:53:02.203] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.204] [global] [info] retrieving pythonic sample took: 0.000259s\n[2022-11-09 05:53:02.214] [hyper specializer] [info] Deserialization of Code context took 0.155914s\n[2022-11-09 05:53:02.214] [hyper specializer] [info] Total Stage Decode took 0.156973s\n[2022-11-09 05:53:02.279] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:5368709120-5637144576 on 256.00 KB\n[2022-11-09 05:53:02.279] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.280] [fileinputoperator] [info] Filling sample cache for json operator took 0.065125s (1 entries, 0 rows)\n[2022-11-09 05:53:02.306] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:5368709120-5637144576 on 256.00 KB\n[2022-11-09 05:53:02.396] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:5368709120-5637144576 on 256.00 KB\n[2022-11-09 05:53:02.547] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.547] [fileinputoperator] [info] Extracting row sample took 0.267236s\n[2022-11-09 05:53:02.708] [hyper specializer] [info] sampling (setInputFiles) took 0.493565s\n[2022-11-09 05:53:02.708] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.709] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.709] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.709] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.709] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.709] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.709] [global] [warning] requested 2000 rows for sampling, but only 159 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.714] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.714] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.760] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.936] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.936] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.936] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.937] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.939] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.942] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.944] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.946] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.947] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.948] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.956] [hyper specializer] [info] generated code in 0.019174s\n[2022-11-09 05:53:02.998] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.998] [Lambda worker] [info] -- hyperspecialization took 0.942395s\n[2022-11-09 05:53:03.036] [global] [info] TransformStage - Optimization via LLVM passes took 0.037290 ms\n[2022-11-09 05:53:03.036] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.048] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.049] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.049] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.582] [Lambda worker] [info] fast path took: 5.532902s\n[2022-11-09 05:53:08.582] [Lambda worker] [info] Input rows processed: normal: 8928 unresolved: 60752\n[2022-11-09 05:53:08.582] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 60752\n[2022-11-09 05:53:08.582] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.582] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.582] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.819] [Lambda worker] [info] Compilation of slow path took 1.236924s\n[2022-11-09 05:53:13.772] [Lambda worker] [info] Resolved buffer, compiled: 2519 interpreted: 27990 unresolved: 0\n[2022-11-09 05:53:17.823] [Lambda worker] [info] Resolved buffer, compiled: 2518 interpreted: 27725 unresolved: 0\n[2022-11-09 05:53:17.829] [Lambda worker] [info] Exception resolution/slow path done. Took 9.247170s\n[2022-11-09 05:53:17.829] [Lambda worker] [info] Data processed in 14.7803s 49.98 KB (2080 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.829] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.829] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.829] [Lambda worker] [info] Writing output from 2 parts (49.98 KB, 2080 rows)\n[2022-11-09 05:53:17.829] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.829] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.829] [s3fs] [info] Writing buffer of size 28631\n[2022-11-09 05:53:17.829] [s3fs] [info] Writing buffer of size 22546\n[2022-11-09 05:53:17.829] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.829] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.935] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.935] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.935] [Lambda worker] [info] Took 14.886392s in total\n[2022-11-09 05:53:17.935] [Lambda worker] [info] Paths rows took: normal: 8928 general: 5037 interpreter: 55715 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:5368709120-5637144576"]},{"container":{"reused":true,"requestId":"d06d4ee7-c8ab-4dd6-a954-261d7fa84070","uuid":"4c8ff7a5-fe44-47a6-a8da-856c8aad21b5","msRemaining":583896,"requestsServed":2,"startTimestamp":1667973146378275571,"deadlineTimestamp":1667973808837000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.857] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.890] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.913] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.913] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.913] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:1610612736-1879048192\n[2022-11-09 05:53:01.914] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:1610612736-1879048192\n[2022-11-09 05:53:01.915] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.985] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.989] [global] [info] retrieving pythonic sample took: 0.003530s\n[2022-11-09 05:53:02.056] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.057] [global] [info] retrieving pythonic sample took: 0.000261s\n[2022-11-09 05:53:02.067] [hyper specializer] [info] Deserialization of Code context took 0.151778s\n[2022-11-09 05:53:02.067] [hyper specializer] [info] Total Stage Decode took 0.152827s\n[2022-11-09 05:53:02.240] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:02.240] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.240] [fileinputoperator] [info] Filling sample cache for json operator took 0.173085s (1 entries, 0 rows)\n[2022-11-09 05:53:02.289] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:02.440] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:02.577] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.577] [fileinputoperator] [info] Extracting row sample took 0.336751s\n[2022-11-09 05:53:02.718] [hyper specializer] [info] sampling (setInputFiles) took 0.651012s\n[2022-11-09 05:53:02.718] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.718] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.718] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.718] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.718] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.718] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.718] [global] [warning] requested 2000 rows for sampling, but only 147 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.723] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.723] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.763] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.917] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.917] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.917] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.917] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.920] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.923] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.924] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.926] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.927] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.928] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.936] [hyper specializer] [info] generated code in 0.018905s\n[2022-11-09 05:53:02.972] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.972] [Lambda worker] [info] -- hyperspecialization took 1.059838s\n[2022-11-09 05:53:03.009] [global] [info] TransformStage - Optimization via LLVM passes took 0.035936 ms\n[2022-11-09 05:53:03.009] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.021] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.021] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.021] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.445] [Lambda worker] [info] fast path took: 5.423802s\n[2022-11-09 05:53:08.445] [Lambda worker] [info] Input rows processed: normal: 7668 unresolved: 65111\n[2022-11-09 05:53:08.445] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 65111\n[2022-11-09 05:53:08.445] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.445] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.445] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.651] [Lambda worker] [info] Compilation of slow path took 1.206126s\n[2022-11-09 05:53:13.626] [Lambda worker] [info] Resolved buffer, compiled: 3529 interpreted: 28691 unresolved: 0\n[2022-11-09 05:53:17.850] [Lambda worker] [info] Resolved buffer, compiled: 3456 interpreted: 29435 unresolved: 0\n[2022-11-09 05:53:17.856] [Lambda worker] [info] Exception resolution/slow path done. Took 9.410615s\n[2022-11-09 05:53:17.856] [Lambda worker] [info] Data processed in 14.8346s 65.27 KB (2731 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.856] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.856] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.856] [Lambda worker] [info] Writing output from 2 parts (65.27 KB, 2731 rows)\n[2022-11-09 05:53:17.856] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.856] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.856] [s3fs] [info] Writing buffer of size 31416\n[2022-11-09 05:53:17.856] [s3fs] [info] Writing buffer of size 35425\n[2022-11-09 05:53:17.856] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.856] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.940] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.940] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.940] [Lambda worker] [info] Took 14.918645s in total\n[2022-11-09 05:53:17.940] [Lambda worker] [info] Paths rows took: normal: 7668 general: 6985 interpreter: 58126 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:1610612736-1879048192"]},{"container":{"reused":true,"requestId":"c15ca2a6-04dd-46b3-b762-2592aeb658b6","uuid":"3f9eda77-ce48-461c-a8fa-488858f86a23","msRemaining":583964,"requestsServed":2,"startTimestamp":1667973147522126937,"deadlineTimestamp":1667973808918000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.938] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.970] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.993] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.993] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.993] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:3758096384-4026531840\n[2022-11-09 05:53:01.994] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:3758096384-4026531840\n[2022-11-09 05:53:01.995] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.065] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.069] [global] [info] retrieving pythonic sample took: 0.003498s\n[2022-11-09 05:53:02.136] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.198] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.198] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.198] [fileinputoperator] [info] Filling sample cache for json operator took 0.061128s (1 entries, 0 rows)\n[2022-11-09 05:53:02.224] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.377] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.554] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.554] [fileinputoperator] [info] Extracting row sample took 0.356182s\n[2022-11-09 05:53:02.601] [global] [info] retrieving pythonic sample took: 0.464230s\n[2022-11-09 05:53:02.611] [hyper specializer] [info] Deserialization of Code context took 0.615903s\n[2022-11-09 05:53:02.611] [hyper specializer] [info] Total Stage Decode took 0.616933s\n[2022-11-09 05:53:02.675] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:3758096384-4026531840 on 256.00 KB\n[2022-11-09 05:53:02.675] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.675] [fileinputoperator] [info] Filling sample cache for json operator took 0.035476s (1 entries, 0 rows)\n[2022-11-09 05:53:02.700] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:3758096384-4026531840 on 256.00 KB\n[2022-11-09 05:53:02.777] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:3758096384-4026531840 on 256.00 KB\n[2022-11-09 05:53:02.887] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.887] [fileinputoperator] [info] Extracting row sample took 0.210982s\n[2022-11-09 05:53:03.022] [hyper specializer] [info] sampling (setInputFiles) took 0.410651s\n[2022-11-09 05:53:03.022] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.022] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.022] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.022] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.022] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.022] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.022] [global] [warning] requested 2000 rows for sampling, but only 100 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.026] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.026] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.064] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.247] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.247] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.247] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.247] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.250] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.253] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.255] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.257] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.258] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.259] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.266] [hyper specializer] [info] generated code in 0.019090s\n[2022-11-09 05:53:03.301] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.301] [Lambda worker] [info] -- hyperspecialization took 1.308715s\n[2022-11-09 05:53:03.338] [global] [info] TransformStage - Optimization via LLVM passes took 0.036319 ms\n[2022-11-09 05:53:03.338] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.351] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.351] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.351] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.882] [Lambda worker] [info] fast path took: 5.531131s\n[2022-11-09 05:53:08.882] [Lambda worker] [info] Input rows processed: normal: 9285 unresolved: 61699\n[2022-11-09 05:53:08.882] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 61699\n[2022-11-09 05:53:08.882] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.882] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.882] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.081] [Lambda worker] [info] Compilation of slow path took 1.199121s\n[2022-11-09 05:53:14.035] [Lambda worker] [info] Resolved buffer, compiled: 3033 interpreted: 28717 unresolved: 0\n[2022-11-09 05:53:17.878] [Lambda worker] [info] Resolved buffer, compiled: 3059 interpreted: 26890 unresolved: 0\n[2022-11-09 05:53:17.884] [Lambda worker] [info] Exception resolution/slow path done. Took 9.001811s\n[2022-11-09 05:53:17.884] [Lambda worker] [info] Data processed in 14.5331s 46.63 KB (1949 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.884] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.884] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.884] [Lambda worker] [info] Writing output from 2 parts (46.63 KB, 1949 rows)\n[2022-11-09 05:53:17.884] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.884] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.884] [s3fs] [info] Writing buffer of size 24955\n[2022-11-09 05:53:17.884] [s3fs] [info] Writing buffer of size 22794\n[2022-11-09 05:53:17.884] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.884] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.953] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.953] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.953] [Lambda worker] [info] Took 14.602551s in total\n[2022-11-09 05:53:17.953] [Lambda worker] [info] Paths rows took: normal: 9285 general: 6092 interpreter: 55607 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:3758096384-4026531840"]},{"container":{"reused":true,"requestId":"1783b710-bc7b-496e-a129-3bff7c1af3f8","uuid":"8b18fb3f-fbf6-4e39-a6d7-04b552f49b31","msRemaining":584567,"requestsServed":2,"startTimestamp":1667973146697864032,"deadlineTimestamp":1667973809521000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.540] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.575] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.598] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.598] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.598] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:11542724608-11811160064\n[2022-11-09 05:53:02.600] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:11542724608-11811160064\n[2022-11-09 05:53:02.601] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.671] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.676] [global] [info] retrieving pythonic sample took: 0.003524s\n[2022-11-09 05:53:02.742] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.744] [global] [info] retrieving pythonic sample took: 0.000263s\n[2022-11-09 05:53:02.753] [hyper specializer] [info] Deserialization of Code context took 0.152525s\n[2022-11-09 05:53:02.753] [hyper specializer] [info] Total Stage Decode took 0.153569s\n[2022-11-09 05:53:02.844] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:11542724608-11811160064 on 256.00 KB\n[2022-11-09 05:53:02.844] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.845] [fileinputoperator] [info] Filling sample cache for json operator took 0.091129s (1 entries, 0 rows)\n[2022-11-09 05:53:02.872] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:11542724608-11811160064 on 256.00 KB\n[2022-11-09 05:53:02.975] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:11542724608-11811160064 on 256.00 KB\n[2022-11-09 05:53:03.102] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.102] [fileinputoperator] [info] Extracting row sample took 0.257859s\n[2022-11-09 05:53:03.251] [hyper specializer] [info] sampling (setInputFiles) took 0.497645s\n[2022-11-09 05:53:03.252] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.252] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.252] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.252] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.252] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.252] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.252] [global] [warning] requested 2000 rows for sampling, but only 151 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.257] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.257] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.300] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.451] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.451] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.451] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.451] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.454] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.457] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.459] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.461] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.462] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.463] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.470] [hyper specializer] [info] generated code in 0.019217s\n[2022-11-09 05:53:03.508] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.508] [Lambda worker] [info] -- hyperspecialization took 0.909754s\n[2022-11-09 05:53:03.545] [global] [info] TransformStage - Optimization via LLVM passes took 0.036409 ms\n[2022-11-09 05:53:03.545] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.558] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.558] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.558] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.111] [Lambda worker] [info] fast path took: 5.553638s\n[2022-11-09 05:53:09.111] [Lambda worker] [info] Input rows processed: normal: 7683 unresolved: 55691\n[2022-11-09 05:53:09.111] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 55691\n[2022-11-09 05:53:09.111] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.111] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.111] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.333] [Lambda worker] [info] Compilation of slow path took 1.222053s\n[2022-11-09 05:53:14.120] [Lambda worker] [info] Resolved buffer, compiled: 2088 interpreted: 25726 unresolved: 0\n[2022-11-09 05:53:17.891] [Lambda worker] [info] Resolved buffer, compiled: 2183 interpreted: 25694 unresolved: 0\n[2022-11-09 05:53:17.897] [Lambda worker] [info] Exception resolution/slow path done. Took 8.785099s\n[2022-11-09 05:53:17.897] [Lambda worker] [info] Data processed in 14.3389s 24.96 KB (1036 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.897] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.897] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.897] [Lambda worker] [info] Writing output from 2 parts (24.96 KB, 1036 rows)\n[2022-11-09 05:53:17.897] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.897] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.897] [s3fs] [info] Writing buffer of size 13037\n[2022-11-09 05:53:17.897] [s3fs] [info] Writing buffer of size 12527\n[2022-11-09 05:53:17.897] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.897] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.953] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.953] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.953] [Lambda worker] [info] Took 14.395704s in total\n[2022-11-09 05:53:17.953] [Lambda worker] [info] Paths rows took: normal: 7683 general: 4271 interpreter: 51420 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:11542724608-11811160064"]},{"container":{"reused":true,"requestId":"e582aa35-71b9-4ea8-8b83-aac11f21dace","uuid":"4dc6e260-083c-454c-8bb1-5f87a1ca36fb","msRemaining":584259,"requestsServed":2,"startTimestamp":1667973147172361367,"deadlineTimestamp":1667973809217000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.239] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.271] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.294] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.294] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.294] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:3758096384-4026531840\n[2022-11-09 05:53:02.295] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:3758096384-4026531840\n[2022-11-09 05:53:02.296] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.366] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.370] [global] [info] retrieving pythonic sample took: 0.003638s\n[2022-11-09 05:53:02.438] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.439] [global] [info] retrieving pythonic sample took: 0.000283s\n[2022-11-09 05:53:02.449] [hyper specializer] [info] Deserialization of Code context took 0.152354s\n[2022-11-09 05:53:02.449] [hyper specializer] [info] Total Stage Decode took 0.153370s\n[2022-11-09 05:53:02.551] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:3758096384-4026531840 on 256.00 KB\n[2022-11-09 05:53:02.551] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.551] [fileinputoperator] [info] Filling sample cache for json operator took 0.101884s (1 entries, 0 rows)\n[2022-11-09 05:53:02.587] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:3758096384-4026531840 on 256.00 KB\n[2022-11-09 05:53:02.752] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:3758096384-4026531840 on 256.00 KB\n[2022-11-09 05:53:02.850] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.850] [fileinputoperator] [info] Extracting row sample took 0.298980s\n[2022-11-09 05:53:02.987] [hyper specializer] [info] sampling (setInputFiles) took 0.538482s\n[2022-11-09 05:53:02.988] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.988] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.988] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.988] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.988] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.988] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.988] [global] [warning] requested 2000 rows for sampling, but only 89 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.991] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.991] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.030] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.031] [global] [warning] requested 100 rows for sampling, but only 89 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.211] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.211] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.211] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.211] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.214] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.217] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.219] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.220] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.222] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.223] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.230] [hyper specializer] [info] generated code in 0.019014s\n[2022-11-09 05:53:03.266] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.266] [Lambda worker] [info] -- hyperspecialization took 0.972001s\n[2022-11-09 05:53:03.303] [global] [info] TransformStage - Optimization via LLVM passes took 0.036857 ms\n[2022-11-09 05:53:03.303] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.317] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.317] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.317] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.789] [Lambda worker] [info] fast path took: 5.471319s\n[2022-11-09 05:53:08.789] [Lambda worker] [info] Input rows processed: normal: 7078 unresolved: 57206\n[2022-11-09 05:53:08.789] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 57206\n[2022-11-09 05:53:08.789] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.789] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.789] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.037] [Lambda worker] [info] Compilation of slow path took 1.248154s\n[2022-11-09 05:53:14.005] [Lambda worker] [info] Resolved buffer, compiled: 2395 interpreted: 25729 unresolved: 0\n[2022-11-09 05:53:17.900] [Lambda worker] [info] Resolved buffer, compiled: 3110 interpreted: 25972 unresolved: 0\n[2022-11-09 05:53:17.906] [Lambda worker] [info] Exception resolution/slow path done. Took 9.117818s\n[2022-11-09 05:53:17.907] [Lambda worker] [info] Data processed in 14.5893s 39.05 KB (1626 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.907] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.907] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.907] [Lambda worker] [info] Writing output from 2 parts (39.05 KB, 1626 rows)\n[2022-11-09 05:53:17.907] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.907] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.907] [s3fs] [info] Writing buffer of size 20263\n[2022-11-09 05:53:17.907] [s3fs] [info] Writing buffer of size 19727\n[2022-11-09 05:53:17.907] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.907] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.957] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.957] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.957] [Lambda worker] [info] Took 14.640115s in total\n[2022-11-09 05:53:17.957] [Lambda worker] [info] Paths rows took: normal: 7078 general: 5505 interpreter: 51701 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:3758096384-4026531840"]},{"container":{"reused":true,"requestId":"4883e17a-c617-435e-b229-e4c86aeff31b","uuid":"e0082c00-bc86-41c4-bffe-3240c29d8156","msRemaining":584085,"requestsServed":2,"startTimestamp":1667973146685813685,"deadlineTimestamp":1667973809050000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.069] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.103] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.125] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.125] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.125] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:7247757312-7516192768\n[2022-11-09 05:53:02.127] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:7247757312-7516192768\n[2022-11-09 05:53:02.128] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.198] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.202] [global] [info] retrieving pythonic sample took: 0.003551s\n[2022-11-09 05:53:02.269] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.270] [global] [info] retrieving pythonic sample took: 0.000273s\n[2022-11-09 05:53:02.280] [hyper specializer] [info] Deserialization of Code context took 0.152487s\n[2022-11-09 05:53:02.281] [hyper specializer] [info] Total Stage Decode took 0.154557s\n[2022-11-09 05:53:02.365] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:7247757312-7516192768 on 256.00 KB\n[2022-11-09 05:53:02.365] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.365] [fileinputoperator] [info] Filling sample cache for json operator took 0.084073s (1 entries, 0 rows)\n[2022-11-09 05:53:02.406] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:7247757312-7516192768 on 256.00 KB\n[2022-11-09 05:53:02.491] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:7247757312-7516192768 on 256.00 KB\n[2022-11-09 05:53:02.613] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.613] [fileinputoperator] [info] Extracting row sample took 0.247246s\n[2022-11-09 05:53:02.774] [hyper specializer] [info] sampling (setInputFiles) took 0.492841s\n[2022-11-09 05:53:02.775] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.775] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.775] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.775] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.775] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.775] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.775] [global] [warning] requested 2000 rows for sampling, but only 173 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.781] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.781] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.825] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.977] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.977] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.977] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.978] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.980] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.983] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.985] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.987] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.988] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.989] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.997] [hyper specializer] [info] generated code in 0.019295s\n[2022-11-09 05:53:03.037] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.037] [Lambda worker] [info] -- hyperspecialization took 0.911248s\n[2022-11-09 05:53:03.074] [global] [info] TransformStage - Optimization via LLVM passes took 0.036912 ms\n[2022-11-09 05:53:03.074] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.086] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.087] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.087] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.294] [Lambda worker] [info] fast path took: 5.206962s\n[2022-11-09 05:53:08.294] [Lambda worker] [info] Input rows processed: normal: 8401 unresolved: 64042\n[2022-11-09 05:53:08.294] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 64042\n[2022-11-09 05:53:08.294] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.294] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.294] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.527] [Lambda worker] [info] Compilation of slow path took 1.233112s\n[2022-11-09 05:53:13.689] [Lambda worker] [info] Resolved buffer, compiled: 3102 interpreted: 29198 unresolved: 0\n[2022-11-09 05:53:17.775] [Lambda worker] [info] Resolved buffer, compiled: 2967 interpreted: 28775 unresolved: 0\n[2022-11-09 05:53:17.781] [Lambda worker] [info] Exception resolution/slow path done. Took 9.487398s\n[2022-11-09 05:53:17.781] [Lambda worker] [info] Data processed in 14.6945s 34.74 KB (1449 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.781] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.781] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.781] [Lambda worker] [info] Writing output from 2 parts (34.74 KB, 1449 rows)\n[2022-11-09 05:53:17.781] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.781] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.781] [s3fs] [info] Writing buffer of size 18585\n[2022-11-09 05:53:17.781] [s3fs] [info] Writing buffer of size 16992\n[2022-11-09 05:53:17.781] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.781] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.964] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.964] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.964] [Lambda worker] [info] Took 14.877692s in total\n[2022-11-09 05:53:17.964] [Lambda worker] [info] Paths rows took: normal: 8401 general: 6069 interpreter: 57973 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:7247757312-7516192768"]},{"container":{"reused":true,"requestId":"aecc7444-3aca-4d15-a3b8-8b0c06299016","uuid":"c020cbdf-9935-4d67-a1b3-5296162104d3","msRemaining":584372,"requestsServed":2,"startTimestamp":1667973147275114945,"deadlineTimestamp":1667973809340000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.360] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.392] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.415] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.415] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.415] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:6979321856-7247757312\n[2022-11-09 05:53:02.417] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:6979321856-7247757312\n[2022-11-09 05:53:02.418] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.489] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.494] [global] [info] retrieving pythonic sample took: 0.003646s\n[2022-11-09 05:53:02.560] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.623] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.623] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.623] [fileinputoperator] [info] Filling sample cache for json operator took 0.061756s (1 entries, 0 rows)\n[2022-11-09 05:53:02.646] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.793] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.968] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.968] [fileinputoperator] [info] Extracting row sample took 0.345569s\n[2022-11-09 05:53:03.016] [global] [info] retrieving pythonic sample took: 0.455162s\n[2022-11-09 05:53:03.026] [hyper specializer] [info] Deserialization of Code context took 0.608548s\n[2022-11-09 05:53:03.026] [hyper specializer] [info] Total Stage Decode took 0.609597s\n[2022-11-09 05:53:03.108] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:6979321856-7247757312 on 256.00 KB\n[2022-11-09 05:53:03.108] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.108] [fileinputoperator] [info] Filling sample cache for json operator took 0.052283s (1 entries, 0 rows)\n[2022-11-09 05:53:03.150] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:6979321856-7247757312 on 256.00 KB\n[2022-11-09 05:53:03.264] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:6979321856-7247757312 on 256.00 KB\n[2022-11-09 05:53:03.359] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.359] [fileinputoperator] [info] Extracting row sample took 0.250906s\n[2022-11-09 05:53:03.516] [hyper specializer] [info] sampling (setInputFiles) took 0.490051s\n[2022-11-09 05:53:03.517] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.517] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.517] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.517] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.517] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.517] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.517] [global] [warning] requested 2000 rows for sampling, but only 124 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.522] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.522] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.566] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.755] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.755] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.755] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.755] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.758] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.761] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.763] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.765] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.766] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.767] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.774] [hyper specializer] [info] generated code in 0.019268s\n[2022-11-09 05:53:03.815] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.815] [Lambda worker] [info] -- hyperspecialization took 1.399870s\n[2022-11-09 05:53:03.852] [global] [info] TransformStage - Optimization via LLVM passes took 0.036687 ms\n[2022-11-09 05:53:03.852] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.864] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.865] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.865] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.123] [Lambda worker] [info] fast path took: 5.257941s\n[2022-11-09 05:53:09.123] [Lambda worker] [info] Input rows processed: normal: 7635 unresolved: 55501\n[2022-11-09 05:53:09.123] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 55501\n[2022-11-09 05:53:09.123] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.123] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.123] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.351] [Lambda worker] [info] Compilation of slow path took 1.228421s\n[2022-11-09 05:53:14.051] [Lambda worker] [info] Resolved buffer, compiled: 2914 interpreted: 24518 unresolved: 0\n[2022-11-09 05:53:17.815] [Lambda worker] [info] Resolved buffer, compiled: 2648 interpreted: 25421 unresolved: 0\n[2022-11-09 05:53:17.823] [Lambda worker] [info] Exception resolution/slow path done. Took 8.700559s\n[2022-11-09 05:53:17.826] [Lambda worker] [info] Data processed in 13.9611s 30.49 KB (1268 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.829] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.829] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.829] [Lambda worker] [info] Writing output from 2 parts (30.49 KB, 1268 rows)\n[2022-11-09 05:53:17.829] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.829] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.829] [s3fs] [info] Writing buffer of size 15517\n[2022-11-09 05:53:17.829] [s3fs] [info] Writing buffer of size 15709\n[2022-11-09 05:53:17.829] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.829] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:17.967] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:17.967] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:17.967] [Lambda worker] [info] Took 14.102708s in total\n[2022-11-09 05:53:17.967] [Lambda worker] [info] Paths rows took: normal: 7635 general: 5562 interpreter: 49939 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:6979321856-7247757312"]},{"container":{"reused":true,"requestId":"58b4889c-ff71-4f39-9e25-05a89e2bbffe","uuid":"e5cd1858-52df-4d3c-92bf-dbe1c48cd185","msRemaining":584431,"requestsServed":2,"startTimestamp":1667973147245637061,"deadlineTimestamp":1667973809437000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.456] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.489] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.512] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.512] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.512] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:8589934592-8858370048\n[2022-11-09 05:53:02.514] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:8589934592-8858370048\n[2022-11-09 05:53:02.515] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.585] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.589] [global] [info] retrieving pythonic sample took: 0.003465s\n[2022-11-09 05:53:02.656] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.731] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.731] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.731] [fileinputoperator] [info] Filling sample cache for json operator took 0.073409s (1 entries, 0 rows)\n[2022-11-09 05:53:02.797] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.945] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.121] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.121] [fileinputoperator] [info] Extracting row sample took 0.390354s\n[2022-11-09 05:53:03.168] [global] [info] retrieving pythonic sample took: 0.511218s\n[2022-11-09 05:53:03.178] [hyper specializer] [info] Deserialization of Code context took 0.663604s\n[2022-11-09 05:53:03.178] [hyper specializer] [info] Total Stage Decode took 0.664635s\n[2022-11-09 05:53:03.257] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:8589934592-8858370048 on 256.00 KB\n[2022-11-09 05:53:03.257] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.257] [fileinputoperator] [info] Filling sample cache for json operator took 0.049623s (1 entries, 0 rows)\n[2022-11-09 05:53:03.319] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:8589934592-8858370048 on 256.00 KB\n[2022-11-09 05:53:03.428] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:8589934592-8858370048 on 256.00 KB\n[2022-11-09 05:53:03.548] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.548] [fileinputoperator] [info] Extracting row sample took 0.290620s\n[2022-11-09 05:53:03.712] [hyper specializer] [info] sampling (setInputFiles) took 0.534144s\n[2022-11-09 05:53:03.713] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.713] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.713] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.713] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.713] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.713] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.713] [global] [warning] requested 2000 rows for sampling, but only 115 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.718] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.718] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.763] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.959] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.959] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.959] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.959] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.962] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.965] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.966] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.968] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.970] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.971] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.978] [hyper specializer] [info] generated code in 0.018658s\n[2022-11-09 05:53:04.020] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:04.020] [Lambda worker] [info] -- hyperspecialization took 1.508066s\n[2022-11-09 05:53:04.056] [global] [info] TransformStage - Optimization via LLVM passes took 0.035857 ms\n[2022-11-09 05:53:04.056] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:04.069] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:04.069] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:04.069] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.249] [Lambda worker] [info] fast path took: 5.180596s\n[2022-11-09 05:53:09.249] [Lambda worker] [info] Input rows processed: normal: 7383 unresolved: 53055\n[2022-11-09 05:53:09.250] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 53055\n[2022-11-09 05:53:09.250] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.250] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.250] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.465] [Lambda worker] [info] Compilation of slow path took 1.215630s\n[2022-11-09 05:53:14.102] [Lambda worker] [info] Resolved buffer, compiled: 1986 interpreted: 24232 unresolved: 0\n[2022-11-09 05:53:17.932] [Lambda worker] [info] Resolved buffer, compiled: 2114 interpreted: 24723 unresolved: 0\n[2022-11-09 05:53:17.938] [Lambda worker] [info] Exception resolution/slow path done. Took 8.688281s\n[2022-11-09 05:53:17.939] [Lambda worker] [info] Data processed in 13.8701s 28.98 KB (1203 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.939] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.939] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.939] [Lambda worker] [info] Writing output from 2 parts (28.98 KB, 1203 rows)\n[2022-11-09 05:53:17.939] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.939] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.939] [s3fs] [info] Writing buffer of size 14367\n[2022-11-09 05:53:17.939] [s3fs] [info] Writing buffer of size 15311\n[2022-11-09 05:53:17.939] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.939] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.005] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.005] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.005] [Lambda worker] [info] Took 13.936315s in total\n[2022-11-09 05:53:18.005] [Lambda worker] [info] Paths rows took: normal: 7383 general: 4100 interpreter: 48955 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:8589934592-8858370048"]},{"container":{"reused":true,"requestId":"702b6e18-d0d8-4833-a5b6-2a0efc939415","uuid":"2dfa46f0-5ac8-422d-8635-de9e07e809c9","msRemaining":584332,"requestsServed":2,"startTimestamp":1667973147105976831,"deadlineTimestamp":1667973809350000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.369] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.402] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.424] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.424] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.424] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:7247757312-7516192768\n[2022-11-09 05:53:02.426] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:7247757312-7516192768\n[2022-11-09 05:53:02.427] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.496] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.500] [global] [info] retrieving pythonic sample took: 0.003454s\n[2022-11-09 05:53:02.567] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.628] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.629] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.629] [fileinputoperator] [info] Filling sample cache for json operator took 0.060729s (1 entries, 0 rows)\n[2022-11-09 05:53:02.650] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.795] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.969] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.970] [fileinputoperator] [info] Extracting row sample took 0.340897s\n[2022-11-09 05:53:03.016] [global] [info] retrieving pythonic sample took: 0.448175s\n[2022-11-09 05:53:03.026] [hyper specializer] [info] Deserialization of Code context took 0.599030s\n[2022-11-09 05:53:03.026] [hyper specializer] [info] Total Stage Decode took 0.600056s\n[2022-11-09 05:53:03.109] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:7247757312-7516192768 on 256.00 KB\n[2022-11-09 05:53:03.109] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.109] [fileinputoperator] [info] Filling sample cache for json operator took 0.054163s (1 entries, 0 rows)\n[2022-11-09 05:53:03.133] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:7247757312-7516192768 on 256.00 KB\n[2022-11-09 05:53:03.216] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:7247757312-7516192768 on 256.00 KB\n[2022-11-09 05:53:03.308] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.308] [fileinputoperator] [info] Extracting row sample took 0.198748s\n[2022-11-09 05:53:03.476] [hyper specializer] [info] sampling (setInputFiles) took 0.450304s\n[2022-11-09 05:53:03.477] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.477] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.477] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.477] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.477] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.477] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.477] [global] [warning] requested 2000 rows for sampling, but only 123 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.482] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.482] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.529] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.715] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.715] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.715] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.715] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.718] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.720] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.722] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.724] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.726] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.727] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.734] [hyper specializer] [info] generated code in 0.019187s\n[2022-11-09 05:53:03.778] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.778] [Lambda worker] [info] -- hyperspecialization took 1.353300s\n[2022-11-09 05:53:03.814] [global] [info] TransformStage - Optimization via LLVM passes took 0.036114 ms\n[2022-11-09 05:53:03.814] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.827] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.827] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.827] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.078] [Lambda worker] [info] fast path took: 5.251155s\n[2022-11-09 05:53:09.078] [Lambda worker] [info] Input rows processed: normal: 6914 unresolved: 53694\n[2022-11-09 05:53:09.078] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 53694\n[2022-11-09 05:53:09.078] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.078] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.078] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.291] [Lambda worker] [info] Compilation of slow path took 1.212965s\n[2022-11-09 05:53:14.014] [Lambda worker] [info] Resolved buffer, compiled: 2072 interpreted: 24957 unresolved: 0\n[2022-11-09 05:53:17.692] [Lambda worker] [info] Resolved buffer, compiled: 1916 interpreted: 24749 unresolved: 0\n[2022-11-09 05:53:17.698] [Lambda worker] [info] Exception resolution/slow path done. Took 8.619341s\n[2022-11-09 05:53:17.698] [Lambda worker] [info] Data processed in 13.8707s 29.34 KB (1218 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.698] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.698] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.698] [Lambda worker] [info] Writing output from 2 parts (29.34 KB, 1218 rows)\n[2022-11-09 05:53:17.698] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.698] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.698] [s3fs] [info] Writing buffer of size 15667\n[2022-11-09 05:53:17.698] [s3fs] [info] Writing buffer of size 14378\n[2022-11-09 05:53:17.698] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.698] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.017] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.017] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.017] [Lambda worker] [info] Took 14.189898s in total\n[2022-11-09 05:53:18.017] [Lambda worker] [info] Paths rows took: normal: 6914 general: 3988 interpreter: 49706 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:7247757312-7516192768"]},{"container":{"reused":true,"requestId":"48a8d820-6417-4ed2-8c22-f84f1c11b3ad","uuid":"f04b08e0-6270-4fe9-ae7d-7c7a5fd28288","msRemaining":583686,"requestsServed":2,"startTimestamp":1667973146392210197,"deadlineTimestamp":1667973808720000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.739] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.775] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.798] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.798] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.798] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:3758096384-4026531840\n[2022-11-09 05:53:01.800] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:3758096384-4026531840\n[2022-11-09 05:53:01.801] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.872] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.876] [global] [info] retrieving pythonic sample took: 0.003572s\n[2022-11-09 05:53:01.945] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.946] [global] [info] retrieving pythonic sample took: 0.000254s\n[2022-11-09 05:53:01.956] [hyper specializer] [info] Deserialization of Code context took 0.155729s\n[2022-11-09 05:53:01.956] [hyper specializer] [info] Total Stage Decode took 0.156850s\n[2022-11-09 05:53:02.082] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:3758096384-4026531840 on 256.00 KB\n[2022-11-09 05:53:02.082] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.082] [fileinputoperator] [info] Filling sample cache for json operator took 0.125413s (1 entries, 0 rows)\n[2022-11-09 05:53:02.116] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:3758096384-4026531840 on 256.00 KB\n[2022-11-09 05:53:02.218] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:3758096384-4026531840 on 256.00 KB\n[2022-11-09 05:53:02.358] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.358] [fileinputoperator] [info] Extracting row sample took 0.275908s\n[2022-11-09 05:53:02.512] [hyper specializer] [info] sampling (setInputFiles) took 0.555772s\n[2022-11-09 05:53:02.513] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.513] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.513] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.513] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.513] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.513] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.513] [global] [warning] requested 2000 rows for sampling, but only 132 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.517] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.517] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.565] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.739] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.739] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.739] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.739] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.742] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.745] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.747] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.749] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.750] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.752] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.760] [hyper specializer] [info] generated code in 0.020265s\n[2022-11-09 05:53:02.800] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.800] [Lambda worker] [info] -- hyperspecialization took 1.001644s\n[2022-11-09 05:53:02.837] [global] [info] TransformStage - Optimization via LLVM passes took 0.036810 ms\n[2022-11-09 05:53:02.837] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.850] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.850] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.850] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.081] [Lambda worker] [info] fast path took: 5.230694s\n[2022-11-09 05:53:08.081] [Lambda worker] [info] Input rows processed: normal: 9351 unresolved: 69632\n[2022-11-09 05:53:08.081] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 69632\n[2022-11-09 05:53:08.081] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.081] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.081] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.299] [Lambda worker] [info] Compilation of slow path took 1.218341s\n[2022-11-09 05:53:13.621] [Lambda worker] [info] Resolved buffer, compiled: 3161 interpreted: 32048 unresolved: 0\n[2022-11-09 05:53:17.954] [Lambda worker] [info] Resolved buffer, compiled: 2810 interpreted: 31613 unresolved: 0\n[2022-11-09 05:53:17.961] [Lambda worker] [info] Exception resolution/slow path done. Took 9.879786s\n[2022-11-09 05:53:17.961] [Lambda worker] [info] Data processed in 15.1106s 48.14 KB (2021 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.961] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.961] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.961] [Lambda worker] [info] Writing output from 2 parts (48.14 KB, 2021 rows)\n[2022-11-09 05:53:17.961] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.961] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.961] [s3fs] [info] Writing buffer of size 26702\n[2022-11-09 05:53:17.961] [s3fs] [info] Writing buffer of size 22594\n[2022-11-09 05:53:17.961] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:17.961] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.033] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.033] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.033] [Lambda worker] [info] Took 15.182822s in total\n[2022-11-09 05:53:18.033] [Lambda worker] [info] Paths rows took: normal: 9351 general: 5971 interpreter: 63661 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:3758096384-4026531840"]},{"container":{"reused":true,"requestId":"1fbbe43a-3e68-43ed-a71e-c52686647749","uuid":"f2a0b834-3bf3-4859-a58a-2b0c4f192ff0","msRemaining":584361,"requestsServed":2,"startTimestamp":1667973146885428106,"deadlineTimestamp":1667973809429000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.448] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.481] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.502] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.502] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.502] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:8321499136-8589934592\n[2022-11-09 05:53:02.504] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:8321499136-8589934592\n[2022-11-09 05:53:02.505] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.573] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.578] [global] [info] retrieving pythonic sample took: 0.003451s\n[2022-11-09 05:53:02.643] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.701] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.701] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.701] [fileinputoperator] [info] Filling sample cache for json operator took 0.056861s (1 entries, 0 rows)\n[2022-11-09 05:53:02.726] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.874] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.048] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.048] [fileinputoperator] [info] Extracting row sample took 0.346504s\n[2022-11-09 05:53:03.094] [global] [info] retrieving pythonic sample took: 0.449360s\n[2022-11-09 05:53:03.103] [hyper specializer] [info] Deserialization of Code context took 0.598560s\n[2022-11-09 05:53:03.103] [hyper specializer] [info] Total Stage Decode took 0.599579s\n[2022-11-09 05:53:03.290] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:8321499136-8589934592 on 256.00 KB\n[2022-11-09 05:53:03.290] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.290] [fileinputoperator] [info] Filling sample cache for json operator took 0.157662s (1 entries, 0 rows)\n[2022-11-09 05:53:03.349] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:8321499136-8589934592 on 256.00 KB\n[2022-11-09 05:53:03.464] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:8321499136-8589934592 on 256.00 KB\n[2022-11-09 05:53:03.585] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.585] [fileinputoperator] [info] Extracting row sample took 0.295514s\n[2022-11-09 05:53:03.750] [hyper specializer] [info] sampling (setInputFiles) took 0.646366s\n[2022-11-09 05:53:03.750] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.750] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.750] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.750] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.750] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.750] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.750] [global] [warning] requested 2000 rows for sampling, but only 119 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.755] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.755] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.800] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:04.002] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:04.002] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:04.002] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:04.002] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:04.005] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:04.008] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:04.010] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:04.012] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:04.013] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:04.014] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:04.021] [hyper specializer] [info] generated code in 0.018801s\n[2022-11-09 05:53:04.064] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:04.064] [Lambda worker] [info] -- hyperspecialization took 1.561909s\n[2022-11-09 05:53:04.100] [global] [info] TransformStage - Optimization via LLVM passes took 0.035257 ms\n[2022-11-09 05:53:04.100] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:04.112] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:04.112] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:04.112] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.469] [Lambda worker] [info] fast path took: 5.356724s\n[2022-11-09 05:53:09.469] [Lambda worker] [info] Input rows processed: normal: 6673 unresolved: 52742\n[2022-11-09 05:53:09.469] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 52742\n[2022-11-09 05:53:09.469] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.469] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.469] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.672] [Lambda worker] [info] Compilation of slow path took 1.202788s\n[2022-11-09 05:53:14.424] [Lambda worker] [info] Resolved buffer, compiled: 2112 interpreted: 25180 unresolved: 0\n[2022-11-09 05:53:17.983] [Lambda worker] [info] Resolved buffer, compiled: 1862 interpreted: 23588 unresolved: 0\n[2022-11-09 05:53:17.989] [Lambda worker] [info] Exception resolution/slow path done. Took 8.519521s\n[2022-11-09 05:53:17.989] [Lambda worker] [info] Data processed in 13.8764s 29.68 KB (1232 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.989] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.989] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.989] [Lambda worker] [info] Writing output from 2 parts (29.68 KB, 1232 rows)\n[2022-11-09 05:53:17.989] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.989] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.989] [s3fs] [info] Writing buffer of size 16294\n[2022-11-09 05:53:17.989] [s3fs] [info] Writing buffer of size 14100\n[2022-11-09 05:53:17.989] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:17.989] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.067] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.067] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.067] [Lambda worker] [info] Took 13.954732s in total\n[2022-11-09 05:53:18.067] [Lambda worker] [info] Paths rows took: normal: 6673 general: 3974 interpreter: 48768 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:8321499136-8589934592"]},{"container":{"reused":true,"requestId":"e2ecaea5-7ed7-4059-bd7d-1df82d14ea8e","uuid":"0827c766-555f-4b97-99a8-04035e79c594","msRemaining":583780,"requestsServed":2,"startTimestamp":1667973146884656438,"deadlineTimestamp":1667973808849000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.869] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.901] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.924] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.924] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.924] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:1879048192-2147483648\n[2022-11-09 05:53:01.925] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:1879048192-2147483648\n[2022-11-09 05:53:01.926] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.996] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.000] [global] [info] retrieving pythonic sample took: 0.003492s\n[2022-11-09 05:53:02.067] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.068] [global] [info] retrieving pythonic sample took: 0.000256s\n[2022-11-09 05:53:02.077] [hyper specializer] [info] Deserialization of Code context took 0.151047s\n[2022-11-09 05:53:02.077] [hyper specializer] [info] Total Stage Decode took 0.152075s\n[2022-11-09 05:53:02.176] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.176] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.176] [fileinputoperator] [info] Filling sample cache for json operator took 0.098576s (1 entries, 0 rows)\n[2022-11-09 05:53:02.206] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.320] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.484] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.484] [fileinputoperator] [info] Extracting row sample took 0.308008s\n[2022-11-09 05:53:02.635] [hyper specializer] [info] sampling (setInputFiles) took 0.557640s\n[2022-11-09 05:53:02.636] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.636] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.636] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.636] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.636] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.636] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.636] [global] [warning] requested 2000 rows for sampling, but only 135 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.640] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.640] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.683] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.911] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.911] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.911] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.911] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.914] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.917] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.919] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.921] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.922] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.923] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.930] [hyper specializer] [info] generated code in 0.018825s\n[2022-11-09 05:53:02.970] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.970] [Lambda worker] [info] -- hyperspecialization took 1.046169s\n[2022-11-09 05:53:03.006] [global] [info] TransformStage - Optimization via LLVM passes took 0.035647 ms\n[2022-11-09 05:53:03.006] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.018] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.018] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.018] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.497] [Lambda worker] [info] fast path took: 5.478415s\n[2022-11-09 05:53:08.497] [Lambda worker] [info] Input rows processed: normal: 8020 unresolved: 66786\n[2022-11-09 05:53:08.497] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 66786\n[2022-11-09 05:53:08.497] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.497] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.497] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.698] [Lambda worker] [info] Compilation of slow path took 1.201337s\n[2022-11-09 05:53:13.777] [Lambda worker] [info] Resolved buffer, compiled: 3400 interpreted: 29906 unresolved: 0\n[2022-11-09 05:53:17.995] [Lambda worker] [info] Resolved buffer, compiled: 3683 interpreted: 29797 unresolved: 0\n[2022-11-09 05:53:18.001] [Lambda worker] [info] Exception resolution/slow path done. Took 9.504048s\n[2022-11-09 05:53:18.001] [Lambda worker] [info] Data processed in 14.9826s 63.08 KB (2640 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.001] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.001] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.001] [Lambda worker] [info] Writing output from 2 parts (63.08 KB, 2640 rows)\n[2022-11-09 05:53:18.001] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.001] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.001] [s3fs] [info] Writing buffer of size 31363\n[2022-11-09 05:53:18.001] [s3fs] [info] Writing buffer of size 33231\n[2022-11-09 05:53:18.001] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.001] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.068] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.068] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.068] [Lambda worker] [info] Took 15.050136s in total\n[2022-11-09 05:53:18.068] [Lambda worker] [info] Paths rows took: normal: 8020 general: 7083 interpreter: 59703 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:1879048192-2147483648"]},{"container":{"reused":true,"requestId":"f1e2c254-cca8-4c1b-8ed6-894680bfcb87","uuid":"a7396edb-815d-47ff-a3ef-f9c76ba5eab5","msRemaining":584432,"requestsServed":2,"startTimestamp":1667973146893004504,"deadlineTimestamp":1667973809544000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.564] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.597] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.619] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.619] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.619] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:12079595520-12348030976\n[2022-11-09 05:53:02.621] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:12079595520-12348030976\n[2022-11-09 05:53:02.622] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.693] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.697] [global] [info] retrieving pythonic sample took: 0.003492s\n[2022-11-09 05:53:02.763] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.834] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.834] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.834] [fileinputoperator] [info] Filling sample cache for json operator took 0.069988s (1 entries, 0 rows)\n[2022-11-09 05:53:02.861] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.036] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.212] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.212] [fileinputoperator] [info] Extracting row sample took 0.377779s\n[2022-11-09 05:53:03.259] [global] [info] retrieving pythonic sample took: 0.494954s\n[2022-11-09 05:53:03.269] [hyper specializer] [info] Deserialization of Code context took 0.647715s\n[2022-11-09 05:53:03.269] [hyper specializer] [info] Total Stage Decode took 0.648765s\n[2022-11-09 05:53:03.356] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:12079595520-12348030976 on 256.00 KB\n[2022-11-09 05:53:03.356] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.356] [fileinputoperator] [info] Filling sample cache for json operator took 0.056959s (1 entries, 0 rows)\n[2022-11-09 05:53:03.383] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:12079595520-12348030976 on 256.00 KB\n[2022-11-09 05:53:03.492] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:12079595520-12348030976 on 256.00 KB\n[2022-11-09 05:53:03.589] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.589] [fileinputoperator] [info] Extracting row sample took 0.232500s\n[2022-11-09 05:53:03.752] [hyper specializer] [info] sampling (setInputFiles) took 0.482080s\n[2022-11-09 05:53:03.752] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.752] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.752] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.752] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.752] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.752] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.752] [global] [warning] requested 2000 rows for sampling, but only 127 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.757] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.757] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.803] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.980] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.980] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.980] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.980] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.983] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.986] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.987] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.989] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.990] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.992] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.998] [hyper specializer] [info] generated code in 0.018822s\n[2022-11-09 05:53:04.040] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:04.040] [Lambda worker] [info] -- hyperspecialization took 1.421194s\n[2022-11-09 05:53:04.077] [global] [info] TransformStage - Optimization via LLVM passes took 0.035937 ms\n[2022-11-09 05:53:04.077] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:04.089] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:04.089] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:04.089] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.026] [Lambda worker] [info] fast path took: 4.936709s\n[2022-11-09 05:53:09.026] [Lambda worker] [info] Input rows processed: normal: 7928 unresolved: 57956\n[2022-11-09 05:53:09.026] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 57956\n[2022-11-09 05:53:09.026] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.026] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.026] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.246] [Lambda worker] [info] Compilation of slow path took 1.219778s\n[2022-11-09 05:53:14.081] [Lambda worker] [info] Resolved buffer, compiled: 2047 interpreted: 26214 unresolved: 0\n[2022-11-09 05:53:18.026] [Lambda worker] [info] Resolved buffer, compiled: 2016 interpreted: 27679 unresolved: 0\n[2022-11-09 05:53:18.032] [Lambda worker] [info] Exception resolution/slow path done. Took 9.005966s\n[2022-11-09 05:53:18.032] [Lambda worker] [info] Data processed in 13.9428s 25.04 KB (1040 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.032] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.032] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.032] [Lambda worker] [info] Writing output from 2 parts (25.04 KB, 1040 rows)\n[2022-11-09 05:53:18.032] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.032] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.032] [s3fs] [info] Writing buffer of size 12514\n[2022-11-09 05:53:18.032] [s3fs] [info] Writing buffer of size 13130\n[2022-11-09 05:53:18.032] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.032] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.111] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.111] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.111] [Lambda worker] [info] Took 14.021812s in total\n[2022-11-09 05:53:18.111] [Lambda worker] [info] Paths rows took: normal: 7928 general: 4063 interpreter: 53893 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:12079595520-12348030976"]},{"container":{"reused":true,"requestId":"b40973b8-9f05-4485-af2f-5d1eea14ce61","uuid":"5c1cd2cf-5d17-466f-a1ec-59ef9a727d1d","msRemaining":583995,"requestsServed":2,"startTimestamp":1667973147303070003,"deadlineTimestamp":1667973809129000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.149] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.181] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.204] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.204] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.204] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:02.205] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:02.206] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.276] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.280] [global] [info] retrieving pythonic sample took: 0.003506s\n[2022-11-09 05:53:02.347] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.411] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.411] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.411] [fileinputoperator] [info] Filling sample cache for json operator took 0.063182s (1 entries, 0 rows)\n[2022-11-09 05:53:02.438] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.585] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.761] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.761] [fileinputoperator] [info] Extracting row sample took 0.349177s\n[2022-11-09 05:53:02.808] [global] [info] retrieving pythonic sample took: 0.459523s\n[2022-11-09 05:53:02.818] [hyper specializer] [info] Deserialization of Code context took 0.611251s\n[2022-11-09 05:53:02.818] [hyper specializer] [info] Total Stage Decode took 0.612286s\n[2022-11-09 05:53:02.876] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.876] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.876] [fileinputoperator] [info] Filling sample cache for json operator took 0.029322s (1 entries, 0 rows)\n[2022-11-09 05:53:02.903] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.994] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:03.152] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.153] [fileinputoperator] [info] Extracting row sample took 0.275996s\n[2022-11-09 05:53:03.315] [hyper specializer] [info] sampling (setInputFiles) took 0.497854s\n[2022-11-09 05:53:03.316] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.316] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.316] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.316] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.316] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.316] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.316] [global] [warning] requested 2000 rows for sampling, but only 180 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.323] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.323] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.370] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.550] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.550] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.550] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.550] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.553] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.556] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.557] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.559] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.561] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.562] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.569] [hyper specializer] [info] generated code in 0.019241s\n[2022-11-09 05:53:03.611] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.611] [Lambda worker] [info] -- hyperspecialization took 1.406949s\n[2022-11-09 05:53:03.647] [global] [info] TransformStage - Optimization via LLVM passes took 0.035612 ms\n[2022-11-09 05:53:03.647] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.659] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.659] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.659] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.604] [Lambda worker] [info] fast path took: 4.944557s\n[2022-11-09 05:53:08.604] [Lambda worker] [info] Input rows processed: normal: 8332 unresolved: 64958\n[2022-11-09 05:53:08.604] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 64958\n[2022-11-09 05:53:08.604] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.604] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.604] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.827] [Lambda worker] [info] Compilation of slow path took 1.223422s\n[2022-11-09 05:53:14.014] [Lambda worker] [info] Resolved buffer, compiled: 2508 interpreted: 30633 unresolved: 0\n[2022-11-09 05:53:18.073] [Lambda worker] [info] Resolved buffer, compiled: 2313 interpreted: 29504 unresolved: 0\n[2022-11-09 05:53:18.079] [Lambda worker] [info] Exception resolution/slow path done. Took 9.475002s\n[2022-11-09 05:53:18.079] [Lambda worker] [info] Data processed in 14.4197s 36.30 KB (1510 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.079] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.079] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.079] [Lambda worker] [info] Writing output from 2 parts (36.30 KB, 1510 rows)\n[2022-11-09 05:53:18.079] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.079] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.079] [s3fs] [info] Writing buffer of size 20918\n[2022-11-09 05:53:18.079] [s3fs] [info] Writing buffer of size 16252\n[2022-11-09 05:53:18.079] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.079] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.133] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.133] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.133] [Lambda worker] [info] Took 14.473506s in total\n[2022-11-09 05:53:18.133] [Lambda worker] [info] Paths rows took: normal: 8332 general: 4821 interpreter: 60137 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:1342177280-1610612736"]},{"container":{"reused":true,"requestId":"25f109b8-5aff-4a2f-8929-76ca12eaa9cf","uuid":"a53a0b43-ca22-4491-93fb-8a218cdd9e98","msRemaining":583704,"requestsServed":2,"startTimestamp":1667973146795192046,"deadlineTimestamp":1667973808876000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.895] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.929] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.952] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.952] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.952] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:2952790016-3221225472\n[2022-11-09 05:53:01.953] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:2952790016-3221225472\n[2022-11-09 05:53:01.954] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.036] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.041] [global] [info] retrieving pythonic sample took: 0.003509s\n[2022-11-09 05:53:02.109] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.110] [global] [info] retrieving pythonic sample took: 0.000267s\n[2022-11-09 05:53:02.120] [hyper specializer] [info] Deserialization of Code context took 0.165702s\n[2022-11-09 05:53:02.120] [hyper specializer] [info] Total Stage Decode took 0.166831s\n[2022-11-09 05:53:02.245] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:2952790016-3221225472 on 256.00 KB\n[2022-11-09 05:53:02.245] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.245] [fileinputoperator] [info] Filling sample cache for json operator took 0.124493s (1 entries, 0 rows)\n[2022-11-09 05:53:02.275] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:2952790016-3221225472 on 256.00 KB\n[2022-11-09 05:53:02.409] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:2952790016-3221225472 on 256.00 KB\n[2022-11-09 05:53:02.558] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.558] [fileinputoperator] [info] Extracting row sample took 0.313470s\n[2022-11-09 05:53:02.719] [hyper specializer] [info] sampling (setInputFiles) took 0.599289s\n[2022-11-09 05:53:02.720] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.720] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.720] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.720] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.720] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.720] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.720] [global] [warning] requested 2000 rows for sampling, but only 145 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.725] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.725] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.772] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.952] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.953] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.953] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.954] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.956] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.959] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.961] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.963] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.965] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.968] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.975] [hyper specializer] [info] generated code in 0.021652s\n[2022-11-09 05:53:03.017] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.017] [Lambda worker] [info] -- hyperspecialization took 1.065435s\n[2022-11-09 05:53:03.055] [global] [info] TransformStage - Optimization via LLVM passes took 0.037148 ms\n[2022-11-09 05:53:03.055] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.067] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.067] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.067] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.282] [Lambda worker] [info] fast path took: 5.214969s\n[2022-11-09 05:53:08.282] [Lambda worker] [info] Input rows processed: normal: 8914 unresolved: 64500\n[2022-11-09 05:53:08.282] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 64500\n[2022-11-09 05:53:08.282] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.282] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.282] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.527] [Lambda worker] [info] Compilation of slow path took 1.244122s\n[2022-11-09 05:53:13.717] [Lambda worker] [info] Resolved buffer, compiled: 3373 interpreted: 28597 unresolved: 0\n[2022-11-09 05:53:17.905] [Lambda worker] [info] Resolved buffer, compiled: 3205 interpreted: 29325 unresolved: 0\n[2022-11-09 05:53:17.911] [Lambda worker] [info] Exception resolution/slow path done. Took 9.628896s\n[2022-11-09 05:53:17.911] [Lambda worker] [info] Data processed in 14.844s 48.58 KB (2030 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.911] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.911] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.911] [Lambda worker] [info] Writing output from 2 parts (48.58 KB, 2030 rows)\n[2022-11-09 05:53:17.911] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.911] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.911] [s3fs] [info] Writing buffer of size 24332\n[2022-11-09 05:53:17.911] [s3fs] [info] Writing buffer of size 25418\n[2022-11-09 05:53:17.911] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.912] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.171] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.171] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.171] [Lambda worker] [info] Took 15.103966s in total\n[2022-11-09 05:53:18.171] [Lambda worker] [info] Paths rows took: normal: 8914 general: 6578 interpreter: 57922 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:2952790016-3221225472"]},{"container":{"reused":true,"requestId":"73da005f-80f6-42bf-8cfd-f11dac12edd6","uuid":"5d36bc0b-3f9e-4f38-871a-201cd6fd27b3","msRemaining":583788,"requestsServed":2,"startTimestamp":1667973147525176098,"deadlineTimestamp":1667973808963000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.982] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.015] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.038] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.038] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.038] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:5100273664-5368709120\n[2022-11-09 05:53:02.040] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:5100273664-5368709120\n[2022-11-09 05:53:02.041] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.112] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.117] [global] [info] retrieving pythonic sample took: 0.003758s\n[2022-11-09 05:53:02.184] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.185] [global] [info] retrieving pythonic sample took: 0.000258s\n[2022-11-09 05:53:02.195] [hyper specializer] [info] Deserialization of Code context took 0.154166s\n[2022-11-09 05:53:02.195] [hyper specializer] [info] Total Stage Decode took 0.155219s\n[2022-11-09 05:53:02.315] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:5100273664-5368709120 on 256.00 KB\n[2022-11-09 05:53:02.315] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.315] [fileinputoperator] [info] Filling sample cache for json operator took 0.120131s (1 entries, 0 rows)\n[2022-11-09 05:53:02.357] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:5100273664-5368709120 on 256.00 KB\n[2022-11-09 05:53:02.517] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:5100273664-5368709120 on 256.00 KB\n[2022-11-09 05:53:02.613] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.613] [fileinputoperator] [info] Extracting row sample took 0.297942s\n[2022-11-09 05:53:02.759] [hyper specializer] [info] sampling (setInputFiles) took 0.564641s\n[2022-11-09 05:53:02.760] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.760] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.760] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.760] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.760] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.760] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.760] [global] [warning] requested 2000 rows for sampling, but only 128 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.764] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.764] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.805] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.983] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.983] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.983] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.983] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.986] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.989] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.991] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.993] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.994] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.995] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.002] [hyper specializer] [info] generated code in 0.019388s\n[2022-11-09 05:53:03.040] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.041] [Lambda worker] [info] -- hyperspecialization took 1.002367s\n[2022-11-09 05:53:03.077] [global] [info] TransformStage - Optimization via LLVM passes took 0.036524 ms\n[2022-11-09 05:53:03.077] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.090] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.090] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.090] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.411] [Lambda worker] [info] fast path took: 5.320281s\n[2022-11-09 05:53:08.411] [Lambda worker] [info] Input rows processed: normal: 9116 unresolved: 63534\n[2022-11-09 05:53:08.411] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 63534\n[2022-11-09 05:53:08.411] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.411] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.411] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.670] [Lambda worker] [info] Compilation of slow path took 1.259327s\n[2022-11-09 05:53:13.766] [Lambda worker] [info] Resolved buffer, compiled: 3251 interpreted: 28499 unresolved: 0\n[2022-11-09 05:53:17.801] [Lambda worker] [info] Resolved buffer, compiled: 3027 interpreted: 28757 unresolved: 0\n[2022-11-09 05:53:17.807] [Lambda worker] [info] Exception resolution/slow path done. Took 9.396350s\n[2022-11-09 05:53:17.807] [Lambda worker] [info] Data processed in 14.7168s 55.30 KB (2301 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:17.807] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.807] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:17.807] [Lambda worker] [info] Writing output from 2 parts (55.30 KB, 2301 rows)\n[2022-11-09 05:53:17.807] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.807] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:17.807] [s3fs] [info] Writing buffer of size 28868\n[2022-11-09 05:53:17.807] [s3fs] [info] Writing buffer of size 27763\n[2022-11-09 05:53:17.807] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:17.807] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.174] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.174] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.174] [Lambda worker] [info] Took 15.083828s in total\n[2022-11-09 05:53:18.174] [Lambda worker] [info] Paths rows took: normal: 9116 general: 6278 interpreter: 57256 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:5100273664-5368709120"]},{"container":{"reused":true,"requestId":"51bd9242-e703-43fa-8e12-556a837b7e34","uuid":"84406d89-ecb1-442d-afc3-6c0215beb9fc","msRemaining":584341,"requestsServed":2,"startTimestamp":1667973146950880364,"deadlineTimestamp":1667973809525000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.544] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.577] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.599] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.599] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.599] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:11811160064-12079595520\n[2022-11-09 05:53:02.600] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:11811160064-12079595520\n[2022-11-09 05:53:02.601] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.671] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.675] [global] [info] retrieving pythonic sample took: 0.003651s\n[2022-11-09 05:53:02.742] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.830] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.830] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.830] [fileinputoperator] [info] Filling sample cache for json operator took 0.086687s (1 entries, 0 rows)\n[2022-11-09 05:53:02.853] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.039] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.214] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.214] [fileinputoperator] [info] Extracting row sample took 0.384464s\n[2022-11-09 05:53:03.261] [global] [info] retrieving pythonic sample took: 0.517748s\n[2022-11-09 05:53:03.271] [hyper specializer] [info] Deserialization of Code context took 0.669480s\n[2022-11-09 05:53:03.271] [hyper specializer] [info] Total Stage Decode took 0.670514s\n[2022-11-09 05:53:03.364] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:11811160064-12079595520 on 256.00 KB\n[2022-11-09 05:53:03.364] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.364] [fileinputoperator] [info] Filling sample cache for json operator took 0.063472s (1 entries, 0 rows)\n[2022-11-09 05:53:03.388] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:11811160064-12079595520 on 256.00 KB\n[2022-11-09 05:53:03.502] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:11811160064-12079595520 on 256.00 KB\n[2022-11-09 05:53:03.640] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.640] [fileinputoperator] [info] Extracting row sample took 0.275913s\n[2022-11-09 05:53:03.796] [hyper specializer] [info] sampling (setInputFiles) took 0.525109s\n[2022-11-09 05:53:03.797] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.797] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.797] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.797] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.797] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.797] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.797] [global] [warning] requested 2000 rows for sampling, but only 113 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.801] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.801] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.845] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:04.041] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:04.041] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:04.041] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:04.041] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:04.044] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:04.047] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:04.049] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:04.051] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:04.052] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:04.053] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:04.060] [hyper specializer] [info] generated code in 0.019776s\n[2022-11-09 05:53:04.101] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:04.101] [Lambda worker] [info] -- hyperspecialization took 1.501835s\n[2022-11-09 05:53:04.137] [global] [info] TransformStage - Optimization via LLVM passes took 0.035956 ms\n[2022-11-09 05:53:04.137] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:04.149] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:04.150] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:04.150] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.412] [Lambda worker] [info] fast path took: 5.262799s\n[2022-11-09 05:53:09.412] [Lambda worker] [info] Input rows processed: normal: 7546 unresolved: 55179\n[2022-11-09 05:53:09.413] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 55179\n[2022-11-09 05:53:09.413] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.413] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.413] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.628] [Lambda worker] [info] Compilation of slow path took 1.215898s\n[2022-11-09 05:53:14.407] [Lambda worker] [info] Resolved buffer, compiled: 1952 interpreted: 25954 unresolved: 0\n[2022-11-09 05:53:18.115] [Lambda worker] [info] Resolved buffer, compiled: 2134 interpreted: 25139 unresolved: 0\n[2022-11-09 05:53:18.121] [Lambda worker] [info] Exception resolution/slow path done. Took 8.708318s\n[2022-11-09 05:53:18.121] [Lambda worker] [info] Data processed in 13.9713s 22.42 KB (930 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.121] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.121] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.121] [Lambda worker] [info] Writing output from 2 parts (22.42 KB, 930 rows)\n[2022-11-09 05:53:18.121] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.121] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.121] [s3fs] [info] Writing buffer of size 11527\n[2022-11-09 05:53:18.121] [s3fs] [info] Writing buffer of size 11429\n[2022-11-09 05:53:18.121] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.121] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.182] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.182] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.182] [Lambda worker] [info] Took 14.032829s in total\n[2022-11-09 05:53:18.182] [Lambda worker] [info] Paths rows took: normal: 7546 general: 4086 interpreter: 51093 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:11811160064-12079595520"]},{"container":{"reused":true,"requestId":"3e474965-b78d-4b5f-bed1-f96a8cbcb1b2","uuid":"c3a56b1a-1a57-40c4-a6fd-156571c97f06","msRemaining":584108,"requestsServed":2,"startTimestamp":1667973147196186964,"deadlineTimestamp":1667973809336000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.356] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.390] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.413] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.413] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.413] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:6442450944-6710886400\n[2022-11-09 05:53:02.414] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:6442450944-6710886400\n[2022-11-09 05:53:02.415] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.487] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.492] [global] [info] retrieving pythonic sample took: 0.003652s\n[2022-11-09 05:53:02.559] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.560] [global] [info] retrieving pythonic sample took: 0.000272s\n[2022-11-09 05:53:02.570] [hyper specializer] [info] Deserialization of Code context took 0.154448s\n[2022-11-09 05:53:02.570] [hyper specializer] [info] Total Stage Decode took 0.155481s\n[2022-11-09 05:53:02.689] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:6442450944-6710886400 on 256.00 KB\n[2022-11-09 05:53:02.689] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.689] [fileinputoperator] [info] Filling sample cache for json operator took 0.119116s (1 entries, 0 rows)\n[2022-11-09 05:53:02.843] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:6442450944-6710886400 on 256.00 KB\n[2022-11-09 05:53:02.986] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:6442450944-6710886400 on 256.00 KB\n[2022-11-09 05:53:03.094] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.094] [fileinputoperator] [info] Extracting row sample took 0.405296s\n[2022-11-09 05:53:03.233] [hyper specializer] [info] sampling (setInputFiles) took 0.663129s\n[2022-11-09 05:53:03.233] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.233] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.233] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.233] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.233] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.233] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.233] [global] [warning] requested 2000 rows for sampling, but only 104 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.237] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.237] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.276] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.461] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.461] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.461] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.461] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.464] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.467] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.469] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.471] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.472] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.473] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.481] [hyper specializer] [info] generated code in 0.019433s\n[2022-11-09 05:53:03.516] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.516] [Lambda worker] [info] -- hyperspecialization took 1.103248s\n[2022-11-09 05:53:03.553] [global] [info] TransformStage - Optimization via LLVM passes took 0.037080 ms\n[2022-11-09 05:53:03.553] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.566] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.566] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.566] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.186] [Lambda worker] [info] fast path took: 5.619912s\n[2022-11-09 05:53:09.186] [Lambda worker] [info] Input rows processed: normal: 7419 unresolved: 56991\n[2022-11-09 05:53:09.186] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 56991\n[2022-11-09 05:53:09.186] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.186] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.186] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.408] [Lambda worker] [info] Compilation of slow path took 1.222142s\n[2022-11-09 05:53:14.355] [Lambda worker] [info] Resolved buffer, compiled: 2598 interpreted: 26312 unresolved: 0\n[2022-11-09 05:53:18.148] [Lambda worker] [info] Resolved buffer, compiled: 2960 interpreted: 25121 unresolved: 0\n[2022-11-09 05:53:18.154] [Lambda worker] [info] Exception resolution/slow path done. Took 8.968077s\n[2022-11-09 05:53:18.154] [Lambda worker] [info] Data processed in 14.5882s 32.98 KB (1369 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.154] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.154] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.154] [Lambda worker] [info] Writing output from 2 parts (32.98 KB, 1369 rows)\n[2022-11-09 05:53:18.154] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.154] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.154] [s3fs] [info] Writing buffer of size 17767\n[2022-11-09 05:53:18.154] [s3fs] [info] Writing buffer of size 16000\n[2022-11-09 05:53:18.154] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.154] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.227] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.227] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.227] [Lambda worker] [info] Took 14.661065s in total\n[2022-11-09 05:53:18.227] [Lambda worker] [info] Paths rows took: normal: 7419 general: 5558 interpreter: 51433 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:6442450944-6710886400"]},{"container":{"reused":true,"requestId":"212c5936-3a66-4200-ac1c-120ad8b9e776","uuid":"e8edc894-269d-4444-ab25-b41378ec69e3","msRemaining":583848,"requestsServed":2,"startTimestamp":1667973146927432602,"deadlineTimestamp":1667973809089000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.109] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.143] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.165] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.165] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.165] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:268435456-536870912\n[2022-11-09 05:53:02.167] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:268435456-536870912\n[2022-11-09 05:53:02.168] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.238] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.242] [global] [info] retrieving pythonic sample took: 0.003586s\n[2022-11-09 05:53:02.309] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.310] [global] [info] retrieving pythonic sample took: 0.000262s\n[2022-11-09 05:53:02.320] [hyper specializer] [info] Deserialization of Code context took 0.151971s\n[2022-11-09 05:53:02.320] [hyper specializer] [info] Total Stage Decode took 0.153030s\n[2022-11-09 05:53:02.424] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:02.424] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.424] [fileinputoperator] [info] Filling sample cache for json operator took 0.103985s (1 entries, 0 rows)\n[2022-11-09 05:53:02.460] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:02.562] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:02.650] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.650] [fileinputoperator] [info] Extracting row sample took 0.226400s\n[2022-11-09 05:53:02.786] [hyper specializer] [info] sampling (setInputFiles) took 0.465894s\n[2022-11-09 05:53:02.786] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.786] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.786] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.786] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.786] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.786] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.786] [global] [warning] requested 2000 rows for sampling, but only 118 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.790] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.790] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.829] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.994] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.994] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.994] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.995] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.997] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.000] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.002] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.004] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.005] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.006] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.013] [hyper specializer] [info] generated code in 0.018895s\n[2022-11-09 05:53:03.049] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.049] [Lambda worker] [info] -- hyperspecialization took 0.883505s\n[2022-11-09 05:53:03.085] [global] [info] TransformStage - Optimization via LLVM passes took 0.036305 ms\n[2022-11-09 05:53:03.085] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.098] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.098] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.098] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.459] [Lambda worker] [info] fast path took: 5.360981s\n[2022-11-09 05:53:08.459] [Lambda worker] [info] Input rows processed: normal: 8024 unresolved: 64806\n[2022-11-09 05:53:08.459] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 64806\n[2022-11-09 05:53:08.459] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.459] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.459] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.679] [Lambda worker] [info] Compilation of slow path took 1.219677s\n[2022-11-09 05:53:13.826] [Lambda worker] [info] Resolved buffer, compiled: 2422 interpreted: 29321 unresolved: 0\n[2022-11-09 05:53:18.156] [Lambda worker] [info] Resolved buffer, compiled: 2652 interpreted: 30411 unresolved: 0\n[2022-11-09 05:53:18.162] [Lambda worker] [info] Exception resolution/slow path done. Took 9.702514s\n[2022-11-09 05:53:18.162] [Lambda worker] [info] Data processed in 15.0637s 34.91 KB (1451 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.162] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.162] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.162] [Lambda worker] [info] Writing output from 2 parts (34.91 KB, 1451 rows)\n[2022-11-09 05:53:18.162] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.162] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.162] [s3fs] [info] Writing buffer of size 15975\n[2022-11-09 05:53:18.162] [s3fs] [info] Writing buffer of size 19774\n[2022-11-09 05:53:18.162] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.162] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.239] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.240] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.240] [Lambda worker] [info] Took 15.141363s in total\n[2022-11-09 05:53:18.240] [Lambda worker] [info] Paths rows took: normal: 8024 general: 5074 interpreter: 59732 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:268435456-536870912"]},{"container":{"reused":true,"requestId":"76993c83-f1a1-4e9a-8f9c-75a21ef52a28","uuid":"2f848193-e7e2-4f22-9a11-5726dc45b438","msRemaining":583773,"requestsServed":2,"startTimestamp":1667973146358563510,"deadlineTimestamp":1667973809030000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.050] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.083] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.105] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.105] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.105] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:6979321856-7247757312\n[2022-11-09 05:53:02.107] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:6979321856-7247757312\n[2022-11-09 05:53:02.108] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.178] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.182] [global] [info] retrieving pythonic sample took: 0.003464s\n[2022-11-09 05:53:02.249] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.316] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.316] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.316] [fileinputoperator] [info] Filling sample cache for json operator took 0.066413s (1 entries, 0 rows)\n[2022-11-09 05:53:02.344] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.498] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.675] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.675] [fileinputoperator] [info] Extracting row sample took 0.358842s\n[2022-11-09 05:53:02.721] [global] [info] retrieving pythonic sample took: 0.471986s\n[2022-11-09 05:53:02.731] [hyper specializer] [info] Deserialization of Code context took 0.623548s\n[2022-11-09 05:53:02.731] [hyper specializer] [info] Total Stage Decode took 0.624577s\n[2022-11-09 05:53:02.826] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:6979321856-7247757312 on 256.00 KB\n[2022-11-09 05:53:02.826] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.826] [fileinputoperator] [info] Filling sample cache for json operator took 0.065117s (1 entries, 0 rows)\n[2022-11-09 05:53:02.850] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:6979321856-7247757312 on 256.00 KB\n[2022-11-09 05:53:02.935] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:6979321856-7247757312 on 256.00 KB\n[2022-11-09 05:53:03.069] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.069] [fileinputoperator] [info] Extracting row sample took 0.242570s\n[2022-11-09 05:53:03.245] [hyper specializer] [info] sampling (setInputFiles) took 0.514061s\n[2022-11-09 05:53:03.246] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.246] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.246] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.246] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.246] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.246] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.246] [global] [warning] requested 2000 rows for sampling, but only 128 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.251] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.251] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.301] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.505] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.505] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.505] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.506] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.508] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.512] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.513] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.515] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.517] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.518] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.525] [hyper specializer] [info] generated code in 0.019756s\n[2022-11-09 05:53:03.571] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.571] [Lambda worker] [info] -- hyperspecialization took 1.465760s\n[2022-11-09 05:53:03.607] [global] [info] TransformStage - Optimization via LLVM passes took 0.036004 ms\n[2022-11-09 05:53:03.607] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.620] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.620] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.620] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.068] [Lambda worker] [info] fast path took: 5.448462s\n[2022-11-09 05:53:09.068] [Lambda worker] [info] Input rows processed: normal: 8680 unresolved: 61173\n[2022-11-09 05:53:09.068] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 61173\n[2022-11-09 05:53:09.068] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.068] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.068] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.285] [Lambda worker] [info] Compilation of slow path took 1.216742s\n[2022-11-09 05:53:14.165] [Lambda worker] [info] Resolved buffer, compiled: 2874 interpreted: 27815 unresolved: 0\n[2022-11-09 05:53:18.190] [Lambda worker] [info] Resolved buffer, compiled: 2584 interpreted: 27900 unresolved: 0\n[2022-11-09 05:53:18.196] [Lambda worker] [info] Exception resolution/slow path done. Took 9.128051s\n[2022-11-09 05:53:18.196] [Lambda worker] [info] Data processed in 14.5767s 31.78 KB (1329 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.196] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.196] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.196] [Lambda worker] [info] Writing output from 2 parts (31.78 KB, 1329 rows)\n[2022-11-09 05:53:18.196] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.196] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.197] [s3fs] [info] Writing buffer of size 16034\n[2022-11-09 05:53:18.197] [s3fs] [info] Writing buffer of size 16513\n[2022-11-09 05:53:18.197] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.197] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.255] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.256] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.256] [Lambda worker] [info] Took 14.635805s in total\n[2022-11-09 05:53:18.256] [Lambda worker] [info] Paths rows took: normal: 8680 general: 5458 interpreter: 55715 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:6979321856-7247757312"]},{"container":{"reused":true,"requestId":"247d9873-2429-4bf5-9438-15d3be2f8ffc","uuid":"9374d728-a3bf-4435-b81f-38e580f3ca7e","msRemaining":583098,"requestsServed":2,"startTimestamp":1667973146032291213,"deadlineTimestamp":1667973808360000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.378] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.412] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.435] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.435] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.435] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2015-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:01.437] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2015-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:01.438] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.509] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.514] [global] [info] retrieving pythonic sample took: 0.003773s\n[2022-11-09 05:53:01.581] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.582] [global] [info] retrieving pythonic sample took: 0.000256s\n[2022-11-09 05:53:01.592] [hyper specializer] [info] Deserialization of Code context took 0.154647s\n[2022-11-09 05:53:01.592] [hyper specializer] [info] Total Stage Decode took 0.155696s\n[2022-11-09 05:53:01.675] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:01.675] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.675] [fileinputoperator] [info] Filling sample cache for json operator took 0.082697s (1 entries, 0 rows)\n[2022-11-09 05:53:01.720] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:01.863] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:01.998] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.998] [fileinputoperator] [info] Extracting row sample took 0.322961s\n[2022-11-09 05:53:02.172] [hyper specializer] [info] sampling (setInputFiles) took 0.579429s\n[2022-11-09 05:53:02.172] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.172] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.172] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.172] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.172] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.172] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.172] [global] [warning] requested 2000 rows for sampling, but only 197 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.179] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.179] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.228] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.390] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.390] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.390] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.390] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.393] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.396] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.398] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.400] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.401] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.402] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.410] [hyper specializer] [info] generated code in 0.020074s\n[2022-11-09 05:53:02.456] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.456] [Lambda worker] [info] -- hyperspecialization took 1.020389s\n[2022-11-09 05:53:02.493] [global] [info] TransformStage - Optimization via LLVM passes took 0.037132 ms\n[2022-11-09 05:53:02.493] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.506] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.506] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.506] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.934] [Lambda worker] [info] fast path took: 5.427440s\n[2022-11-09 05:53:07.934] [Lambda worker] [info] Input rows processed: normal: 12111 unresolved: 77863\n[2022-11-09 05:53:07.934] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 77863\n[2022-11-09 05:53:07.934] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.934] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.934] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.194] [Lambda worker] [info] Compilation of slow path took 1.260476s\n[2022-11-09 05:53:13.604] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 38423 unresolved: 0\n[2022-11-09 05:53:18.167] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 39440 unresolved: 0\n[2022-11-09 05:53:18.174] [Lambda worker] [info] Exception resolution/slow path done. Took 10.239982s\n[2022-11-09 05:53:18.174] [Lambda worker] [info] Data processed in 15.6676s 60.82 KB (2629 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.174] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:18.174] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.174] [Lambda worker] [info] Writing output from 2 parts (60.82 KB, 2629 rows)\n[2022-11-09 05:53:18.174] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:18.174] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.174] [s3fs] [info] Writing buffer of size 32138\n[2022-11-09 05:53:18.174] [s3fs] [info] Writing buffer of size 30140\n[2022-11-09 05:53:18.174] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:18.174] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.261] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.261] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.261] [Lambda worker] [info] Took 15.755339s in total\n[2022-11-09 05:53:18.261] [Lambda worker] [info] Paths rows took: normal: 12111 general: 0 interpreter: 77863 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2015-10-15.json:1073741824-1342177280"]},{"container":{"reused":true,"requestId":"40286c50-9c48-42b3-ac81-a40a1382c36c","uuid":"a1fc7d8a-5c8f-4065-8384-ffdcb54ba91b","msRemaining":583306,"requestsServed":2,"startTimestamp":1667973146178473054,"deadlineTimestamp":1667973808626000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.646] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.678] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.701] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.701] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.701] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:01.702] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:01.703] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.773] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.777] [global] [info] retrieving pythonic sample took: 0.003485s\n[2022-11-09 05:53:01.843] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.845] [global] [info] retrieving pythonic sample took: 0.000252s\n[2022-11-09 05:53:01.854] [hyper specializer] [info] Deserialization of Code context took 0.150863s\n[2022-11-09 05:53:01.854] [hyper specializer] [info] Total Stage Decode took 0.151900s\n[2022-11-09 05:53:01.928] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:01.928] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.928] [fileinputoperator] [info] Filling sample cache for json operator took 0.074140s (1 entries, 0 rows)\n[2022-11-09 05:53:01.957] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.056] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.191] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.191] [fileinputoperator] [info] Extracting row sample took 0.262774s\n[2022-11-09 05:53:02.344] [hyper specializer] [info] sampling (setInputFiles) took 0.490204s\n[2022-11-09 05:53:02.345] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.345] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.345] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.345] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.345] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.345] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.345] [global] [warning] requested 2000 rows for sampling, but only 149 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.350] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.350] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.393] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.553] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.553] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.553] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.554] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.556] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.559] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.561] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.563] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.564] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.565] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.573] [hyper specializer] [info] generated code in 0.019252s\n[2022-11-09 05:53:02.612] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.612] [Lambda worker] [info] -- hyperspecialization took 0.911142s\n[2022-11-09 05:53:02.649] [global] [info] TransformStage - Optimization via LLVM passes took 0.036389 ms\n[2022-11-09 05:53:02.649] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.661] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.662] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.662] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.934] [Lambda worker] [info] fast path took: 5.272589s\n[2022-11-09 05:53:07.934] [Lambda worker] [info] Input rows processed: normal: 10007 unresolved: 73399\n[2022-11-09 05:53:07.934] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 73399\n[2022-11-09 05:53:07.934] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.934] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.934] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.149] [Lambda worker] [info] Compilation of slow path took 1.214323s\n[2022-11-09 05:53:13.761] [Lambda worker] [info] Resolved buffer, compiled: 3654 interpreted: 33415 unresolved: 0\n[2022-11-09 05:53:18.250] [Lambda worker] [info] Resolved buffer, compiled: 4026 interpreted: 32304 unresolved: 0\n[2022-11-09 05:53:18.256] [Lambda worker] [info] Exception resolution/slow path done. Took 10.321789s\n[2022-11-09 05:53:18.256] [Lambda worker] [info] Data processed in 15.5945s 61.25 KB (2580 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.256] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.256] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.256] [Lambda worker] [info] Writing output from 2 parts (61.25 KB, 2580 rows)\n[2022-11-09 05:53:18.256] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.256] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.256] [s3fs] [info] Writing buffer of size 33944\n[2022-11-09 05:53:18.256] [s3fs] [info] Writing buffer of size 28771\n[2022-11-09 05:53:18.256] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.256] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.319] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.319] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.319] [Lambda worker] [info] Took 15.657336s in total\n[2022-11-09 05:53:18.319] [Lambda worker] [info] Paths rows took: normal: 10007 general: 7680 interpreter: 65719 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:1342177280-1610612736"]},{"container":{"reused":true,"requestId":"7ebf0edf-cbef-48d6-ac02-cdd71dbeeea5","uuid":"8133ca9c-6a25-49d6-ad4d-58f34990c1b0","msRemaining":584094,"requestsServed":2,"startTimestamp":1667973146616943056,"deadlineTimestamp":1667973809444000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.463] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.496] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.518] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.518] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.518] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:9663676416-9932111872\n[2022-11-09 05:53:02.520] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:9663676416-9932111872\n[2022-11-09 05:53:02.521] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.591] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.596] [global] [info] retrieving pythonic sample took: 0.004651s\n[2022-11-09 05:53:02.664] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.741] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.741] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.741] [fileinputoperator] [info] Filling sample cache for json operator took 0.076148s (1 entries, 0 rows)\n[2022-11-09 05:53:02.768] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.922] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.099] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.099] [fileinputoperator] [info] Extracting row sample took 0.358326s\n[2022-11-09 05:53:03.147] [global] [info] retrieving pythonic sample took: 0.481604s\n[2022-11-09 05:53:03.157] [hyper specializer] [info] Deserialization of Code context took 0.635760s\n[2022-11-09 05:53:03.157] [hyper specializer] [info] Total Stage Decode took 0.636823s\n[2022-11-09 05:53:03.264] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:9663676416-9932111872 on 256.00 KB\n[2022-11-09 05:53:03.264] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.264] [fileinputoperator] [info] Filling sample cache for json operator took 0.077952s (1 entries, 0 rows)\n[2022-11-09 05:53:03.311] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:9663676416-9932111872 on 256.00 KB\n[2022-11-09 05:53:03.381] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:9663676416-9932111872 on 256.00 KB\n[2022-11-09 05:53:03.482] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.482] [fileinputoperator] [info] Extracting row sample took 0.218241s\n[2022-11-09 05:53:03.622] [hyper specializer] [info] sampling (setInputFiles) took 0.465098s\n[2022-11-09 05:53:03.622] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.622] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.622] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.622] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.622] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.622] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.622] [global] [warning] requested 2000 rows for sampling, but only 109 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.627] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.627] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.666] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.897] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.897] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.897] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.897] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.900] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.903] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.905] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.907] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.908] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.909] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.916] [hyper specializer] [info] generated code in 0.019580s\n[2022-11-09 05:53:03.952] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.952] [Lambda worker] [info] -- hyperspecialization took 1.433891s\n[2022-11-09 05:53:03.989] [global] [info] TransformStage - Optimization via LLVM passes took 0.036327 ms\n[2022-11-09 05:53:03.989] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:04.001] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:04.001] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:04.001] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.499] [Lambda worker] [info] fast path took: 5.497333s\n[2022-11-09 05:53:09.499] [Lambda worker] [info] Input rows processed: normal: 7095 unresolved: 55066\n[2022-11-09 05:53:09.499] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 55066\n[2022-11-09 05:53:09.499] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.499] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.499] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.725] [Lambda worker] [info] Compilation of slow path took 1.226204s\n[2022-11-09 05:53:14.490] [Lambda worker] [info] Resolved buffer, compiled: 2127 interpreted: 25657 unresolved: 0\n[2022-11-09 05:53:18.244] [Lambda worker] [info] Resolved buffer, compiled: 2169 interpreted: 25113 unresolved: 0\n[2022-11-09 05:53:18.250] [Lambda worker] [info] Exception resolution/slow path done. Took 8.751522s\n[2022-11-09 05:53:18.251] [Lambda worker] [info] Data processed in 14.2491s 27.38 KB (1138 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.251] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.251] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.251] [Lambda worker] [info] Writing output from 2 parts (27.38 KB, 1138 rows)\n[2022-11-09 05:53:18.251] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.251] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.251] [s3fs] [info] Writing buffer of size 13752\n[2022-11-09 05:53:18.251] [s3fs] [info] Writing buffer of size 14289\n[2022-11-09 05:53:18.251] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.251] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.348] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.348] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.349] [Lambda worker] [info] Took 14.347051s in total\n[2022-11-09 05:53:18.349] [Lambda worker] [info] Paths rows took: normal: 7095 general: 4296 interpreter: 50770 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:9663676416-9932111872"]},{"container":{"reused":true,"requestId":"2346a26a-527e-4d40-adf3-6ae55c8c3709","uuid":"340dcb5d-a230-4464-8227-2c0ff689954b","msRemaining":583556,"requestsServed":2,"startTimestamp":1667973146632803335,"deadlineTimestamp":1667973808923000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.942] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.977] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.000] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.000] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.000] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:4026531840-4294967296\n[2022-11-09 05:53:02.001] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:4026531840-4294967296\n[2022-11-09 05:53:02.002] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.073] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.078] [global] [info] retrieving pythonic sample took: 0.003679s\n[2022-11-09 05:53:02.145] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.237] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.237] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.237] [fileinputoperator] [info] Filling sample cache for json operator took 0.091044s (1 entries, 0 rows)\n[2022-11-09 05:53:02.268] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.423] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.604] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.604] [fileinputoperator] [info] Extracting row sample took 0.366795s\n[2022-11-09 05:53:02.653] [global] [info] retrieving pythonic sample took: 0.506517s\n[2022-11-09 05:53:02.663] [hyper specializer] [info] Deserialization of Code context took 0.660669s\n[2022-11-09 05:53:02.663] [hyper specializer] [info] Total Stage Decode took 0.661735s\n[2022-11-09 05:53:02.737] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:4026531840-4294967296 on 256.00 KB\n[2022-11-09 05:53:02.737] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.737] [fileinputoperator] [info] Filling sample cache for json operator took 0.044688s (1 entries, 0 rows)\n[2022-11-09 05:53:02.766] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:4026531840-4294967296 on 256.00 KB\n[2022-11-09 05:53:02.877] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:4026531840-4294967296 on 256.00 KB\n[2022-11-09 05:53:02.996] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.996] [fileinputoperator] [info] Extracting row sample took 0.258923s\n[2022-11-09 05:53:03.163] [hyper specializer] [info] sampling (setInputFiles) took 0.500624s\n[2022-11-09 05:53:03.164] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.164] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.164] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.164] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.164] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.164] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.164] [global] [warning] requested 2000 rows for sampling, but only 124 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.169] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.169] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.216] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.416] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.416] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.416] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.416] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.419] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.423] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.425] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.427] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.428] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.430] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.438] [hyper specializer] [info] generated code in 0.022101s\n[2022-11-09 05:53:03.482] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.482] [Lambda worker] [info] -- hyperspecialization took 1.482620s\n[2022-11-09 05:53:03.519] [global] [info] TransformStage - Optimization via LLVM passes took 0.036787 ms\n[2022-11-09 05:53:03.519] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.532] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.532] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.533] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.815] [Lambda worker] [info] fast path took: 5.282284s\n[2022-11-09 05:53:08.815] [Lambda worker] [info] Input rows processed: normal: 9327 unresolved: 61959\n[2022-11-09 05:53:08.815] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 61959\n[2022-11-09 05:53:08.815] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.815] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.815] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.066] [Lambda worker] [info] Compilation of slow path took 1.251537s\n[2022-11-09 05:53:14.063] [Lambda worker] [info] Resolved buffer, compiled: 3165 interpreted: 27573 unresolved: 0\n[2022-11-09 05:53:18.261] [Lambda worker] [info] Resolved buffer, compiled: 3264 interpreted: 27957 unresolved: 0\n[2022-11-09 05:53:18.268] [Lambda worker] [info] Exception resolution/slow path done. Took 9.452769s\n[2022-11-09 05:53:18.268] [Lambda worker] [info] Data processed in 14.7352s 48.68 KB (2034 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.268] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.268] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.268] [Lambda worker] [info] Writing output from 2 parts (48.68 KB, 2034 rows)\n[2022-11-09 05:53:18.268] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.268] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.268] [s3fs] [info] Writing buffer of size 26752\n[2022-11-09 05:53:18.268] [s3fs] [info] Writing buffer of size 23101\n[2022-11-09 05:53:18.268] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.268] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.366] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.366] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.366] [Lambda worker] [info] Took 14.833756s in total\n[2022-11-09 05:53:18.366] [Lambda worker] [info] Paths rows took: normal: 9327 general: 6429 interpreter: 55530 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:4026531840-4294967296"]},{"container":{"reused":true,"requestId":"3bf0ab57-61cc-4374-b93c-0ef70deabf45","uuid":"9779bba0-73a7-4abc-8ab0-cb60066c96c8","msRemaining":583230,"requestsServed":2,"startTimestamp":1667973147254882056,"deadlineTimestamp":1667973808634000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.653] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.691] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.715] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.717] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.717] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:1610612736-1879048192\n[2022-11-09 05:53:01.719] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:1610612736-1879048192\n[2022-11-09 05:53:01.720] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.791] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.795] [global] [info] retrieving pythonic sample took: 0.003557s\n[2022-11-09 05:53:01.863] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.864] [global] [info] retrieving pythonic sample took: 0.000263s\n[2022-11-09 05:53:01.874] [hyper specializer] [info] Deserialization of Code context took 0.154515s\n[2022-11-09 05:53:01.874] [hyper specializer] [info] Total Stage Decode took 0.155554s\n[2022-11-09 05:53:02.009] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:02.010] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.010] [fileinputoperator] [info] Filling sample cache for json operator took 0.135492s (1 entries, 0 rows)\n[2022-11-09 05:53:02.044] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:02.127] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:02.259] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.259] [fileinputoperator] [info] Extracting row sample took 0.248843s\n[2022-11-09 05:53:02.423] [hyper specializer] [info] sampling (setInputFiles) took 0.549040s\n[2022-11-09 05:53:02.424] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.424] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.424] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.424] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.424] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.424] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.424] [global] [warning] requested 2000 rows for sampling, but only 195 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.430] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.430] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.477] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.646] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.646] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.646] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.646] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.649] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.652] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.654] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.656] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.657] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.658] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.666] [hyper specializer] [info] generated code in 0.019790s\n[2022-11-09 05:53:02.709] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.709] [Lambda worker] [info] -- hyperspecialization took 0.991927s\n[2022-11-09 05:53:02.746] [global] [info] TransformStage - Optimization via LLVM passes took 0.036983 ms\n[2022-11-09 05:53:02.746] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.759] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.760] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.760] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.840] [Lambda worker] [info] fast path took: 5.080062s\n[2022-11-09 05:53:07.840] [Lambda worker] [info] Input rows processed: normal: 10838 unresolved: 72435\n[2022-11-09 05:53:07.840] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 72435\n[2022-11-09 05:53:07.840] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.840] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.840] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.092] [Lambda worker] [info] Compilation of slow path took 1.252668s\n[2022-11-09 05:53:13.661] [Lambda worker] [info] Resolved buffer, compiled: 3765 interpreted: 33184 unresolved: 0\n[2022-11-09 05:53:18.342] [Lambda worker] [info] Resolved buffer, compiled: 3239 interpreted: 32247 unresolved: 0\n[2022-11-09 05:53:18.348] [Lambda worker] [info] Exception resolution/slow path done. Took 10.507738s\n[2022-11-09 05:53:18.348] [Lambda worker] [info] Data processed in 15.588s 53.97 KB (2274 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.348] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.348] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.348] [Lambda worker] [info] Writing output from 2 parts (53.97 KB, 2274 rows)\n[2022-11-09 05:53:18.348] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.348] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.348] [s3fs] [info] Writing buffer of size 29320\n[2022-11-09 05:53:18.348] [s3fs] [info] Writing buffer of size 25944\n[2022-11-09 05:53:18.348] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.348] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.402] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.403] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.403] [Lambda worker] [info] Took 15.642958s in total\n[2022-11-09 05:53:18.403] [Lambda worker] [info] Paths rows took: normal: 10838 general: 7004 interpreter: 65431 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:1610612736-1879048192"]},{"container":{"reused":true,"requestId":"710d10ef-21f8-46d4-b15e-83f53d5d84f4","uuid":"fdc745af-8929-4b53-801c-3345c49cdd43","msRemaining":583736,"requestsServed":2,"startTimestamp":1667973147472667398,"deadlineTimestamp":1667973809140000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.161] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.195] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.217] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.217] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.217] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:1610612736-1879048192\n[2022-11-09 05:53:02.218] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:1610612736-1879048192\n[2022-11-09 05:53:02.219] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.290] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.295] [global] [info] retrieving pythonic sample took: 0.003669s\n[2022-11-09 05:53:02.361] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.431] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.431] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.431] [fileinputoperator] [info] Filling sample cache for json operator took 0.068966s (1 entries, 0 rows)\n[2022-11-09 05:53:02.463] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.618] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.792] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.793] [fileinputoperator] [info] Extracting row sample took 0.361239s\n[2022-11-09 05:53:02.840] [global] [info] retrieving pythonic sample took: 0.477319s\n[2022-11-09 05:53:02.849] [hyper specializer] [info] Deserialization of Code context took 0.629968s\n[2022-11-09 05:53:02.849] [hyper specializer] [info] Total Stage Decode took 0.631002s\n[2022-11-09 05:53:02.929] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:02.929] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.929] [fileinputoperator] [info] Filling sample cache for json operator took 0.050687s (1 entries, 0 rows)\n[2022-11-09 05:53:02.991] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:03.090] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:03.248] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.248] [fileinputoperator] [info] Extracting row sample took 0.318785s\n[2022-11-09 05:53:03.410] [hyper specializer] [info] sampling (setInputFiles) took 0.560120s\n[2022-11-09 05:53:03.410] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.410] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.410] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.410] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.410] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.410] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.410] [global] [warning] requested 2000 rows for sampling, but only 132 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.416] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.416] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.461] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.650] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.650] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.650] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.650] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.653] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.656] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.658] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.660] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.661] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.662] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.669] [hyper specializer] [info] generated code in 0.019083s\n[2022-11-09 05:53:03.711] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.711] [Lambda worker] [info] -- hyperspecialization took 1.494318s\n[2022-11-09 05:53:03.748] [global] [info] TransformStage - Optimization via LLVM passes took 0.036290 ms\n[2022-11-09 05:53:03.748] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.760] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.760] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.760] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.229] [Lambda worker] [info] fast path took: 5.468408s\n[2022-11-09 05:53:09.229] [Lambda worker] [info] Input rows processed: normal: 7333 unresolved: 61560\n[2022-11-09 05:53:09.229] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 61560\n[2022-11-09 05:53:09.229] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.229] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.229] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.452] [Lambda worker] [info] Compilation of slow path took 1.222664s\n[2022-11-09 05:53:14.613] [Lambda worker] [info] Resolved buffer, compiled: 3376 interpreted: 30151 unresolved: 0\n[2022-11-09 05:53:18.336] [Lambda worker] [info] Resolved buffer, compiled: 2600 interpreted: 25433 unresolved: 0\n[2022-11-09 05:53:18.342] [Lambda worker] [info] Exception resolution/slow path done. Took 9.113078s\n[2022-11-09 05:53:18.342] [Lambda worker] [info] Data processed in 14.5817s 33.17 KB (1379 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.342] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.342] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.342] [Lambda worker] [info] Writing output from 2 parts (33.17 KB, 1379 rows)\n[2022-11-09 05:53:18.342] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.342] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.342] [s3fs] [info] Writing buffer of size 18596\n[2022-11-09 05:53:18.342] [s3fs] [info] Writing buffer of size 15374\n[2022-11-09 05:53:18.342] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.342] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.403] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.403] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.403] [Lambda worker] [info] Took 14.642561s in total\n[2022-11-09 05:53:18.403] [Lambda worker] [info] Paths rows took: normal: 7333 general: 5976 interpreter: 55584 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:1610612736-1879048192"]},{"container":{"reused":true,"requestId":"9c3ca78c-07c9-4a51-9dff-e730747dc77d","uuid":"5e02e967-b178-4830-a703-52688bfd635b","msRemaining":583662,"requestsServed":2,"startTimestamp":1667973146899369314,"deadlineTimestamp":1667973809067000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.109] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.134] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.134] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.134] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:0-268435456\n[2022-11-09 05:53:02.136] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:0-268435456\n[2022-11-09 05:53:02.137] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.208] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.212] [global] [info] retrieving pythonic sample took: 0.003654s\n[2022-11-09 05:53:02.280] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.281] [global] [info] retrieving pythonic sample took: 0.000257s\n[2022-11-09 05:53:02.290] [hyper specializer] [info] Deserialization of Code context took 0.153772s\n[2022-11-09 05:53:02.290] [hyper specializer] [info] Total Stage Decode took 0.154809s\n[2022-11-09 05:53:02.385] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:02.385] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.385] [fileinputoperator] [info] Filling sample cache for json operator took 0.094327s (1 entries, 0 rows)\n[2022-11-09 05:53:02.443] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:02.564] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:02.711] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.711] [fileinputoperator] [info] Extracting row sample took 0.326599s\n[2022-11-09 05:53:02.860] [hyper specializer] [info] sampling (setInputFiles) took 0.569474s\n[2022-11-09 05:53:02.860] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.860] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.861] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.861] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.861] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.861] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.861] [global] [warning] requested 2000 rows for sampling, but only 131 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.865] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.865] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.907] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.085] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.085] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.085] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.085] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.088] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.091] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.093] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.095] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.097] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.102] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.110] [hyper specializer] [info] generated code in 0.024486s\n[2022-11-09 05:53:03.148] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.148] [Lambda worker] [info] -- hyperspecialization took 1.014359s\n[2022-11-09 05:53:03.187] [global] [info] TransformStage - Optimization via LLVM passes took 0.038593 ms\n[2022-11-09 05:53:03.187] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.200] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.200] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.200] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.767] [Lambda worker] [info] fast path took: 5.566117s\n[2022-11-09 05:53:08.767] [Lambda worker] [info] Input rows processed: normal: 7210 unresolved: 57537\n[2022-11-09 05:53:08.767] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 57537\n[2022-11-09 05:53:08.767] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.767] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.767] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.023] [Lambda worker] [info] Compilation of slow path took 1.256054s\n[2022-11-09 05:53:13.995] [Lambda worker] [info] Resolved buffer, compiled: 2594 interpreted: 25873 unresolved: 0\n[2022-11-09 05:53:18.057] [Lambda worker] [info] Resolved buffer, compiled: 2173 interpreted: 26897 unresolved: 0\n[2022-11-09 05:53:18.062] [Lambda worker] [info] Exception resolution/slow path done. Took 9.295689s\n[2022-11-09 05:53:18.062] [Lambda worker] [info] Data processed in 14.862s 25.64 KB (1063 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.062] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.062] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.063] [Lambda worker] [info] Writing output from 2 parts (25.64 KB, 1063 rows)\n[2022-11-09 05:53:18.063] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.063] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.063] [s3fs] [info] Writing buffer of size 11649\n[2022-11-09 05:53:18.063] [s3fs] [info] Writing buffer of size 14611\n[2022-11-09 05:53:18.063] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.063] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.404] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.404] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.404] [Lambda worker] [info] Took 15.203617s in total\n[2022-11-09 05:53:18.404] [Lambda worker] [info] Paths rows took: normal: 7210 general: 4767 interpreter: 52770 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:0-268435456"]},{"container":{"reused":true,"requestId":"ca6085e6-4bd8-454f-9e6c-2caf4442b919","uuid":"4a1903c3-435c-480e-be7b-acb6d310d80e","msRemaining":583801,"requestsServed":2,"startTimestamp":1667973147040472916,"deadlineTimestamp":1667973809238000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.259] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.294] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.318] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.318] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.318] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:4294967296-4563402752\n[2022-11-09 05:53:02.320] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:4294967296-4563402752\n[2022-11-09 05:53:02.321] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.392] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.397] [global] [info] retrieving pythonic sample took: 0.003622s\n[2022-11-09 05:53:02.464] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.553] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.553] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.553] [fileinputoperator] [info] Filling sample cache for json operator took 0.088461s (1 entries, 0 rows)\n[2022-11-09 05:53:02.628] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.787] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.964] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.964] [fileinputoperator] [info] Extracting row sample took 0.411457s\n[2022-11-09 05:53:03.013] [global] [info] retrieving pythonic sample took: 0.548358s\n[2022-11-09 05:53:03.023] [hyper specializer] [info] Deserialization of Code context took 0.701939s\n[2022-11-09 05:53:03.023] [hyper specializer] [info] Total Stage Decode took 0.703001s\n[2022-11-09 05:53:03.121] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:4294967296-4563402752 on 256.00 KB\n[2022-11-09 05:53:03.121] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.121] [fileinputoperator] [info] Filling sample cache for json operator took 0.069023s (1 entries, 0 rows)\n[2022-11-09 05:53:03.157] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:4294967296-4563402752 on 256.00 KB\n[2022-11-09 05:53:03.285] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:4294967296-4563402752 on 256.00 KB\n[2022-11-09 05:53:03.433] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.433] [fileinputoperator] [info] Extracting row sample took 0.312077s\n[2022-11-09 05:53:03.594] [hyper specializer] [info] sampling (setInputFiles) took 0.571078s\n[2022-11-09 05:53:03.594] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.594] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.594] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.594] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.594] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.594] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.594] [global] [warning] requested 2000 rows for sampling, but only 132 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.600] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.600] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.645] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.822] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.822] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.822] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.822] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.825] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.828] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.830] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.832] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.833] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.835] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.842] [hyper specializer] [info] generated code in 0.019536s\n[2022-11-09 05:53:03.883] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.883] [Lambda worker] [info] -- hyperspecialization took 1.564860s\n[2022-11-09 05:53:03.919] [global] [info] TransformStage - Optimization via LLVM passes took 0.035828 ms\n[2022-11-09 05:53:03.919] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.932] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.932] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.932] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.469] [Lambda worker] [info] fast path took: 5.537129s\n[2022-11-09 05:53:09.469] [Lambda worker] [info] Input rows processed: normal: 7153 unresolved: 56560\n[2022-11-09 05:53:09.469] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 56560\n[2022-11-09 05:53:09.469] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.469] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.469] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.683] [Lambda worker] [info] Compilation of slow path took 1.214045s\n[2022-11-09 05:53:14.589] [Lambda worker] [info] Resolved buffer, compiled: 2679 interpreted: 26336 unresolved: 0\n[2022-11-09 05:53:18.373] [Lambda worker] [info] Resolved buffer, compiled: 2412 interpreted: 25133 unresolved: 0\n[2022-11-09 05:53:18.379] [Lambda worker] [info] Exception resolution/slow path done. Took 8.909550s\n[2022-11-09 05:53:18.379] [Lambda worker] [info] Data processed in 14.4469s 36.87 KB (1533 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.379] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.379] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.379] [Lambda worker] [info] Writing output from 2 parts (36.87 KB, 1533 rows)\n[2022-11-09 05:53:18.379] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.379] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.379] [s3fs] [info] Writing buffer of size 20424\n[2022-11-09 05:53:18.379] [s3fs] [info] Writing buffer of size 17332\n[2022-11-09 05:53:18.379] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.379] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.436] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.436] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.436] [Lambda worker] [info] Took 14.503744s in total\n[2022-11-09 05:53:18.436] [Lambda worker] [info] Paths rows took: normal: 7153 general: 5091 interpreter: 51469 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:4294967296-4563402752"]},{"container":{"reused":true,"requestId":"a7a4eb0e-5ec7-4405-8a3a-caf9f75d75bd","uuid":"c7b0e0a5-b7da-46c4-b9c1-183a98348752","msRemaining":584201,"requestsServed":2,"startTimestamp":1667973147424777511,"deadlineTimestamp":1667973809642000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.661] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.688] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.711] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.711] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.711] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2021-10-15.json:2147483648-2415919104\n[2022-11-09 05:53:02.712] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2021-10-15.json:2147483648-2415919104\n[2022-11-09 05:53:02.713] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.786] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.791] [global] [info] retrieving pythonic sample took: 0.003963s\n[2022-11-09 05:53:02.858] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.860] [global] [info] retrieving pythonic sample took: 0.000266s\n[2022-11-09 05:53:02.869] [hyper specializer] [info] Deserialization of Code context took 0.156062s\n[2022-11-09 05:53:02.869] [hyper specializer] [info] Total Stage Decode took 0.157114s\n[2022-11-09 05:53:02.947] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:02.947] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.947] [fileinputoperator] [info] Filling sample cache for json operator took 0.077567s (1 entries, 0 rows)\n[2022-11-09 05:53:03.035] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:03.111] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:03.240] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.240] [fileinputoperator] [info] Extracting row sample took 0.292917s\n[2022-11-09 05:53:03.405] [hyper specializer] [info] sampling (setInputFiles) took 0.536175s\n[2022-11-09 05:53:03.406] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.406] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.406] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.406] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.406] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.406] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.406] [global] [warning] requested 2000 rows for sampling, but only 161 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.411] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.411] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.453] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.609] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.609] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.609] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.609] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.613] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.616] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.617] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.619] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.620] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.621] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.629] [hyper specializer] [info] generated code in 0.019255s\n[2022-11-09 05:53:03.664] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.664] [Lambda worker] [info] -- hyperspecialization took 0.953897s\n[2022-11-09 05:53:03.702] [global] [info] TransformStage - Optimization via LLVM passes took 0.037725 ms\n[2022-11-09 05:53:03.702] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.715] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.715] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.715] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.087] [Lambda worker] [info] fast path took: 5.371401s\n[2022-11-09 05:53:09.087] [Lambda worker] [info] Input rows processed: normal: 9454 unresolved: 64405\n[2022-11-09 05:53:09.087] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 64405\n[2022-11-09 05:53:09.087] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.087] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.087] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.337] [Lambda worker] [info] Compilation of slow path took 1.250510s\n[2022-11-09 05:53:14.276] [Lambda worker] [info] Resolved buffer, compiled: 4729 interpreted: 27223 unresolved: 0\n[2022-11-09 05:53:18.357] [Lambda worker] [info] Resolved buffer, compiled: 4850 interpreted: 27603 unresolved: 0\n[2022-11-09 05:53:18.363] [Lambda worker] [info] Exception resolution/slow path done. Took 9.275878s\n[2022-11-09 05:53:18.363] [Lambda worker] [info] Data processed in 14.6475s 36.95 KB (1532 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.363] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.363] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.363] [Lambda worker] [info] Writing output from 2 parts (36.95 KB, 1532 rows)\n[2022-11-09 05:53:18.363] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.363] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.363] [s3fs] [info] Writing buffer of size 19503\n[2022-11-09 05:53:18.363] [s3fs] [info] Writing buffer of size 18330\n[2022-11-09 05:53:18.363] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.363] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.440] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.440] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.440] [Lambda worker] [info] Took 14.724455s in total\n[2022-11-09 05:53:18.440] [Lambda worker] [info] Paths rows took: normal: 9454 general: 9579 interpreter: 54826 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2021-10-15.json:2147483648-2415919104"]},{"container":{"reused":true,"requestId":"769322bd-454f-4302-bdc5-827d7ac38129","uuid":"c76a74ec-0913-45c6-b1c8-1762eaa58004","msRemaining":583176,"requestsServed":2,"startTimestamp":1667973147273389002,"deadlineTimestamp":1667973808667000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.686] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.719] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.741] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.741] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.741] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:2415919104-2684354560\n[2022-11-09 05:53:01.743] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:2415919104-2684354560\n[2022-11-09 05:53:01.744] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.814] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.818] [global] [info] retrieving pythonic sample took: 0.003506s\n[2022-11-09 05:53:01.885] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.991] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.991] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.991] [fileinputoperator] [info] Filling sample cache for json operator took 0.105187s (1 entries, 0 rows)\n[2022-11-09 05:53:02.018] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.168] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.345] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.345] [fileinputoperator] [info] Extracting row sample took 0.353895s\n[2022-11-09 05:53:02.392] [global] [info] retrieving pythonic sample took: 0.506592s\n[2022-11-09 05:53:02.402] [hyper specializer] [info] Deserialization of Code context took 0.658335s\n[2022-11-09 05:53:02.402] [hyper specializer] [info] Total Stage Decode took 0.659391s\n[2022-11-09 05:53:02.487] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:2415919104-2684354560 on 256.00 KB\n[2022-11-09 05:53:02.487] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.487] [fileinputoperator] [info] Filling sample cache for json operator took 0.055834s (1 entries, 0 rows)\n[2022-11-09 05:53:02.525] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:2415919104-2684354560 on 256.00 KB\n[2022-11-09 05:53:02.612] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:2415919104-2684354560 on 256.00 KB\n[2022-11-09 05:53:02.765] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.765] [fileinputoperator] [info] Extracting row sample took 0.277420s\n[2022-11-09 05:53:02.913] [hyper specializer] [info] sampling (setInputFiles) took 0.510837s\n[2022-11-09 05:53:02.913] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.914] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.914] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.914] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.914] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.914] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.914] [global] [warning] requested 2000 rows for sampling, but only 140 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.919] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.919] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.961] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.132] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.132] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.132] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.132] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.135] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.137] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.139] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.141] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.142] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.143] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.151] [hyper specializer] [info] generated code in 0.018972s\n[2022-11-09 05:53:03.189] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.189] [Lambda worker] [info] -- hyperspecialization took 1.447974s\n[2022-11-09 05:53:03.225] [global] [info] TransformStage - Optimization via LLVM passes took 0.035864 ms\n[2022-11-09 05:53:03.225] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.238] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.238] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.238] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.527] [Lambda worker] [info] fast path took: 5.288887s\n[2022-11-09 05:53:08.527] [Lambda worker] [info] Input rows processed: normal: 9773 unresolved: 71327\n[2022-11-09 05:53:08.527] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 71327\n[2022-11-09 05:53:08.527] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.527] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.527] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.736] [Lambda worker] [info] Compilation of slow path took 1.209369s\n[2022-11-09 05:53:14.135] [Lambda worker] [info] Resolved buffer, compiled: 3703 interpreted: 32826 unresolved: 0\n[2022-11-09 05:53:18.399] [Lambda worker] [info] Resolved buffer, compiled: 3375 interpreted: 31423 unresolved: 0\n[2022-11-09 05:53:18.405] [Lambda worker] [info] Exception resolution/slow path done. Took 9.878269s\n[2022-11-09 05:53:18.405] [Lambda worker] [info] Data processed in 15.1673s 63.64 KB (2681 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.405] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.405] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.405] [Lambda worker] [info] Writing output from 2 parts (63.64 KB, 2681 rows)\n[2022-11-09 05:53:18.405] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.405] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.405] [s3fs] [info] Writing buffer of size 34793\n[2022-11-09 05:53:18.405] [s3fs] [info] Writing buffer of size 30373\n[2022-11-09 05:53:18.405] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.405] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.489] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.490] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.490] [Lambda worker] [info] Took 15.251593s in total\n[2022-11-09 05:53:18.490] [Lambda worker] [info] Paths rows took: normal: 9773 general: 7078 interpreter: 64249 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:2415919104-2684354560"]},{"container":{"reused":true,"requestId":"a86399da-971b-4c05-8d0b-ed0c0305fa74","uuid":"f5fa1af7-f9c9-4361-9be9-8ee86bab46c7","msRemaining":582936,"requestsServed":2,"startTimestamp":1667973146868968233,"deadlineTimestamp":1667973808462000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.481] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.514] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.537] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.537] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.537] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2016-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:01.538] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2016-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:01.539] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.609] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.613] [global] [info] retrieving pythonic sample took: 0.003511s\n[2022-11-09 05:53:01.680] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.681] [global] [info] retrieving pythonic sample took: 0.000268s\n[2022-11-09 05:53:01.690] [hyper specializer] [info] Deserialization of Code context took 0.151363s\n[2022-11-09 05:53:01.690] [hyper specializer] [info] Total Stage Decode took 0.152424s\n[2022-11-09 05:53:01.754] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:01.754] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.754] [fileinputoperator] [info] Filling sample cache for json operator took 0.063772s (1 entries, 0 rows)\n[2022-11-09 05:53:01.778] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:01.858] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:01.981] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.981] [fileinputoperator] [info] Extracting row sample took 0.226584s\n[2022-11-09 05:53:02.145] [hyper specializer] [info] sampling (setInputFiles) took 0.454332s\n[2022-11-09 05:53:02.145] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.145] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.145] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.145] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.145] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.145] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.145] [global] [warning] requested 2000 rows for sampling, but only 185 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.151] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.151] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.198] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.352] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.352] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.352] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.352] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.355] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.358] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.360] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.362] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.363] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.364] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.371] [hyper specializer] [info] generated code in 0.019034s\n[2022-11-09 05:53:02.414] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.414] [Lambda worker] [info] -- hyperspecialization took 0.877450s\n[2022-11-09 05:53:02.451] [global] [info] TransformStage - Optimization via LLVM passes took 0.036893 ms\n[2022-11-09 05:53:02.451] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.464] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.464] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.464] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:06.343] [Lambda worker] [info] fast path took: 3.878945s\n[2022-11-09 05:53:06.343] [Lambda worker] [info] Input rows processed: normal: 14533 unresolved: 96511\n[2022-11-09 05:53:06.343] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 96511\n[2022-11-09 05:53:06.343] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:06.343] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:06.343] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:07.557] [Lambda worker] [info] Compilation of slow path took 1.214453s\n[2022-11-09 05:53:12.894] [Lambda worker] [info] Resolved buffer, compiled: 3193 interpreted: 43478 unresolved: 0\n[2022-11-09 05:53:18.464] [Lambda worker] [info] Resolved buffer, compiled: 4097 interpreted: 45743 unresolved: 0\n[2022-11-09 05:53:18.470] [Lambda worker] [info] Exception resolution/slow path done. Took 12.126663s\n[2022-11-09 05:53:18.470] [Lambda worker] [info] Data processed in 16.0058s 63.23 KB (2719 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.470] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:18.470] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.470] [Lambda worker] [info] Writing output from 2 parts (63.23 KB, 2719 rows)\n[2022-11-09 05:53:18.470] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:18.470] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.470] [s3fs] [info] Writing buffer of size 32202\n[2022-11-09 05:53:18.470] [s3fs] [info] Writing buffer of size 32541\n[2022-11-09 05:53:18.470] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:18.470] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.525] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.525] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.525] [Lambda worker] [info] Took 16.060941s in total\n[2022-11-09 05:53:18.525] [Lambda worker] [info] Paths rows took: normal: 14533 general: 7290 interpreter: 89221 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2016-10-15.json:1342177280-1610612736"]},{"container":{"reused":true,"requestId":"4976b596-8547-4e61-b4b4-ee02144dd8d4","uuid":"fc690a01-586b-4a81-beb0-b36edbacb8ce","msRemaining":584008,"requestsServed":2,"startTimestamp":1667973146872841679,"deadlineTimestamp":1667973809580000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.599] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.632] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.655] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.655] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.655] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2021-10-15.json:536870912-805306368\n[2022-11-09 05:53:02.656] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2021-10-15.json:536870912-805306368\n[2022-11-09 05:53:02.657] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.728] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.733] [global] [info] retrieving pythonic sample took: 0.003500s\n[2022-11-09 05:53:02.800] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.801] [global] [info] retrieving pythonic sample took: 0.000260s\n[2022-11-09 05:53:02.811] [hyper specializer] [info] Deserialization of Code context took 0.153245s\n[2022-11-09 05:53:02.811] [hyper specializer] [info] Total Stage Decode took 0.154293s\n[2022-11-09 05:53:02.892] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.892] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.892] [fileinputoperator] [info] Filling sample cache for json operator took 0.081339s (1 entries, 0 rows)\n[2022-11-09 05:53:02.919] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:03.043] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:03.164] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.164] [fileinputoperator] [info] Extracting row sample took 0.271845s\n[2022-11-09 05:53:03.302] [hyper specializer] [info] sampling (setInputFiles) took 0.491857s\n[2022-11-09 05:53:03.303] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.303] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.303] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.303] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.303] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.303] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.303] [global] [warning] requested 2000 rows for sampling, but only 155 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.308] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.308] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.348] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.493] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.493] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.493] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.494] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.496] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.499] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.501] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.503] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.504] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.505] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.513] [hyper specializer] [info] generated code in 0.019037s\n[2022-11-09 05:53:03.548] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.548] [Lambda worker] [info] -- hyperspecialization took 0.893118s\n[2022-11-09 05:53:03.585] [global] [info] TransformStage - Optimization via LLVM passes took 0.036596 ms\n[2022-11-09 05:53:03.585] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.602] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.602] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.602] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.344] [Lambda worker] [info] fast path took: 4.742045s\n[2022-11-09 05:53:08.345] [Lambda worker] [info] Input rows processed: normal: 13239 unresolved: 74912\n[2022-11-09 05:53:08.345] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 74912\n[2022-11-09 05:53:08.345] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.345] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.345] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.567] [Lambda worker] [info] Compilation of slow path took 1.222620s\n[2022-11-09 05:53:13.935] [Lambda worker] [info] Resolved buffer, compiled: 4345 interpreted: 32849 unresolved: 0\n[2022-11-09 05:53:18.481] [Lambda worker] [info] Resolved buffer, compiled: 4276 interpreted: 33442 unresolved: 0\n[2022-11-09 05:53:18.486] [Lambda worker] [info] Exception resolution/slow path done. Took 10.141784s\n[2022-11-09 05:53:18.486] [Lambda worker] [info] Data processed in 14.884s 43.26 KB (1793 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.486] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.486] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.486] [Lambda worker] [info] Writing output from 2 parts (43.26 KB, 1793 rows)\n[2022-11-09 05:53:18.486] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.486] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.487] [s3fs] [info] Writing buffer of size 23755\n[2022-11-09 05:53:18.487] [s3fs] [info] Writing buffer of size 20542\n[2022-11-09 05:53:18.487] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.487] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.571] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.571] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.571] [Lambda worker] [info] Took 14.968848s in total\n[2022-11-09 05:53:18.571] [Lambda worker] [info] Paths rows took: normal: 13239 general: 8621 interpreter: 66291 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2021-10-15.json:536870912-805306368"]},{"container":{"reused":true,"requestId":"2c13f42c-f72e-4467-92e3-6583006fdf7c","uuid":"144a1be7-fe44-44b9-99c2-d7b4f0552b54","msRemaining":583496,"requestsServed":2,"startTimestamp":1667973147370834592,"deadlineTimestamp":1667973809122000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.141] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.174] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.196] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.197] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.197] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:02.198] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:02.199] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.269] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.273] [global] [info] retrieving pythonic sample took: 0.003506s\n[2022-11-09 05:53:02.340] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.342] [global] [info] retrieving pythonic sample took: 0.000262s\n[2022-11-09 05:53:02.351] [hyper specializer] [info] Deserialization of Code context took 0.152273s\n[2022-11-09 05:53:02.351] [hyper specializer] [info] Total Stage Decode took 0.153325s\n[2022-11-09 05:53:02.422] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.422] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.422] [fileinputoperator] [info] Filling sample cache for json operator took 0.071002s (1 entries, 0 rows)\n[2022-11-09 05:53:02.455] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.541] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.657] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.657] [fileinputoperator] [info] Extracting row sample took 0.234905s\n[2022-11-09 05:53:02.806] [hyper specializer] [info] sampling (setInputFiles) took 0.454526s\n[2022-11-09 05:53:02.806] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.806] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.806] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.806] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.806] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.806] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.806] [global] [warning] requested 2000 rows for sampling, but only 121 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.810] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.810] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.852] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.040] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.040] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.040] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.040] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.043] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.046] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.047] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.049] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.051] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.052] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.059] [hyper specializer] [info] generated code in 0.019194s\n[2022-11-09 05:53:03.097] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.097] [Lambda worker] [info] -- hyperspecialization took 0.900942s\n[2022-11-09 05:53:03.134] [global] [info] TransformStage - Optimization via LLVM passes took 0.036085 ms\n[2022-11-09 05:53:03.134] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.146] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.146] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.146] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.344] [Lambda worker] [info] fast path took: 5.197345s\n[2022-11-09 05:53:08.344] [Lambda worker] [info] Input rows processed: normal: 8459 unresolved: 71945\n[2022-11-09 05:53:08.344] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 71945\n[2022-11-09 05:53:08.344] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.344] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.344] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.560] [Lambda worker] [info] Compilation of slow path took 1.216504s\n[2022-11-09 05:53:13.997] [Lambda worker] [info] Resolved buffer, compiled: 3114 interpreted: 32917 unresolved: 0\n[2022-11-09 05:53:18.542] [Lambda worker] [info] Resolved buffer, compiled: 2507 interpreted: 33407 unresolved: 0\n[2022-11-09 05:53:18.548] [Lambda worker] [info] Exception resolution/slow path done. Took 10.204153s\n[2022-11-09 05:53:18.548] [Lambda worker] [info] Data processed in 15.4017s 47.91 KB (1994 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.548] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.548] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.548] [Lambda worker] [info] Writing output from 2 parts (47.91 KB, 1994 rows)\n[2022-11-09 05:53:18.548] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.548] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.548] [s3fs] [info] Writing buffer of size 24855\n[2022-11-09 05:53:18.548] [s3fs] [info] Writing buffer of size 24205\n[2022-11-09 05:53:18.548] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.548] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.625] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.625] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.625] [Lambda worker] [info] Took 15.478576s in total\n[2022-11-09 05:53:18.625] [Lambda worker] [info] Paths rows took: normal: 8459 general: 5621 interpreter: 66324 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:1073741824-1342177280"]},{"container":{"reused":true,"requestId":"6830c6cb-1b60-441a-9ed2-325b40ab957d","uuid":"947980f2-d384-4093-a3a3-3bad29ac5dd2","msRemaining":583055,"requestsServed":2,"startTimestamp":1667973146302328217,"deadlineTimestamp":1667973808698000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.716] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.749] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.772] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.772] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.772] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:3221225472-3489660928\n[2022-11-09 05:53:01.773] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:3221225472-3489660928\n[2022-11-09 05:53:01.774] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.848] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.852] [global] [info] retrieving pythonic sample took: 0.003542s\n[2022-11-09 05:53:01.919] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.994] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.994] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.994] [fileinputoperator] [info] Filling sample cache for json operator took 0.074865s (1 entries, 0 rows)\n[2022-11-09 05:53:02.019] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.173] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.351] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.351] [fileinputoperator] [info] Extracting row sample took 0.356871s\n[2022-11-09 05:53:02.398] [global] [info] retrieving pythonic sample took: 0.478820s\n[2022-11-09 05:53:02.408] [hyper specializer] [info] Deserialization of Code context took 0.634139s\n[2022-11-09 05:53:02.408] [hyper specializer] [info] Total Stage Decode took 0.635178s\n[2022-11-09 05:53:02.489] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:3221225472-3489660928 on 256.00 KB\n[2022-11-09 05:53:02.489] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.489] [fileinputoperator] [info] Filling sample cache for json operator took 0.051354s (1 entries, 0 rows)\n[2022-11-09 05:53:02.521] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:3221225472-3489660928 on 256.00 KB\n[2022-11-09 05:53:02.611] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:3221225472-3489660928 on 256.00 KB\n[2022-11-09 05:53:02.754] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.754] [fileinputoperator] [info] Extracting row sample took 0.264691s\n[2022-11-09 05:53:02.933] [hyper specializer] [info] sampling (setInputFiles) took 0.525029s\n[2022-11-09 05:53:02.934] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.934] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.934] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.934] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.934] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.934] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.934] [global] [warning] requested 2000 rows for sampling, but only 174 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.941] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.941] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.991] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.169] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.169] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.169] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.169] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.172] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.175] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.177] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.179] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.180] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.181] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.188] [hyper specializer] [info] generated code in 0.019481s\n[2022-11-09 05:53:03.235] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.235] [Lambda worker] [info] -- hyperspecialization took 1.462891s\n[2022-11-09 05:53:03.271] [global] [info] TransformStage - Optimization via LLVM passes took 0.036076 ms\n[2022-11-09 05:53:03.271] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.283] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.284] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.284] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.532] [Lambda worker] [info] fast path took: 5.248779s\n[2022-11-09 05:53:08.532] [Lambda worker] [info] Input rows processed: normal: 9571 unresolved: 67975\n[2022-11-09 05:53:08.532] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 67975\n[2022-11-09 05:53:08.532] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.532] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.532] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.748] [Lambda worker] [info] Compilation of slow path took 1.215837s\n[2022-11-09 05:53:13.998] [Lambda worker] [info] Resolved buffer, compiled: 3112 interpreted: 30808 unresolved: 0\n[2022-11-09 05:53:18.224] [Lambda worker] [info] Resolved buffer, compiled: 3149 interpreted: 30906 unresolved: 0\n[2022-11-09 05:53:18.231] [Lambda worker] [info] Exception resolution/slow path done. Took 9.698021s\n[2022-11-09 05:53:18.231] [Lambda worker] [info] Data processed in 14.947s 44.56 KB (1868 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.231] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.231] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.231] [Lambda worker] [info] Writing output from 2 parts (44.56 KB, 1868 rows)\n[2022-11-09 05:53:18.231] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.231] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.231] [s3fs] [info] Writing buffer of size 22873\n[2022-11-09 05:53:18.231] [s3fs] [info] Writing buffer of size 22756\n[2022-11-09 05:53:18.231] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.231] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.642] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.642] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.642] [Lambda worker] [info] Took 15.358266s in total\n[2022-11-09 05:53:18.642] [Lambda worker] [info] Paths rows took: normal: 9571 general: 6261 interpreter: 61714 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:3221225472-3489660928"]},{"container":{"reused":true,"requestId":"9fb943ce-d168-4ebf-8d39-76fd27a51143","uuid":"b987d47c-2bb5-42a3-add8-56ac2d9075b2","msRemaining":583438,"requestsServed":2,"startTimestamp":1667973146416478894,"deadlineTimestamp":1667973809096000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.115] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.147] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.170] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.170] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.170] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:536870912-805306368\n[2022-11-09 05:53:02.171] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:536870912-805306368\n[2022-11-09 05:53:02.172] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.243] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.248] [global] [info] retrieving pythonic sample took: 0.003613s\n[2022-11-09 05:53:02.314] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.374] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.374] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.374] [fileinputoperator] [info] Filling sample cache for json operator took 0.058961s (1 entries, 0 rows)\n[2022-11-09 05:53:02.400] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.552] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.727] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.727] [fileinputoperator] [info] Extracting row sample took 0.352887s\n[2022-11-09 05:53:02.774] [global] [info] retrieving pythonic sample took: 0.458768s\n[2022-11-09 05:53:02.784] [hyper specializer] [info] Deserialization of Code context took 0.611167s\n[2022-11-09 05:53:02.784] [hyper specializer] [info] Total Stage Decode took 0.612209s\n[2022-11-09 05:53:02.888] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.888] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.888] [fileinputoperator] [info] Filling sample cache for json operator took 0.075623s (1 entries, 0 rows)\n[2022-11-09 05:53:02.933] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:03.023] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:03.152] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.152] [fileinputoperator] [info] Extracting row sample took 0.263964s\n[2022-11-09 05:53:03.306] [hyper specializer] [info] sampling (setInputFiles) took 0.522189s\n[2022-11-09 05:53:03.306] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.306] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.306] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.306] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.307] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.307] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.307] [global] [warning] requested 2000 rows for sampling, but only 123 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.312] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.312] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.354] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.545] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.545] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.545] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.545] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.548] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.551] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.553] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.555] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.556] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.558] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.565] [hyper specializer] [info] generated code in 0.019195s\n[2022-11-09 05:53:03.604] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.604] [Lambda worker] [info] -- hyperspecialization took 1.433963s\n[2022-11-09 05:53:03.640] [global] [info] TransformStage - Optimization via LLVM passes took 0.036176 ms\n[2022-11-09 05:53:03.640] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.653] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.653] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.653] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.783] [Lambda worker] [info] fast path took: 5.130182s\n[2022-11-09 05:53:08.783] [Lambda worker] [info] Input rows processed: normal: 8192 unresolved: 66776\n[2022-11-09 05:53:08.783] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 66776\n[2022-11-09 05:53:08.783] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.783] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.783] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.993] [Lambda worker] [info] Compilation of slow path took 1.209857s\n[2022-11-09 05:53:14.234] [Lambda worker] [info] Resolved buffer, compiled: 2574 interpreted: 30164 unresolved: 0\n[2022-11-09 05:53:18.592] [Lambda worker] [info] Resolved buffer, compiled: 2883 interpreted: 31155 unresolved: 0\n[2022-11-09 05:53:18.598] [Lambda worker] [info] Exception resolution/slow path done. Took 9.814985s\n[2022-11-09 05:53:18.598] [Lambda worker] [info] Data processed in 14.9453s 44.18 KB (1838 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.598] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.598] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.598] [Lambda worker] [info] Writing output from 2 parts (44.18 KB, 1838 rows)\n[2022-11-09 05:53:18.598] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.598] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.598] [s3fs] [info] Writing buffer of size 20892\n[2022-11-09 05:53:18.599] [s3fs] [info] Writing buffer of size 24347\n[2022-11-09 05:53:18.599] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.599] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.657] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.657] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.657] [Lambda worker] [info] Took 15.003720s in total\n[2022-11-09 05:53:18.657] [Lambda worker] [info] Paths rows took: normal: 8192 general: 5457 interpreter: 61319 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:536870912-805306368"]},{"container":{"reused":true,"requestId":"695253d6-614e-4ef1-8a60-cd22475137e8","uuid":"03864c11-274a-40cf-8cee-3224e144e37d","msRemaining":583935,"requestsServed":2,"startTimestamp":1667973146126678190,"deadlineTimestamp":1667973809615000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.634] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.668] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.691] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.691] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.691] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2021-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:02.693] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2021-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:02.694] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.765] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.770] [global] [info] retrieving pythonic sample took: 0.003616s\n[2022-11-09 05:53:02.838] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.839] [global] [info] retrieving pythonic sample took: 0.000259s\n[2022-11-09 05:53:02.849] [hyper specializer] [info] Deserialization of Code context took 0.155633s\n[2022-11-09 05:53:02.849] [hyper specializer] [info] Total Stage Decode took 0.156667s\n[2022-11-09 05:53:02.957] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.957] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.957] [fileinputoperator] [info] Filling sample cache for json operator took 0.108048s (1 entries, 0 rows)\n[2022-11-09 05:53:03.037] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:03.134] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:03.261] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.261] [fileinputoperator] [info] Extracting row sample took 0.303516s\n[2022-11-09 05:53:03.417] [hyper specializer] [info] sampling (setInputFiles) took 0.567325s\n[2022-11-09 05:53:03.417] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.417] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.417] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.417] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.417] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.417] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.417] [global] [warning] requested 2000 rows for sampling, but only 183 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.427] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.427] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.471] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.631] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.632] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.632] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.632] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.635] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.638] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.640] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.641] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.643] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.644] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.652] [hyper specializer] [info] generated code in 0.020239s\n[2022-11-09 05:53:03.694] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.694] [Lambda worker] [info] -- hyperspecialization took 1.002338s\n[2022-11-09 05:53:03.737] [global] [info] TransformStage - Optimization via LLVM passes took 0.043148 ms\n[2022-11-09 05:53:03.737] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.751] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.751] [global] [info] Compiled code paths for stage 0 in 0.06 ms\n[2022-11-09 05:53:03.751] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.081] [Lambda worker] [info] fast path took: 5.330580s\n[2022-11-09 05:53:09.081] [Lambda worker] [info] Input rows processed: normal: 10685 unresolved: 68890\n[2022-11-09 05:53:09.081] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 68890\n[2022-11-09 05:53:09.081] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.081] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.081] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.331] [Lambda worker] [info] Compilation of slow path took 1.249358s\n[2022-11-09 05:53:14.342] [Lambda worker] [info] Resolved buffer, compiled: 5023 interpreted: 28501 unresolved: 0\n[2022-11-09 05:53:18.602] [Lambda worker] [info] Resolved buffer, compiled: 5238 interpreted: 30128 unresolved: 0\n[2022-11-09 05:53:18.608] [Lambda worker] [info] Exception resolution/slow path done. Took 9.526411s\n[2022-11-09 05:53:18.608] [Lambda worker] [info] Data processed in 14.8572s 40.90 KB (1697 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.608] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.608] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.608] [Lambda worker] [info] Writing output from 2 parts (40.90 KB, 1697 rows)\n[2022-11-09 05:53:18.608] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.608] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.608] [s3fs] [info] Writing buffer of size 21058\n[2022-11-09 05:53:18.608] [s3fs] [info] Writing buffer of size 20827\n[2022-11-09 05:53:18.608] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.608] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.678] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.678] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.679] [Lambda worker] [info] Took 14.927690s in total\n[2022-11-09 05:53:18.679] [Lambda worker] [info] Paths rows took: normal: 10685 general: 10261 interpreter: 58629 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2021-10-15.json:1342177280-1610612736"]},{"container":{"reused":true,"requestId":"4177df97-f838-4974-92e7-1f86bbad25b4","uuid":"bc9b8789-bffc-495b-a58f-3d9abe57490e","msRemaining":583567,"requestsServed":2,"startTimestamp":1667973146747780486,"deadlineTimestamp":1667973809281000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.301] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.336] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.359] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.359] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.359] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:5368709120-5637144576\n[2022-11-09 05:53:02.360] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:5368709120-5637144576\n[2022-11-09 05:53:02.361] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.435] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.440] [global] [info] retrieving pythonic sample took: 0.003690s\n[2022-11-09 05:53:02.515] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.588] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.588] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.588] [fileinputoperator] [info] Filling sample cache for json operator took 0.072272s (1 entries, 0 rows)\n[2022-11-09 05:53:02.615] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.782] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.958] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.958] [fileinputoperator] [info] Extracting row sample took 0.369838s\n[2022-11-09 05:53:03.006] [global] [info] retrieving pythonic sample took: 0.489546s\n[2022-11-09 05:53:03.016] [hyper specializer] [info] Deserialization of Code context took 0.654176s\n[2022-11-09 05:53:03.016] [hyper specializer] [info] Total Stage Decode took 0.655205s\n[2022-11-09 05:53:03.116] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:5368709120-5637144576 on 256.00 KB\n[2022-11-09 05:53:03.117] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.117] [fileinputoperator] [info] Filling sample cache for json operator took 0.071464s (1 entries, 0 rows)\n[2022-11-09 05:53:03.173] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:5368709120-5637144576 on 256.00 KB\n[2022-11-09 05:53:03.302] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:5368709120-5637144576 on 256.00 KB\n[2022-11-09 05:53:03.442] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.442] [fileinputoperator] [info] Extracting row sample took 0.325628s\n[2022-11-09 05:53:03.603] [hyper specializer] [info] sampling (setInputFiles) took 0.587507s\n[2022-11-09 05:53:03.604] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.604] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.604] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.604] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.604] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.604] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.604] [global] [warning] requested 2000 rows for sampling, but only 108 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.608] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.608] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.655] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.859] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.859] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.859] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.859] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.862] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.865] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.867] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.869] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.870] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.871] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.878] [hyper specializer] [info] generated code in 0.019123s\n[2022-11-09 05:53:03.918] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.919] [Lambda worker] [info] -- hyperspecialization took 1.559405s\n[2022-11-09 05:53:03.955] [global] [info] TransformStage - Optimization via LLVM passes took 0.036124 ms\n[2022-11-09 05:53:03.955] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.967] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.967] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.967] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.271] [Lambda worker] [info] fast path took: 5.303394s\n[2022-11-09 05:53:09.271] [Lambda worker] [info] Input rows processed: normal: 7752 unresolved: 58279\n[2022-11-09 05:53:09.271] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 58279\n[2022-11-09 05:53:09.271] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.271] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.271] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.486] [Lambda worker] [info] Compilation of slow path took 1.215260s\n[2022-11-09 05:53:14.468] [Lambda worker] [info] Resolved buffer, compiled: 2484 interpreted: 26123 unresolved: 0\n[2022-11-09 05:53:18.616] [Lambda worker] [info] Resolved buffer, compiled: 2362 interpreted: 27310 unresolved: 0\n[2022-11-09 05:53:18.622] [Lambda worker] [info] Exception resolution/slow path done. Took 9.351210s\n[2022-11-09 05:53:18.622] [Lambda worker] [info] Data processed in 14.6548s 34.45 KB (1431 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.622] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.622] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.622] [Lambda worker] [info] Writing output from 2 parts (34.45 KB, 1431 rows)\n[2022-11-09 05:53:18.622] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.622] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.622] [s3fs] [info] Writing buffer of size 17247\n[2022-11-09 05:53:18.622] [s3fs] [info] Writing buffer of size 18025\n[2022-11-09 05:53:18.622] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.622] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.713] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.713] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.713] [Lambda worker] [info] Took 14.745749s in total\n[2022-11-09 05:53:18.713] [Lambda worker] [info] Paths rows took: normal: 7752 general: 4846 interpreter: 53433 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:5368709120-5637144576"]},{"container":{"reused":true,"requestId":"c934b1de-c4df-4dc9-8c8d-dcfdccc3f998","uuid":"419c9043-4f56-41f6-bc0a-ab433a7c6eda","msRemaining":583929,"requestsServed":2,"startTimestamp":1667973146496551683,"deadlineTimestamp":1667973809656000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.681] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.706] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.729] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.729] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.729] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2021-10-15.json:2684354560-2952790016\n[2022-11-09 05:53:02.730] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2021-10-15.json:2684354560-2952790016\n[2022-11-09 05:53:02.731] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.802] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.807] [global] [info] retrieving pythonic sample took: 0.003505s\n[2022-11-09 05:53:02.875] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.953] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.953] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.953] [fileinputoperator] [info] Filling sample cache for json operator took 0.076770s (1 entries, 0 rows)\n[2022-11-09 05:53:03.038] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.203] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.380] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.380] [fileinputoperator] [info] Extracting row sample took 0.427457s\n[2022-11-09 05:53:03.428] [global] [info] retrieving pythonic sample took: 0.551502s\n[2022-11-09 05:53:03.438] [hyper specializer] [info] Deserialization of Code context took 0.706150s\n[2022-11-09 05:53:03.438] [hyper specializer] [info] Total Stage Decode took 0.707185s\n[2022-11-09 05:53:03.517] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:2684354560-2952790016 on 256.00 KB\n[2022-11-09 05:53:03.517] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.517] [fileinputoperator] [info] Filling sample cache for json operator took 0.049885s (1 entries, 0 rows)\n[2022-11-09 05:53:03.548] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:2684354560-2952790016 on 256.00 KB\n[2022-11-09 05:53:03.669] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:2684354560-2952790016 on 256.00 KB\n[2022-11-09 05:53:03.789] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.789] [fileinputoperator] [info] Extracting row sample took 0.272118s\n[2022-11-09 05:53:03.950] [hyper specializer] [info] sampling (setInputFiles) took 0.511992s\n[2022-11-09 05:53:03.950] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.950] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.950] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.950] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.950] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.950] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.950] [global] [warning] requested 2000 rows for sampling, but only 193 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.957] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.957] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:04.002] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:04.146] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:04.146] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:04.146] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:04.147] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:04.149] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:04.152] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:04.154] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:04.156] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:04.158] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:04.160] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:04.167] [hyper specializer] [info] generated code in 0.020758s\n[2022-11-09 05:53:04.208] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:04.209] [Lambda worker] [info] -- hyperspecialization took 1.479530s\n[2022-11-09 05:53:04.246] [global] [info] TransformStage - Optimization via LLVM passes took 0.037538 ms\n[2022-11-09 05:53:04.246] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:04.259] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:04.259] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:04.259] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.055] [Lambda worker] [info] fast path took: 4.796220s\n[2022-11-09 05:53:09.055] [Lambda worker] [info] Input rows processed: normal: 9931 unresolved: 68882\n[2022-11-09 05:53:09.055] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 68882\n[2022-11-09 05:53:09.055] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.055] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.055] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.279] [Lambda worker] [info] Compilation of slow path took 1.223632s\n[2022-11-09 05:53:14.422] [Lambda worker] [info] Resolved buffer, compiled: 4640 interpreted: 29619 unresolved: 0\n[2022-11-09 05:53:18.659] [Lambda worker] [info] Resolved buffer, compiled: 4611 interpreted: 30012 unresolved: 0\n[2022-11-09 05:53:18.665] [Lambda worker] [info] Exception resolution/slow path done. Took 9.609553s\n[2022-11-09 05:53:18.665] [Lambda worker] [info] Data processed in 14.4059s 35.53 KB (1470 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.665] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.665] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.665] [Lambda worker] [info] Writing output from 2 parts (35.53 KB, 1470 rows)\n[2022-11-09 05:53:18.665] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.665] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.665] [s3fs] [info] Writing buffer of size 17509\n[2022-11-09 05:53:18.665] [s3fs] [info] Writing buffer of size 18871\n[2022-11-09 05:53:18.665] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.665] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.726] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.726] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.726] [Lambda worker] [info] Took 14.467163s in total\n[2022-11-09 05:53:18.726] [Lambda worker] [info] Paths rows took: normal: 9931 general: 9251 interpreter: 59631 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2021-10-15.json:2684354560-2952790016"]},{"container":{"reused":true,"requestId":"a5b037a1-35c7-413f-9fe3-5267799cd378","uuid":"572c3b78-67e1-477f-ad2a-d6780e760b36","msRemaining":583473,"requestsServed":2,"startTimestamp":1667973147356637211,"deadlineTimestamp":1667973809203000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.223] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.257] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.280] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.280] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.280] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:3489660928-3758096384\n[2022-11-09 05:53:02.281] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:3489660928-3758096384\n[2022-11-09 05:53:02.282] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.353] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.358] [global] [info] retrieving pythonic sample took: 0.003775s\n[2022-11-09 05:53:02.430] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.782] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.782] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.782] [fileinputoperator] [info] Filling sample cache for json operator took 0.350378s (1 entries, 0 rows)\n[2022-11-09 05:53:02.813] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.020] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.199] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.199] [fileinputoperator] [info] Extracting row sample took 0.417193s\n[2022-11-09 05:53:03.247] [global] [info] retrieving pythonic sample took: 0.815970s\n[2022-11-09 05:53:03.257] [hyper specializer] [info] Deserialization of Code context took 0.974961s\n[2022-11-09 05:53:03.257] [hyper specializer] [info] Total Stage Decode took 0.976050s\n[2022-11-09 05:53:03.342] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:3489660928-3758096384 on 256.00 KB\n[2022-11-09 05:53:03.342] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.342] [fileinputoperator] [info] Filling sample cache for json operator took 0.054808s (1 entries, 0 rows)\n[2022-11-09 05:53:03.388] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:3489660928-3758096384 on 256.00 KB\n[2022-11-09 05:53:03.494] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:3489660928-3758096384 on 256.00 KB\n[2022-11-09 05:53:03.634] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.635] [fileinputoperator] [info] Extracting row sample took 0.292168s\n[2022-11-09 05:53:03.796] [hyper specializer] [info] sampling (setInputFiles) took 0.538730s\n[2022-11-09 05:53:03.797] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.797] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.797] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.797] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.797] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.797] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.797] [global] [warning] requested 2000 rows for sampling, but only 136 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.803] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.803] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.848] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:04.038] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:04.038] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:04.038] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:04.038] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:04.041] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:04.044] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:04.046] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:04.048] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:04.049] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:04.050] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:04.058] [hyper specializer] [info] generated code in 0.019722s\n[2022-11-09 05:53:04.099] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:04.099] [Lambda worker] [info] -- hyperspecialization took 1.818963s\n[2022-11-09 05:53:04.135] [global] [info] TransformStage - Optimization via LLVM passes took 0.036359 ms\n[2022-11-09 05:53:04.135] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:04.148] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:04.148] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:04.148] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.582] [Lambda worker] [info] fast path took: 5.434330s\n[2022-11-09 05:53:09.582] [Lambda worker] [info] Input rows processed: normal: 6894 unresolved: 56227\n[2022-11-09 05:53:09.582] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 56227\n[2022-11-09 05:53:09.582] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.582] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.582] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.848] [Lambda worker] [info] Compilation of slow path took 1.266178s\n[2022-11-09 05:53:14.753] [Lambda worker] [info] Resolved buffer, compiled: 2389 interpreted: 26034 unresolved: 0\n[2022-11-09 05:53:18.577] [Lambda worker] [info] Resolved buffer, compiled: 2438 interpreted: 25366 unresolved: 0\n[2022-11-09 05:53:18.583] [Lambda worker] [info] Exception resolution/slow path done. Took 9.000949s\n[2022-11-09 05:53:18.583] [Lambda worker] [info] Data processed in 14.4355s 40.89 KB (1703 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.583] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.583] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.583] [Lambda worker] [info] Writing output from 2 parts (40.89 KB, 1703 rows)\n[2022-11-09 05:53:18.583] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.583] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.583] [s3fs] [info] Writing buffer of size 20252\n[2022-11-09 05:53:18.583] [s3fs] [info] Writing buffer of size 21623\n[2022-11-09 05:53:18.583] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.583] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.728] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.729] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.729] [Lambda worker] [info] Took 14.580663s in total\n[2022-11-09 05:53:18.729] [Lambda worker] [info] Paths rows took: normal: 6894 general: 4827 interpreter: 51400 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:3489660928-3758096384"]},{"container":{"reused":true,"requestId":"ee3f5b92-dd8b-44cb-9584-69b3980b9529","uuid":"96fc5ffb-29e0-454d-84b2-10b192a5520b","msRemaining":582828,"requestsServed":2,"startTimestamp":1667973147363542684,"deadlineTimestamp":1667973808603000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.622] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.656] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.678] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.678] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.678] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:805306368-1073741824\n[2022-11-09 05:53:01.680] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:805306368-1073741824\n[2022-11-09 05:53:01.681] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.752] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.757] [global] [info] retrieving pythonic sample took: 0.003693s\n[2022-11-09 05:53:01.825] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.826] [global] [info] retrieving pythonic sample took: 0.000267s\n[2022-11-09 05:53:01.836] [hyper specializer] [info] Deserialization of Code context took 0.154888s\n[2022-11-09 05:53:01.836] [hyper specializer] [info] Total Stage Decode took 0.155918s\n[2022-11-09 05:53:01.969] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:01.969] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.969] [fileinputoperator] [info] Filling sample cache for json operator took 0.133488s (1 entries, 0 rows)\n[2022-11-09 05:53:02.011] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.104] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.247] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.247] [fileinputoperator] [info] Extracting row sample took 0.277716s\n[2022-11-09 05:53:02.404] [hyper specializer] [info] sampling (setInputFiles) took 0.568399s\n[2022-11-09 05:53:02.405] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.405] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.405] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.405] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.405] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.405] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.405] [global] [warning] requested 2000 rows for sampling, but only 171 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.410] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.410] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.456] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.624] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.624] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.624] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.624] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.627] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.630] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.632] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.634] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.635] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.637] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.644] [hyper specializer] [info] generated code in 0.019683s\n[2022-11-09 05:53:02.685] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.685] [Lambda worker] [info] -- hyperspecialization took 1.006973s\n[2022-11-09 05:53:02.722] [global] [info] TransformStage - Optimization via LLVM passes took 0.036413 ms\n[2022-11-09 05:53:02.722] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.734] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.734] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.734] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.280] [Lambda worker] [info] fast path took: 5.545375s\n[2022-11-09 05:53:08.280] [Lambda worker] [info] Input rows processed: normal: 9008 unresolved: 75015\n[2022-11-09 05:53:08.280] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 75015\n[2022-11-09 05:53:08.280] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.280] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.280] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.535] [Lambda worker] [info] Compilation of slow path took 1.254926s\n[2022-11-09 05:53:14.201] [Lambda worker] [info] Resolved buffer, compiled: 4060 interpreted: 34833 unresolved: 0\n[2022-11-09 05:53:18.705] [Lambda worker] [info] Resolved buffer, compiled: 3947 interpreted: 32175 unresolved: 0\n[2022-11-09 05:53:18.711] [Lambda worker] [info] Exception resolution/slow path done. Took 10.431348s\n[2022-11-09 05:53:18.711] [Lambda worker] [info] Data processed in 15.9769s 71.04 KB (2992 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.711] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.711] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.711] [Lambda worker] [info] Writing output from 2 parts (71.04 KB, 2992 rows)\n[2022-11-09 05:53:18.711] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.711] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.711] [s3fs] [info] Writing buffer of size 37809\n[2022-11-09 05:53:18.711] [s3fs] [info] Writing buffer of size 34932\n[2022-11-09 05:53:18.712] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.712] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.773] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.773] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.773] [Lambda worker] [info] Took 16.039028s in total\n[2022-11-09 05:53:18.773] [Lambda worker] [info] Paths rows took: normal: 9008 general: 8007 interpreter: 67008 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:805306368-1073741824"]},{"container":{"reused":true,"requestId":"1cf3c818-637c-4c6d-ab44-65dde3c86a0c","uuid":"d8908be2-8d82-4c26-b023-bf60ac5f26a2","msRemaining":582841,"requestsServed":2,"startTimestamp":1667973147338543806,"deadlineTimestamp":1667973808655000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.675] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.708] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.731] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.731] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.731] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:2147483648-2415919104\n[2022-11-09 05:53:01.732] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:2147483648-2415919104\n[2022-11-09 05:53:01.733] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.805] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.809] [global] [info] retrieving pythonic sample took: 0.003642s\n[2022-11-09 05:53:01.877] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.999] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.999] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.999] [fileinputoperator] [info] Filling sample cache for json operator took 0.120905s (1 entries, 0 rows)\n[2022-11-09 05:53:02.027] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.178] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.354] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.354] [fileinputoperator] [info] Extracting row sample took 0.355158s\n[2022-11-09 05:53:02.401] [global] [info] retrieving pythonic sample took: 0.523008s\n[2022-11-09 05:53:02.411] [hyper specializer] [info] Deserialization of Code context took 0.677199s\n[2022-11-09 05:53:02.411] [hyper specializer] [info] Total Stage Decode took 0.678263s\n[2022-11-09 05:53:02.490] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:02.490] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.490] [fileinputoperator] [info] Filling sample cache for json operator took 0.050371s (1 entries, 0 rows)\n[2022-11-09 05:53:02.554] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:02.664] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:2147483648-2415919104 on 256.00 KB\n[2022-11-09 05:53:02.803] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.803] [fileinputoperator] [info] Extracting row sample took 0.312807s\n[2022-11-09 05:53:02.961] [hyper specializer] [info] sampling (setInputFiles) took 0.550580s\n[2022-11-09 05:53:02.962] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.962] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.962] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.962] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.962] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.962] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.962] [global] [warning] requested 2000 rows for sampling, but only 145 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.968] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.968] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.012] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.192] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.192] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.192] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.192] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.195] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.198] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.200] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.202] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.204] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.205] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.213] [hyper specializer] [info] generated code in 0.020490s\n[2022-11-09 05:53:03.253] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.253] [Lambda worker] [info] -- hyperspecialization took 1.521770s\n[2022-11-09 05:53:03.290] [global] [info] TransformStage - Optimization via LLVM passes took 0.037146 ms\n[2022-11-09 05:53:03.290] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.303] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.303] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.303] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.658] [Lambda worker] [info] fast path took: 5.355236s\n[2022-11-09 05:53:08.658] [Lambda worker] [info] Input rows processed: normal: 9555 unresolved: 69772\n[2022-11-09 05:53:08.658] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 69772\n[2022-11-09 05:53:08.658] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.658] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.658] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.925] [Lambda worker] [info] Compilation of slow path took 1.266613s\n[2022-11-09 05:53:14.360] [Lambda worker] [info] Resolved buffer, compiled: 3283 interpreted: 31450 unresolved: 0\n[2022-11-09 05:53:18.719] [Lambda worker] [info] Resolved buffer, compiled: 3136 interpreted: 31903 unresolved: 0\n[2022-11-09 05:53:18.725] [Lambda worker] [info] Exception resolution/slow path done. Took 10.067010s\n[2022-11-09 05:53:18.725] [Lambda worker] [info] Data processed in 15.4224s 61.86 KB (2600 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.725] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.725] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.725] [Lambda worker] [info] Writing output from 2 parts (61.86 KB, 2600 rows)\n[2022-11-09 05:53:18.725] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.725] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.725] [s3fs] [info] Writing buffer of size 30543\n[2022-11-09 05:53:18.725] [s3fs] [info] Writing buffer of size 32805\n[2022-11-09 05:53:18.725] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.725] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.813] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.813] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.813] [Lambda worker] [info] Took 15.510411s in total\n[2022-11-09 05:53:18.813] [Lambda worker] [info] Paths rows took: normal: 9555 general: 6419 interpreter: 63353 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:2147483648-2415919104"]},{"container":{"reused":true,"requestId":"4fc57b60-6435-4ce9-bc48-024067360ab4","uuid":"a6cab9fb-8abe-4b8f-ad9c-789ae39fcb28","msRemaining":583824,"requestsServed":2,"startTimestamp":1667973147244142592,"deadlineTimestamp":1667973809651000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.673] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.700] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.722] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.722] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.722] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2021-10-15.json:2415919104-2684354560\n[2022-11-09 05:53:02.724] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2021-10-15.json:2415919104-2684354560\n[2022-11-09 05:53:02.725] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.794] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.798] [global] [info] retrieving pythonic sample took: 0.003475s\n[2022-11-09 05:53:02.864] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.939] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.939] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.939] [fileinputoperator] [info] Filling sample cache for json operator took 0.073454s (1 entries, 0 rows)\n[2022-11-09 05:53:03.034] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.193] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.368] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.368] [fileinputoperator] [info] Extracting row sample took 0.428794s\n[2022-11-09 05:53:03.414] [global] [info] retrieving pythonic sample took: 0.548431s\n[2022-11-09 05:53:03.424] [hyper specializer] [info] Deserialization of Code context took 0.699054s\n[2022-11-09 05:53:03.424] [hyper specializer] [info] Total Stage Decode took 0.700108s\n[2022-11-09 05:53:03.535] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:2415919104-2684354560 on 256.00 KB\n[2022-11-09 05:53:03.535] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.535] [fileinputoperator] [info] Filling sample cache for json operator took 0.081834s (1 entries, 0 rows)\n[2022-11-09 05:53:03.589] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:2415919104-2684354560 on 256.00 KB\n[2022-11-09 05:53:03.700] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:2415919104-2684354560 on 256.00 KB\n[2022-11-09 05:53:03.820] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.820] [fileinputoperator] [info] Extracting row sample took 0.285327s\n[2022-11-09 05:53:03.973] [hyper specializer] [info] sampling (setInputFiles) took 0.549469s\n[2022-11-09 05:53:03.974] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.974] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.974] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.974] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.974] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.974] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.974] [global] [warning] requested 2000 rows for sampling, but only 122 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.978] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.979] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:04.021] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:04.207] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:04.207] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:04.207] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:04.207] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:04.210] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:04.213] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:04.215] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:04.217] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:04.218] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:04.219] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:04.227] [hyper specializer] [info] generated code in 0.019182s\n[2022-11-09 05:53:04.266] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:04.266] [Lambda worker] [info] -- hyperspecialization took 1.543631s\n[2022-11-09 05:53:04.301] [global] [info] TransformStage - Optimization via LLVM passes took 0.035430 ms\n[2022-11-09 05:53:04.301] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:04.314] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:04.314] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:04.314] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.628] [Lambda worker] [info] fast path took: 5.313971s\n[2022-11-09 05:53:09.628] [Lambda worker] [info] Input rows processed: normal: 9524 unresolved: 64722\n[2022-11-09 05:53:09.628] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 64722\n[2022-11-09 05:53:09.628] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.628] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.628] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.845] [Lambda worker] [info] Compilation of slow path took 1.217340s\n[2022-11-09 05:53:14.767] [Lambda worker] [info] Resolved buffer, compiled: 4569 interpreted: 27996 unresolved: 0\n[2022-11-09 05:53:18.755] [Lambda worker] [info] Resolved buffer, compiled: 4516 interpreted: 27641 unresolved: 0\n[2022-11-09 05:53:18.761] [Lambda worker] [info] Exception resolution/slow path done. Took 9.133212s\n[2022-11-09 05:53:18.761] [Lambda worker] [info] Data processed in 14.4473s 34.63 KB (1433 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.761] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.761] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.761] [Lambda worker] [info] Writing output from 2 parts (34.63 KB, 1433 rows)\n[2022-11-09 05:53:18.761] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.761] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.761] [s3fs] [info] Writing buffer of size 17896\n[2022-11-09 05:53:18.761] [s3fs] [info] Writing buffer of size 17567\n[2022-11-09 05:53:18.761] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.761] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.826] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.826] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.826] [Lambda worker] [info] Took 14.512335s in total\n[2022-11-09 05:53:18.826] [Lambda worker] [info] Paths rows took: normal: 9524 general: 9085 interpreter: 55637 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2021-10-15.json:2415919104-2684354560"]},{"container":{"reused":true,"requestId":"b7b27930-69a9-4ce3-8979-4e8630d43ea0","uuid":"824743bd-39c3-4a88-93e4-d1ea8e716734","msRemaining":583797,"requestsServed":2,"startTimestamp":1667973146028792003,"deadlineTimestamp":1667973809628000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.649] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.675] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.698] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.698] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.698] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2021-10-15.json:1610612736-1879048192\n[2022-11-09 05:53:02.699] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2021-10-15.json:1610612736-1879048192\n[2022-11-09 05:53:02.700] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.769] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.774] [global] [info] retrieving pythonic sample took: 0.003523s\n[2022-11-09 05:53:02.839] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.918] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.918] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.918] [fileinputoperator] [info] Filling sample cache for json operator took 0.077448s (1 entries, 0 rows)\n[2022-11-09 05:53:02.950] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.103] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.278] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.278] [fileinputoperator] [info] Extracting row sample took 0.360232s\n[2022-11-09 05:53:03.325] [global] [info] retrieving pythonic sample took: 0.484545s\n[2022-11-09 05:53:03.335] [hyper specializer] [info] Deserialization of Code context took 0.634854s\n[2022-11-09 05:53:03.335] [hyper specializer] [info] Total Stage Decode took 0.635895s\n[2022-11-09 05:53:03.412] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:03.412] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.412] [fileinputoperator] [info] Filling sample cache for json operator took 0.047966s (1 entries, 0 rows)\n[2022-11-09 05:53:03.443] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:03.526] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:03.663] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.663] [fileinputoperator] [info] Extracting row sample took 0.251253s\n[2022-11-09 05:53:03.827] [hyper specializer] [info] sampling (setInputFiles) took 0.492307s\n[2022-11-09 05:53:03.828] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.828] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.828] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.828] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.828] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.828] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.828] [global] [warning] requested 2000 rows for sampling, but only 192 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.834] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.834] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.880] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:04.033] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:04.033] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:04.033] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:04.033] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:04.036] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:04.039] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:04.041] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:04.043] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:04.044] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:04.045] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:04.052] [hyper specializer] [info] generated code in 0.018863s\n[2022-11-09 05:53:04.095] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:04.095] [Lambda worker] [info] -- hyperspecialization took 1.397623s\n[2022-11-09 05:53:04.131] [global] [info] TransformStage - Optimization via LLVM passes took 0.035684 ms\n[2022-11-09 05:53:04.131] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:04.144] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:04.145] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:04.145] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.232] [Lambda worker] [info] fast path took: 5.086931s\n[2022-11-09 05:53:09.232] [Lambda worker] [info] Input rows processed: normal: 10658 unresolved: 66628\n[2022-11-09 05:53:09.232] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 66628\n[2022-11-09 05:53:09.232] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.232] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.232] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.460] [Lambda worker] [info] Compilation of slow path took 1.228834s\n[2022-11-09 05:53:14.425] [Lambda worker] [info] Resolved buffer, compiled: 4405 interpreted: 27330 unresolved: 0\n[2022-11-09 05:53:18.602] [Lambda worker] [info] Resolved buffer, compiled: 4911 interpreted: 29982 unresolved: 0\n[2022-11-09 05:53:18.607] [Lambda worker] [info] Exception resolution/slow path done. Took 9.375732s\n[2022-11-09 05:53:18.607] [Lambda worker] [info] Data processed in 14.4628s 39.46 KB (1635 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.607] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.607] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.607] [Lambda worker] [info] Writing output from 2 parts (39.46 KB, 1635 rows)\n[2022-11-09 05:53:18.607] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.608] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.608] [s3fs] [info] Writing buffer of size 17947\n[2022-11-09 05:53:18.608] [s3fs] [info] Writing buffer of size 22457\n[2022-11-09 05:53:18.608] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.608] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.830] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.830] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.830] [Lambda worker] [info] Took 14.685119s in total\n[2022-11-09 05:53:18.830] [Lambda worker] [info] Paths rows took: normal: 10658 general: 9316 interpreter: 57312 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2021-10-15.json:1610612736-1879048192"]},{"container":{"reused":true,"requestId":"7884df47-40d2-406c-a94f-42797489a15f","uuid":"b5cdc169-6335-4a0b-a147-bff1b3155c85","msRemaining":583714,"requestsServed":2,"startTimestamp":1667973147198795022,"deadlineTimestamp":1667973809574000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.608] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.641] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.665] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.665] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.665] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2021-10-15.json:268435456-536870912\n[2022-11-09 05:53:02.667] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2021-10-15.json:268435456-536870912\n[2022-11-09 05:53:02.668] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.744] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.748] [global] [info] retrieving pythonic sample took: 0.003641s\n[2022-11-09 05:53:02.815] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.816] [global] [info] retrieving pythonic sample took: 0.000260s\n[2022-11-09 05:53:02.826] [hyper specializer] [info] Deserialization of Code context took 0.158391s\n[2022-11-09 05:53:02.826] [hyper specializer] [info] Total Stage Decode took 0.159416s\n[2022-11-09 05:53:02.923] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:02.926] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.926] [fileinputoperator] [info] Filling sample cache for json operator took 0.100164s (1 entries, 0 rows)\n[2022-11-09 05:53:02.955] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:03.078] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:03.205] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.205] [fileinputoperator] [info] Extracting row sample took 0.278847s\n[2022-11-09 05:53:03.361] [hyper specializer] [info] sampling (setInputFiles) took 0.535258s\n[2022-11-09 05:53:03.362] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.362] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.362] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.362] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.362] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.362] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.362] [global] [warning] requested 2000 rows for sampling, but only 184 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.368] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.368] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.412] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.557] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.557] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.557] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.557] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.560] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.563] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.565] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.566] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.568] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.569] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.576] [hyper specializer] [info] generated code in 0.019087s\n[2022-11-09 05:53:03.620] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.620] [Lambda worker] [info] -- hyperspecialization took 0.954416s\n[2022-11-09 05:53:03.657] [global] [info] TransformStage - Optimization via LLVM passes took 0.036652 ms\n[2022-11-09 05:53:03.657] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.669] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.669] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.669] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.123] [Lambda worker] [info] fast path took: 4.453090s\n[2022-11-09 05:53:08.123] [Lambda worker] [info] Input rows processed: normal: 11020 unresolved: 79321\n[2022-11-09 05:53:08.123] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 79321\n[2022-11-09 05:53:08.123] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.123] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.123] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.375] [Lambda worker] [info] Compilation of slow path took 1.252763s\n[2022-11-09 05:53:13.980] [Lambda worker] [info] Resolved buffer, compiled: 4407 interpreted: 34585 unresolved: 0\n[2022-11-09 05:53:18.794] [Lambda worker] [info] Resolved buffer, compiled: 4811 interpreted: 35518 unresolved: 0\n[2022-11-09 05:53:18.800] [Lambda worker] [info] Exception resolution/slow path done. Took 10.677088s\n[2022-11-09 05:53:18.800] [Lambda worker] [info] Data processed in 15.1303s 48.40 KB (2008 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.800] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.800] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.800] [Lambda worker] [info] Writing output from 2 parts (48.40 KB, 2008 rows)\n[2022-11-09 05:53:18.800] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.800] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.800] [s3fs] [info] Writing buffer of size 24196\n[2022-11-09 05:53:18.800] [s3fs] [info] Writing buffer of size 25369\n[2022-11-09 05:53:18.800] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:18.800] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.859] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.859] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.859] [Lambda worker] [info] Took 15.189393s in total\n[2022-11-09 05:53:18.859] [Lambda worker] [info] Paths rows took: normal: 11020 general: 9218 interpreter: 70103 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2021-10-15.json:268435456-536870912"]},{"container":{"reused":true,"requestId":"58fbf849-a24d-435e-9305-9b24970696e4","uuid":"7e493c82-6acd-4385-9cbc-a47fa6e409f5","msRemaining":583197,"requestsServed":2,"startTimestamp":1667973146859167500,"deadlineTimestamp":1667973809097000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.119] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.153] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.176] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.176] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.176] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:805306368-1073741824\n[2022-11-09 05:53:02.177] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:805306368-1073741824\n[2022-11-09 05:53:02.178] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.260] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.264] [global] [info] retrieving pythonic sample took: 0.003600s\n[2022-11-09 05:53:02.333] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.334] [global] [info] retrieving pythonic sample took: 0.000282s\n[2022-11-09 05:53:02.344] [hyper specializer] [info] Deserialization of Code context took 0.165842s\n[2022-11-09 05:53:02.344] [hyper specializer] [info] Total Stage Decode took 0.166880s\n[2022-11-09 05:53:02.410] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.410] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.410] [fileinputoperator] [info] Filling sample cache for json operator took 0.065873s (1 entries, 0 rows)\n[2022-11-09 05:53:02.465] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.550] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.660] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.660] [fileinputoperator] [info] Extracting row sample took 0.250370s\n[2022-11-09 05:53:02.798] [hyper specializer] [info] sampling (setInputFiles) took 0.454125s\n[2022-11-09 05:53:02.799] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.799] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.799] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.799] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.799] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.799] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.799] [global] [warning] requested 2000 rows for sampling, but only 125 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.802] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.803] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.841] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.006] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.006] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.006] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.006] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.009] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.011] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.013] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.015] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.017] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.018] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.025] [hyper specializer] [info] generated code in 0.019373s\n[2022-11-09 05:53:03.061] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.061] [Lambda worker] [info] -- hyperspecialization took 0.884816s\n[2022-11-09 05:53:03.098] [global] [info] TransformStage - Optimization via LLVM passes took 0.037145 ms\n[2022-11-09 05:53:03.098] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.110] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.111] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.111] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.357] [Lambda worker] [info] fast path took: 5.246824s\n[2022-11-09 05:53:08.357] [Lambda worker] [info] Input rows processed: normal: 8125 unresolved: 69955\n[2022-11-09 05:53:08.357] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 69955\n[2022-11-09 05:53:08.358] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.358] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.358] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.597] [Lambda worker] [info] Compilation of slow path took 1.239447s\n[2022-11-09 05:53:14.234] [Lambda worker] [info] Resolved buffer, compiled: 2718 interpreted: 32620 unresolved: 0\n[2022-11-09 05:53:18.811] [Lambda worker] [info] Resolved buffer, compiled: 2753 interpreted: 31864 unresolved: 0\n[2022-11-09 05:53:18.817] [Lambda worker] [info] Exception resolution/slow path done. Took 10.459641s\n[2022-11-09 05:53:18.817] [Lambda worker] [info] Data processed in 15.7066s 50.04 KB (2081 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.817] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.817] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.817] [Lambda worker] [info] Writing output from 2 parts (50.04 KB, 2081 rows)\n[2022-11-09 05:53:18.817] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.817] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.817] [s3fs] [info] Writing buffer of size 23648\n[2022-11-09 05:53:18.817] [s3fs] [info] Writing buffer of size 27589\n[2022-11-09 05:53:18.817] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:18.817] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.898] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.898] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.898] [Lambda worker] [info] Took 15.787880s in total\n[2022-11-09 05:53:18.898] [Lambda worker] [info] Paths rows took: normal: 8125 general: 5471 interpreter: 64484 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:805306368-1073741824"]},{"container":{"reused":true,"requestId":"ae46c7d5-0463-4b49-aee7-8a8119cb713b","uuid":"4ba09c69-000c-441d-9622-5289f9374f44","msRemaining":582849,"requestsServed":2,"startTimestamp":1667973147472941289,"deadlineTimestamp":1667973808801000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.821] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.854] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.876] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.876] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.876] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:805306368-1073741824\n[2022-11-09 05:53:01.878] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:805306368-1073741824\n[2022-11-09 05:53:01.879] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.950] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.954] [global] [info] retrieving pythonic sample took: 0.003668s\n[2022-11-09 05:53:02.021] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.080] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.081] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.081] [fileinputoperator] [info] Filling sample cache for json operator took 0.058618s (1 entries, 0 rows)\n[2022-11-09 05:53:02.119] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.264] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.438] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.438] [fileinputoperator] [info] Extracting row sample took 0.357325s\n[2022-11-09 05:53:02.484] [global] [info] retrieving pythonic sample took: 0.462465s\n[2022-11-09 05:53:02.494] [hyper specializer] [info] Deserialization of Code context took 0.615563s\n[2022-11-09 05:53:02.494] [hyper specializer] [info] Total Stage Decode took 0.616634s\n[2022-11-09 05:53:02.563] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.564] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.564] [fileinputoperator] [info] Filling sample cache for json operator took 0.040085s (1 entries, 0 rows)\n[2022-11-09 05:53:02.587] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.682] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.810] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.810] [fileinputoperator] [info] Extracting row sample took 0.246119s\n[2022-11-09 05:53:02.976] [hyper specializer] [info] sampling (setInputFiles) took 0.481435s\n[2022-11-09 05:53:02.976] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.976] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.977] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.977] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.977] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.977] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.977] [global] [warning] requested 2000 rows for sampling, but only 181 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.984] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.984] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.031] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.193] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.194] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.194] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.194] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.197] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.200] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.201] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.203] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.205] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.206] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.213] [hyper specializer] [info] generated code in 0.019633s\n[2022-11-09 05:53:03.256] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.256] [Lambda worker] [info] -- hyperspecialization took 1.380057s\n[2022-11-09 05:53:03.293] [global] [info] TransformStage - Optimization via LLVM passes took 0.036589 ms\n[2022-11-09 05:53:03.293] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.306] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.306] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.306] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.584] [Lambda worker] [info] fast path took: 5.277858s\n[2022-11-09 05:53:08.584] [Lambda worker] [info] Input rows processed: normal: 7650 unresolved: 75287\n[2022-11-09 05:53:08.584] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 75287\n[2022-11-09 05:53:08.584] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.584] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.584] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.809] [Lambda worker] [info] Compilation of slow path took 1.224932s\n[2022-11-09 05:53:14.600] [Lambda worker] [info] Resolved buffer, compiled: 3777 interpreted: 36741 unresolved: 0\n[2022-11-09 05:53:18.878] [Lambda worker] [info] Resolved buffer, compiled: 3114 interpreted: 31655 unresolved: 0\n[2022-11-09 05:53:18.884] [Lambda worker] [info] Exception resolution/slow path done. Took 10.299295s\n[2022-11-09 05:53:18.884] [Lambda worker] [info] Data processed in 15.5773s 63.72 KB (2664 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.884] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.884] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.884] [Lambda worker] [info] Writing output from 2 parts (63.72 KB, 2664 rows)\n[2022-11-09 05:53:18.884] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.884] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.884] [s3fs] [info] Writing buffer of size 38502\n[2022-11-09 05:53:18.884] [s3fs] [info] Writing buffer of size 26750\n[2022-11-09 05:53:18.884] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.884] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.950] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.950] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.951] [Lambda worker] [info] Took 15.644278s in total\n[2022-11-09 05:53:18.951] [Lambda worker] [info] Paths rows took: normal: 7650 general: 6891 interpreter: 68396 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:805306368-1073741824"]},{"container":{"reused":true,"requestId":"a3fce1cd-cdfe-474b-8cb7-a2fc98db4a84","uuid":"83a1dceb-d9c1-4a08-8825-f3774472cc7b","msRemaining":582606,"requestsServed":2,"startTimestamp":1667973146700673087,"deadlineTimestamp":1667973808552000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.571] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.604] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.626] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.626] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.626] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2017-10-15.json:1879048192-2147483648\n[2022-11-09 05:53:01.628] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2017-10-15.json:1879048192-2147483648\n[2022-11-09 05:53:01.629] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.700] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.704] [global] [info] retrieving pythonic sample took: 0.003811s\n[2022-11-09 05:53:01.771] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.853] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.853] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.853] [fileinputoperator] [info] Filling sample cache for json operator took 0.081257s (1 entries, 0 rows)\n[2022-11-09 05:53:01.892] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.053] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.229] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.229] [fileinputoperator] [info] Extracting row sample took 0.375408s\n[2022-11-09 05:53:02.276] [global] [info] retrieving pythonic sample took: 0.504249s\n[2022-11-09 05:53:02.286] [hyper specializer] [info] Deserialization of Code context took 0.657329s\n[2022-11-09 05:53:02.286] [hyper specializer] [info] Total Stage Decode took 0.658368s\n[2022-11-09 05:53:02.388] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.389] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.389] [fileinputoperator] [info] Filling sample cache for json operator took 0.073197s (1 entries, 0 rows)\n[2022-11-09 05:53:02.423] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.520] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.679] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.679] [fileinputoperator] [info] Extracting row sample took 0.290422s\n[2022-11-09 05:53:02.856] [hyper specializer] [info] sampling (setInputFiles) took 0.570022s\n[2022-11-09 05:53:02.857] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.857] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.857] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.857] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.857] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.857] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.857] [global] [warning] requested 2000 rows for sampling, but only 150 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.862] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.862] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.913] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.107] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.107] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.107] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.107] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.110] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.113] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.115] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.117] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.118] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.119] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.127] [hyper specializer] [info] generated code in 0.019453s\n[2022-11-09 05:53:03.174] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.174] [Lambda worker] [info] -- hyperspecialization took 1.547320s\n[2022-11-09 05:53:03.210] [global] [info] TransformStage - Optimization via LLVM passes took 0.036436 ms\n[2022-11-09 05:53:03.210] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.223] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.223] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.223] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.598] [Lambda worker] [info] fast path took: 4.375354s\n[2022-11-09 05:53:07.598] [Lambda worker] [info] Input rows processed: normal: 13531 unresolved: 89394\n[2022-11-09 05:53:07.598] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 89394\n[2022-11-09 05:53:07.599] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.599] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.599] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.830] [Lambda worker] [info] Compilation of slow path took 1.231936s\n[2022-11-09 05:53:13.801] [Lambda worker] [info] Resolved buffer, compiled: 3088 interpreted: 40847 unresolved: 0\n[2022-11-09 05:53:18.851] [Lambda worker] [info] Resolved buffer, compiled: 3458 interpreted: 42001 unresolved: 0\n[2022-11-09 05:53:18.857] [Lambda worker] [info] Exception resolution/slow path done. Took 11.258414s\n[2022-11-09 05:53:18.857] [Lambda worker] [info] Data processed in 15.634s 49.88 KB (2123 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.857] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:18.857] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.857] [Lambda worker] [info] Writing output from 2 parts (49.88 KB, 2123 rows)\n[2022-11-09 05:53:18.857] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:18.857] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.857] [s3fs] [info] Writing buffer of size 25051\n[2022-11-09 05:53:18.857] [s3fs] [info] Writing buffer of size 26030\n[2022-11-09 05:53:18.857] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:18.857] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.945] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.945] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.945] [Lambda worker] [info] Took 15.722027s in total\n[2022-11-09 05:53:18.945] [Lambda worker] [info] Paths rows took: normal: 13531 general: 6546 interpreter: 82848 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2017-10-15.json:1879048192-2147483648"]},{"container":{"reused":true,"requestId":"aca0952d-51c1-49ad-9495-84425570233f","uuid":"31097bfe-eccf-457b-b636-f23284299c5d","msRemaining":582776,"requestsServed":2,"startTimestamp":1667973146871765096,"deadlineTimestamp":1667973808731000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.750] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.783] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.805] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.805] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.805] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:4026531840-4294967296\n[2022-11-09 05:53:01.807] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:4026531840-4294967296\n[2022-11-09 05:53:01.808] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.877] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.882] [global] [info] retrieving pythonic sample took: 0.003532s\n[2022-11-09 05:53:01.949] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.013] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.013] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.013] [fileinputoperator] [info] Filling sample cache for json operator took 0.062980s (1 entries, 0 rows)\n[2022-11-09 05:53:02.039] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.193] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.370] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.370] [fileinputoperator] [info] Extracting row sample took 0.356204s\n[2022-11-09 05:53:02.417] [global] [info] retrieving pythonic sample took: 0.466353s\n[2022-11-09 05:53:02.427] [hyper specializer] [info] Deserialization of Code context took 0.618926s\n[2022-11-09 05:53:02.427] [hyper specializer] [info] Total Stage Decode took 0.619970s\n[2022-11-09 05:53:02.516] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:4026531840-4294967296 on 256.00 KB\n[2022-11-09 05:53:02.516] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.516] [fileinputoperator] [info] Filling sample cache for json operator took 0.060419s (1 entries, 0 rows)\n[2022-11-09 05:53:02.548] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:4026531840-4294967296 on 256.00 KB\n[2022-11-09 05:53:02.654] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:4026531840-4294967296 on 256.00 KB\n[2022-11-09 05:53:02.809] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.809] [fileinputoperator] [info] Extracting row sample took 0.292851s\n[2022-11-09 05:53:02.987] [hyper specializer] [info] sampling (setInputFiles) took 0.560466s\n[2022-11-09 05:53:02.988] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.988] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.988] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.988] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.988] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.988] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.988] [global] [warning] requested 2000 rows for sampling, but only 148 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.994] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.994] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.044] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.234] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.234] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.234] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.234] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.237] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.240] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.242] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.244] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.245] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.246] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.253] [hyper specializer] [info] generated code in 0.019371s\n[2022-11-09 05:53:03.299] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.299] [Lambda worker] [info] -- hyperspecialization took 1.493494s\n[2022-11-09 05:53:03.335] [global] [info] TransformStage - Optimization via LLVM passes took 0.035659 ms\n[2022-11-09 05:53:03.335] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.347] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.347] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.347] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.938] [Lambda worker] [info] fast path took: 5.590769s\n[2022-11-09 05:53:08.938] [Lambda worker] [info] Input rows processed: normal: 9403 unresolved: 69153\n[2022-11-09 05:53:08.938] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 69153\n[2022-11-09 05:53:08.938] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.938] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.938] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.161] [Lambda worker] [info] Compilation of slow path took 1.223460s\n[2022-11-09 05:53:14.498] [Lambda worker] [info] Resolved buffer, compiled: 3344 interpreted: 31559 unresolved: 0\n[2022-11-09 05:53:18.890] [Lambda worker] [info] Resolved buffer, compiled: 2775 interpreted: 31475 unresolved: 0\n[2022-11-09 05:53:18.896] [Lambda worker] [info] Exception resolution/slow path done. Took 9.958212s\n[2022-11-09 05:53:18.896] [Lambda worker] [info] Data processed in 15.5491s 45.61 KB (1915 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.896] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.896] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.896] [Lambda worker] [info] Writing output from 2 parts (45.61 KB, 1915 rows)\n[2022-11-09 05:53:18.896] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.896] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.896] [s3fs] [info] Writing buffer of size 23914\n[2022-11-09 05:53:18.896] [s3fs] [info] Writing buffer of size 22794\n[2022-11-09 05:53:18.896] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.896] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:18.954] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:18.954] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:18.954] [Lambda worker] [info] Took 15.607223s in total\n[2022-11-09 05:53:18.954] [Lambda worker] [info] Paths rows took: normal: 9403 general: 6119 interpreter: 63034 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:4026531840-4294967296"]},{"container":{"reused":true,"requestId":"ddc1606a-b9a9-40c3-a67f-fa432b7e5298","uuid":"46a9072d-eede-49bf-9e19-101a1bee9aaf","msRemaining":582604,"requestsServed":2,"startTimestamp":1667973147657807646,"deadlineTimestamp":1667973808645000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.664] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.696] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.719] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.719] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.719] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:1879048192-2147483648\n[2022-11-09 05:53:01.720] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:1879048192-2147483648\n[2022-11-09 05:53:01.721] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.792] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.798] [global] [info] retrieving pythonic sample took: 0.004239s\n[2022-11-09 05:53:01.865] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.940] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.940] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.940] [fileinputoperator] [info] Filling sample cache for json operator took 0.074139s (1 entries, 0 rows)\n[2022-11-09 05:53:01.969] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.141] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.318] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.318] [fileinputoperator] [info] Extracting row sample took 0.377221s\n[2022-11-09 05:53:02.365] [global] [info] retrieving pythonic sample took: 0.498529s\n[2022-11-09 05:53:02.375] [hyper specializer] [info] Deserialization of Code context took 0.653322s\n[2022-11-09 05:53:02.375] [hyper specializer] [info] Total Stage Decode took 0.654348s\n[2022-11-09 05:53:02.472] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.472] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.472] [fileinputoperator] [info] Filling sample cache for json operator took 0.068218s (1 entries, 0 rows)\n[2022-11-09 05:53:02.541] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.635] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:1879048192-2147483648 on 256.00 KB\n[2022-11-09 05:53:02.782] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.783] [fileinputoperator] [info] Extracting row sample took 0.309926s\n[2022-11-09 05:53:02.959] [hyper specializer] [info] sampling (setInputFiles) took 0.584556s\n[2022-11-09 05:53:02.960] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.960] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.960] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.960] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.960] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.960] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.960] [global] [warning] requested 2000 rows for sampling, but only 150 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.966] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.966] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.015] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.193] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.193] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.193] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.193] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.196] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.199] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.201] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.203] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.204] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.205] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.212] [hyper specializer] [info] generated code in 0.019372s\n[2022-11-09 05:53:03.258] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.258] [Lambda worker] [info] -- hyperspecialization took 1.539231s\n[2022-11-09 05:53:03.294] [global] [info] TransformStage - Optimization via LLVM passes took 0.036069 ms\n[2022-11-09 05:53:03.295] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.307] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.307] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.307] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.591] [Lambda worker] [info] fast path took: 5.283729s\n[2022-11-09 05:53:08.591] [Lambda worker] [info] Input rows processed: normal: 10464 unresolved: 71749\n[2022-11-09 05:53:08.591] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 71749\n[2022-11-09 05:53:08.591] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.591] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.591] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.831] [Lambda worker] [info] Compilation of slow path took 1.240235s\n[2022-11-09 05:53:14.453] [Lambda worker] [info] Resolved buffer, compiled: 3580 interpreted: 32732 unresolved: 0\n[2022-11-09 05:53:18.869] [Lambda worker] [info] Resolved buffer, compiled: 3340 interpreted: 32097 unresolved: 0\n[2022-11-09 05:53:18.874] [Lambda worker] [info] Exception resolution/slow path done. Took 10.283390s\n[2022-11-09 05:53:18.874] [Lambda worker] [info] Data processed in 15.5673s 57.44 KB (2417 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.874] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.874] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.874] [Lambda worker] [info] Writing output from 2 parts (57.44 KB, 2417 rows)\n[2022-11-09 05:53:18.874] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.874] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.874] [s3fs] [info] Writing buffer of size 29007\n[2022-11-09 05:53:18.874] [s3fs] [info] Writing buffer of size 29813\n[2022-11-09 05:53:18.875] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:18.875] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:19.040] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:19.040] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:19.040] [Lambda worker] [info] Took 15.732872s in total\n[2022-11-09 05:53:19.040] [Lambda worker] [info] Paths rows took: normal: 10464 general: 6920 interpreter: 64829 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:1879048192-2147483648"]},{"container":{"reused":true,"requestId":"0581e5b4-d4f0-4d13-9dcd-d1bcc12c46c3","uuid":"c936e487-ca8e-4ce2-a8b1-35d92037c437","msRemaining":582711,"requestsServed":2,"startTimestamp":1667973146996328204,"deadlineTimestamp":1667973808769000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.788] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.821] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.844] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.844] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.844] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:0-268435456\n[2022-11-09 05:53:01.845] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:0-268435456\n[2022-11-09 05:53:01.846] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.916] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.921] [global] [info] retrieving pythonic sample took: 0.003480s\n[2022-11-09 05:53:01.988] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.063] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.063] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.063] [fileinputoperator] [info] Filling sample cache for json operator took 0.073957s (1 entries, 0 rows)\n[2022-11-09 05:53:02.099] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.259] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.434] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.434] [fileinputoperator] [info] Extracting row sample took 0.371241s\n[2022-11-09 05:53:02.482] [global] [info] retrieving pythonic sample took: 0.492923s\n[2022-11-09 05:53:02.492] [hyper specializer] [info] Deserialization of Code context took 0.645611s\n[2022-11-09 05:53:02.492] [hyper specializer] [info] Total Stage Decode took 0.646665s\n[2022-11-09 05:53:02.591] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:02.591] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.591] [fileinputoperator] [info] Filling sample cache for json operator took 0.070345s (1 entries, 0 rows)\n[2022-11-09 05:53:02.622] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:02.718] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:02.827] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.827] [fileinputoperator] [info] Extracting row sample took 0.235530s\n[2022-11-09 05:53:02.997] [hyper specializer] [info] sampling (setInputFiles) took 0.505407s\n[2022-11-09 05:53:02.998] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.998] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.998] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.998] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.998] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.998] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.998] [global] [warning] requested 2000 rows for sampling, but only 116 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.003] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.003] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.051] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.262] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.262] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.262] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.262] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.265] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.268] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.270] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.272] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.273] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.274] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.281] [hyper specializer] [info] generated code in 0.019224s\n[2022-11-09 05:53:03.327] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.327] [Lambda worker] [info] -- hyperspecialization took 1.483174s\n[2022-11-09 05:53:03.364] [global] [info] TransformStage - Optimization via LLVM passes took 0.036904 ms\n[2022-11-09 05:53:03.364] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.377] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.377] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.377] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.791] [Lambda worker] [info] fast path took: 5.414281s\n[2022-11-09 05:53:08.791] [Lambda worker] [info] Input rows processed: normal: 8136 unresolved: 68255\n[2022-11-09 05:53:08.791] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 68255\n[2022-11-09 05:53:08.791] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.791] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.791] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.051] [Lambda worker] [info] Compilation of slow path took 1.259468s\n[2022-11-09 05:53:14.282] [Lambda worker] [info] Resolved buffer, compiled: 2873 interpreted: 30093 unresolved: 0\n[2022-11-09 05:53:18.990] [Lambda worker] [info] Resolved buffer, compiled: 2833 interpreted: 32456 unresolved: 0\n[2022-11-09 05:53:18.996] [Lambda worker] [info] Exception resolution/slow path done. Took 10.205037s\n[2022-11-09 05:53:18.996] [Lambda worker] [info] Data processed in 15.6195s 45.69 KB (1905 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:18.996] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.996] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:18.996] [Lambda worker] [info] Writing output from 2 parts (45.69 KB, 1905 rows)\n[2022-11-09 05:53:18.996] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.996] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:18.996] [s3fs] [info] Writing buffer of size 22361\n[2022-11-09 05:53:18.996] [s3fs] [info] Writing buffer of size 24429\n[2022-11-09 05:53:18.996] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:18.996] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:19.057] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:19.057] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:19.057] [Lambda worker] [info] Took 15.680212s in total\n[2022-11-09 05:53:19.057] [Lambda worker] [info] Paths rows took: normal: 8136 general: 5706 interpreter: 62549 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:0-268435456"]},{"container":{"reused":true,"requestId":"7bacbb53-845d-48ee-9992-0d035f988ae6","uuid":"f0b6381d-f4ce-401a-a0bf-c3e4da7e7fec","msRemaining":582488,"requestsServed":2,"startTimestamp":1667973147556692728,"deadlineTimestamp":1667973808611000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.630] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.664] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.687] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.687] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.687] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:01.688] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:01.689] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.759] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.764] [global] [info] retrieving pythonic sample took: 0.003527s\n[2022-11-09 05:53:01.831] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.899] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.899] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.899] [fileinputoperator] [info] Filling sample cache for json operator took 0.067467s (1 entries, 0 rows)\n[2022-11-09 05:53:01.929] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.087] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.266] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.266] [fileinputoperator] [info] Extracting row sample took 0.367066s\n[2022-11-09 05:53:02.315] [global] [info] retrieving pythonic sample took: 0.482833s\n[2022-11-09 05:53:02.325] [hyper specializer] [info] Deserialization of Code context took 0.636233s\n[2022-11-09 05:53:02.325] [hyper specializer] [info] Total Stage Decode took 0.637301s\n[2022-11-09 05:53:02.403] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.403] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.403] [fileinputoperator] [info] Filling sample cache for json operator took 0.048210s (1 entries, 0 rows)\n[2022-11-09 05:53:02.445] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.561] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.705] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.706] [fileinputoperator] [info] Extracting row sample took 0.302031s\n[2022-11-09 05:53:02.881] [hyper specializer] [info] sampling (setInputFiles) took 0.555654s\n[2022-11-09 05:53:02.882] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.882] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.882] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.882] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.882] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.882] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.882] [global] [warning] requested 2000 rows for sampling, but only 171 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.889] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.889] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.939] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.115] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.115] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.115] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.115] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.118] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.121] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.123] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.125] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.126] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.127] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.135] [hyper specializer] [info] generated code in 0.019675s\n[2022-11-09 05:53:03.180] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.180] [Lambda worker] [info] -- hyperspecialization took 1.493679s\n[2022-11-09 05:53:03.218] [global] [info] TransformStage - Optimization via LLVM passes took 0.036956 ms\n[2022-11-09 05:53:03.218] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.230] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.230] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.230] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.513] [Lambda worker] [info] fast path took: 5.283000s\n[2022-11-09 05:53:08.513] [Lambda worker] [info] Input rows processed: normal: 9648 unresolved: 77190\n[2022-11-09 05:53:08.513] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 77190\n[2022-11-09 05:53:08.513] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.513] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.513] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.767] [Lambda worker] [info] Compilation of slow path took 1.253966s\n[2022-11-09 05:53:14.413] [Lambda worker] [info] Resolved buffer, compiled: 3802 interpreted: 33923 unresolved: 0\n[2022-11-09 05:53:19.054] [Lambda worker] [info] Resolved buffer, compiled: 6141 interpreted: 33324 unresolved: 0\n[2022-11-09 05:53:19.061] [Lambda worker] [info] Exception resolution/slow path done. Took 10.547360s\n[2022-11-09 05:53:19.061] [Lambda worker] [info] Data processed in 15.8305s 67.41 KB (2841 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:19.061] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:19.061] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:19.061] [Lambda worker] [info] Writing output from 2 parts (67.41 KB, 2841 rows)\n[2022-11-09 05:53:19.061] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:19.061] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:19.061] [s3fs] [info] Writing buffer of size 35663\n[2022-11-09 05:53:19.061] [s3fs] [info] Writing buffer of size 33365\n[2022-11-09 05:53:19.061] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:19.061] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:19.122] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:19.122] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:19.122] [Lambda worker] [info] Took 15.891643s in total\n[2022-11-09 05:53:19.122] [Lambda worker] [info] Paths rows took: normal: 9648 general: 9943 interpreter: 67247 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:1073741824-1342177280"]},{"container":{"reused":true,"requestId":"f199b93d-afd9-4b9a-8e7a-f101d98e89e2","uuid":"8094b3ec-3533-4bde-8a6f-bce23efb36d7","msRemaining":583505,"requestsServed":2,"startTimestamp":1667973146635860987,"deadlineTimestamp":1667973809683000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.702] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.726] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.749] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.749] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.749] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2021-10-15.json:2952790016-3221225472\n[2022-11-09 05:53:02.750] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2021-10-15.json:2952790016-3221225472\n[2022-11-09 05:53:02.751] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.821] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.825] [global] [info] retrieving pythonic sample took: 0.003628s\n[2022-11-09 05:53:02.892] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.029] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.029] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.029] [fileinputoperator] [info] Filling sample cache for json operator took 0.136275s (1 entries, 0 rows)\n[2022-11-09 05:53:03.061] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.221] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.396] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.396] [fileinputoperator] [info] Extracting row sample took 0.367006s\n[2022-11-09 05:53:03.443] [global] [info] retrieving pythonic sample took: 0.550081s\n[2022-11-09 05:53:03.453] [hyper specializer] [info] Deserialization of Code context took 0.701485s\n[2022-11-09 05:53:03.453] [hyper specializer] [info] Total Stage Decode took 0.702511s\n[2022-11-09 05:53:03.571] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:2952790016-3221225472 on 256.00 KB\n[2022-11-09 05:53:03.571] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.571] [fileinputoperator] [info] Filling sample cache for json operator took 0.088963s (1 entries, 0 rows)\n[2022-11-09 05:53:03.621] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:2952790016-3221225472 on 256.00 KB\n[2022-11-09 05:53:03.718] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:2952790016-3221225472 on 256.00 KB\n[2022-11-09 05:53:03.860] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.860] [fileinputoperator] [info] Extracting row sample took 0.288714s\n[2022-11-09 05:53:04.026] [hyper specializer] [info] sampling (setInputFiles) took 0.572767s\n[2022-11-09 05:53:04.026] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:04.026] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:04.026] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:04.026] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:04.026] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:04.026] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:04.026] [global] [warning] requested 2000 rows for sampling, but only 155 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:04.033] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:04.033] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:04.079] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:04.260] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:04.261] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:04.261] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:04.261] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:04.264] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:04.267] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:04.268] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:04.270] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:04.272] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:04.273] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:04.280] [hyper specializer] [info] generated code in 0.019821s\n[2022-11-09 05:53:04.323] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:04.323] [Lambda worker] [info] -- hyperspecialization took 1.573839s\n[2022-11-09 05:53:04.359] [global] [info] TransformStage - Optimization via LLVM passes took 0.036388 ms\n[2022-11-09 05:53:04.359] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:04.372] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:04.372] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:04.372] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.569] [Lambda worker] [info] fast path took: 5.197360s\n[2022-11-09 05:53:09.569] [Lambda worker] [info] Input rows processed: normal: 10799 unresolved: 68898\n[2022-11-09 05:53:09.569] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 68898\n[2022-11-09 05:53:09.569] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.569] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.569] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.796] [Lambda worker] [info] Compilation of slow path took 1.227131s\n[2022-11-09 05:53:14.907] [Lambda worker] [info] Resolved buffer, compiled: 4897 interpreted: 29673 unresolved: 0\n[2022-11-09 05:53:19.076] [Lambda worker] [info] Resolved buffer, compiled: 4682 interpreted: 29646 unresolved: 0\n[2022-11-09 05:53:19.082] [Lambda worker] [info] Exception resolution/slow path done. Took 9.512288s\n[2022-11-09 05:53:19.082] [Lambda worker] [info] Data processed in 14.7098s 30.90 KB (1281 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:19.082] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:19.082] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:19.082] [Lambda worker] [info] Writing output from 2 parts (30.90 KB, 1281 rows)\n[2022-11-09 05:53:19.082] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:19.082] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:19.082] [s3fs] [info] Writing buffer of size 16839\n[2022-11-09 05:53:19.082] [s3fs] [info] Writing buffer of size 14804\n[2022-11-09 05:53:19.082] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:19.082] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:19.177] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:19.177] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:19.177] [Lambda worker] [info] Took 14.804878s in total\n[2022-11-09 05:53:19.177] [Lambda worker] [info] Paths rows took: normal: 10799 general: 9579 interpreter: 59319 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2021-10-15.json:2952790016-3221225472"]},{"container":{"reused":true,"requestId":"f8df3aed-3112-4cf7-ba83-4f1816041a99","uuid":"2afd9d5d-b2f5-45c1-a15c-e91c45725236","msRemaining":583314,"requestsServed":2,"startTimestamp":1667973146777453051,"deadlineTimestamp":1667973809564000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.583] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.616] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.639] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.639] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.639] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2021-10-15.json:0-268435456\n[2022-11-09 05:53:02.640] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2021-10-15.json:0-268435456\n[2022-11-09 05:53:02.641] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.712] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.717] [global] [info] retrieving pythonic sample took: 0.003665s\n[2022-11-09 05:53:02.783] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.855] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.855] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.855] [fileinputoperator] [info] Filling sample cache for json operator took 0.070530s (1 entries, 0 rows)\n[2022-11-09 05:53:02.886] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.050] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.224] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.224] [fileinputoperator] [info] Extracting row sample took 0.369387s\n[2022-11-09 05:53:03.271] [global] [info] retrieving pythonic sample took: 0.486997s\n[2022-11-09 05:53:03.281] [hyper specializer] [info] Deserialization of Code context took 0.640108s\n[2022-11-09 05:53:03.281] [hyper specializer] [info] Total Stage Decode took 0.641154s\n[2022-11-09 05:53:03.344] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:03.344] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.344] [fileinputoperator] [info] Filling sample cache for json operator took 0.033801s (1 entries, 0 rows)\n[2022-11-09 05:53:03.388] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:03.483] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:03.641] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.641] [fileinputoperator] [info] Extracting row sample took 0.296756s\n[2022-11-09 05:53:03.814] [hyper specializer] [info] sampling (setInputFiles) took 0.532984s\n[2022-11-09 05:53:03.815] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.815] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.815] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.815] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.815] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.815] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.815] [global] [warning] requested 2000 rows for sampling, but only 276 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.824] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.824] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.873] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:04.017] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:04.017] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:04.017] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:04.017] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:04.020] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:04.023] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:04.025] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:04.026] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:04.028] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:04.029] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:04.036] [hyper specializer] [info] generated code in 0.018677s\n[2022-11-09 05:53:04.081] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'distinct'->boolean),(str,'message'->str),(str,'sha'->str),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:04.081] [Lambda worker] [info] -- hyperspecialization took 1.442101s\n[2022-11-09 05:53:04.117] [global] [info] TransformStage - Optimization via LLVM passes took 0.035862 ms\n[2022-11-09 05:53:04.117] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:04.129] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:04.129] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:04.129] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.575] [Lambda worker] [info] fast path took: 5.446267s\n[2022-11-09 05:53:09.575] [Lambda worker] [info] Input rows processed: normal: 10033 unresolved: 70138\n[2022-11-09 05:53:09.575] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 70138\n[2022-11-09 05:53:09.575] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.575] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.575] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.788] [Lambda worker] [info] Compilation of slow path took 1.212680s\n[2022-11-09 05:53:14.731] [Lambda worker] [info] Resolved buffer, compiled: 4224 interpreted: 28340 unresolved: 0\n[2022-11-09 05:53:19.146] [Lambda worker] [info] Resolved buffer, compiled: 4320 interpreted: 33254 unresolved: 0\n[2022-11-09 05:53:19.152] [Lambda worker] [info] Exception resolution/slow path done. Took 9.576359s\n[2022-11-09 05:53:19.152] [Lambda worker] [info] Data processed in 15.0228s 32.28 KB (1339 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:19.152] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:19.152] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:19.152] [Lambda worker] [info] Writing output from 2 parts (32.28 KB, 1339 rows)\n[2022-11-09 05:53:19.152] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:19.152] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:19.152] [s3fs] [info] Writing buffer of size 12863\n[2022-11-09 05:53:19.152] [s3fs] [info] Writing buffer of size 20193\n[2022-11-09 05:53:19.152] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:19.152] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:19.249] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:19.249] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:19.249] [Lambda worker] [info] Took 15.119755s in total\n[2022-11-09 05:53:19.249] [Lambda worker] [info] Paths rows took: normal: 10033 general: 8544 interpreter: 61594 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2021-10-15.json:0-268435456"]},{"container":{"reused":true,"requestId":"d93bb399-810b-4eea-b491-bb5bdd6f68d8","uuid":"8a0adf01-da6f-44ed-94dc-9d7a315775c1","msRemaining":581968,"requestsServed":2,"startTimestamp":1667973146486760256,"deadlineTimestamp":1667973808357000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.376] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.409] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.432] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.432] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.432] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2015-10-15.json:805306368-1073741824\n[2022-11-09 05:53:01.433] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2015-10-15.json:805306368-1073741824\n[2022-11-09 05:53:01.434] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.506] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.510] [global] [info] retrieving pythonic sample took: 0.003523s\n[2022-11-09 05:53:01.578] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.653] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.653] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.653] [fileinputoperator] [info] Filling sample cache for json operator took 0.073715s (1 entries, 0 rows)\n[2022-11-09 05:53:01.677] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.832] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.012] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.012] [fileinputoperator] [info] Extracting row sample took 0.359053s\n[2022-11-09 05:53:02.060] [global] [info] retrieving pythonic sample took: 0.480238s\n[2022-11-09 05:53:02.070] [hyper specializer] [info] Deserialization of Code context took 0.635114s\n[2022-11-09 05:53:02.070] [hyper specializer] [info] Total Stage Decode took 0.636201s\n[2022-11-09 05:53:02.143] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.143] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.143] [fileinputoperator] [info] Filling sample cache for json operator took 0.044150s (1 entries, 0 rows)\n[2022-11-09 05:53:02.177] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.324] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.478] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.478] [fileinputoperator] [info] Extracting row sample took 0.334575s\n[2022-11-09 05:53:02.687] [hyper specializer] [info] sampling (setInputFiles) took 0.617390s\n[2022-11-09 05:53:02.688] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.688] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.688] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.688] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.688] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.688] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.688] [global] [warning] requested 2000 rows for sampling, but only 229 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.696] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.696] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.756] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.938] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.938] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.938] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.938] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.941] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.944] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.946] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.948] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.950] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.951] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.958] [hyper specializer] [info] generated code in 0.020295s\n[2022-11-09 05:53:03.013] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.013] [Lambda worker] [info] -- hyperspecialization took 1.581297s\n[2022-11-09 05:53:03.050] [global] [info] TransformStage - Optimization via LLVM passes took 0.036519 ms\n[2022-11-09 05:53:03.050] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.063] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.063] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.063] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.566] [Lambda worker] [info] fast path took: 5.502943s\n[2022-11-09 05:53:08.566] [Lambda worker] [info] Input rows processed: normal: 12429 unresolved: 79684\n[2022-11-09 05:53:08.566] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 79684\n[2022-11-09 05:53:08.566] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.566] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.566] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.795] [Lambda worker] [info] Compilation of slow path took 1.229221s\n[2022-11-09 05:53:14.591] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 40928 unresolved: 0\n[2022-11-09 05:53:19.298] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 38756 unresolved: 0\n[2022-11-09 05:53:19.304] [Lambda worker] [info] Exception resolution/slow path done. Took 10.737718s\n[2022-11-09 05:53:19.304] [Lambda worker] [info] Data processed in 16.2408s 67.88 KB (2939 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:19.304] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:19.304] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:19.304] [Lambda worker] [info] Writing output from 2 parts (67.88 KB, 2939 rows)\n[2022-11-09 05:53:19.304] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:19.304] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:19.304] [s3fs] [info] Writing buffer of size 35978\n[2022-11-09 05:53:19.304] [s3fs] [info] Writing buffer of size 33536\n[2022-11-09 05:53:19.304] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:19.304] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:19.388] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:19.388] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:19.388] [Lambda worker] [info] Took 16.325257s in total\n[2022-11-09 05:53:19.388] [Lambda worker] [info] Paths rows took: normal: 12429 general: 0 interpreter: 79684 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2015-10-15.json:805306368-1073741824"]},{"container":{"reused":true,"requestId":"a31ec410-78e9-46c8-8fa8-798e17df7df0","uuid":"1da2b1e5-7bc2-4ceb-9d45-f9364a1a370e","msRemaining":581884,"requestsServed":2,"startTimestamp":1667973146242215620,"deadlineTimestamp":1667973808336000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.355] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.389] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.412] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.412] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.412] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2015-10-15.json:268435456-536870912\n[2022-11-09 05:53:01.413] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2015-10-15.json:268435456-536870912\n[2022-11-09 05:53:01.414] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.485] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.489] [global] [info] retrieving pythonic sample took: 0.003516s\n[2022-11-09 05:53:01.556] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.558] [global] [info] retrieving pythonic sample took: 0.000270s\n[2022-11-09 05:53:01.568] [hyper specializer] [info] Deserialization of Code context took 0.153376s\n[2022-11-09 05:53:01.568] [hyper specializer] [info] Total Stage Decode took 0.154386s\n[2022-11-09 05:53:01.634] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:01.635] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.635] [fileinputoperator] [info] Filling sample cache for json operator took 0.066922s (1 entries, 0 rows)\n[2022-11-09 05:53:01.662] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:01.746] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:01.878] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.878] [fileinputoperator] [info] Extracting row sample took 0.243268s\n[2022-11-09 05:53:02.053] [hyper specializer] [info] sampling (setInputFiles) took 0.485690s\n[2022-11-09 05:53:02.054] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.054] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.054] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.054] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.054] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.054] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.054] [global] [warning] requested 2000 rows for sampling, but only 209 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.061] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.061] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.110] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.264] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.264] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.264] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.264] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.267] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.270] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.272] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.274] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.276] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.277] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.284] [hyper specializer] [info] generated code in 0.019734s\n[2022-11-09 05:53:02.330] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.330] [Lambda worker] [info] -- hyperspecialization took 0.918318s\n[2022-11-09 05:53:02.367] [global] [info] TransformStage - Optimization via LLVM passes took 0.037063 ms\n[2022-11-09 05:53:02.367] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.380] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.380] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.380] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.543] [Lambda worker] [info] fast path took: 5.163021s\n[2022-11-09 05:53:07.543] [Lambda worker] [info] Input rows processed: normal: 10606 unresolved: 92816\n[2022-11-09 05:53:07.543] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 92816\n[2022-11-09 05:53:07.543] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.543] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.543] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.775] [Lambda worker] [info] Compilation of slow path took 1.231809s\n[2022-11-09 05:53:14.227] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 47596 unresolved: 0\n[2022-11-09 05:53:19.386] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 45220 unresolved: 0\n[2022-11-09 05:53:19.391] [Lambda worker] [info] Exception resolution/slow path done. Took 11.847979s\n[2022-11-09 05:53:19.392] [Lambda worker] [info] Data processed in 17.0112s 106.92 KB (4626 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:19.392] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:19.392] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:19.392] [Lambda worker] [info] Writing output from 2 parts (106.92 KB, 4626 rows)\n[2022-11-09 05:53:19.392] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:19.392] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:19.392] [s3fs] [info] Writing buffer of size 57201\n[2022-11-09 05:53:19.392] [s3fs] [info] Writing buffer of size 52288\n[2022-11-09 05:53:19.392] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:19.392] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:19.451] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:19.451] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:19.451] [Lambda worker] [info] Took 17.070675s in total\n[2022-11-09 05:53:19.451] [Lambda worker] [info] Paths rows took: normal: 10606 general: 0 interpreter: 92816 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2015-10-15.json:268435456-536870912"]},{"container":{"reused":true,"requestId":"caf44ee5-0b44-436e-9ab9-0ac8fd60b717","uuid":"8488b5b9-b483-445d-9825-2efd491935ba","msRemaining":581763,"requestsServed":2,"startTimestamp":1667973146159130592,"deadlineTimestamp":1667973808347000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.365] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.397] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.420] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.420] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.420] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2015-10-15.json:536870912-805306368\n[2022-11-09 05:53:01.421] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2015-10-15.json:536870912-805306368\n[2022-11-09 05:53:01.422] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.493] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.556] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.556] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.556] [fileinputoperator] [info] Filling sample cache for json operator took 0.060238s (1 entries, 0 rows)\n[2022-11-09 05:53:01.584] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.732] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.908] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.908] [fileinputoperator] [info] Extracting row sample took 0.351669s\n[2022-11-09 05:53:01.957] [global] [info] retrieving pythonic sample took: 0.463732s\n[2022-11-09 05:53:02.026] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.053] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.053] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.053] [fileinputoperator] [info] Filling sample cache for json operator took 0.026298s (1 entries, 0 rows)\n[2022-11-09 05:53:02.078] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.225] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.401] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.401] [fileinputoperator] [info] Extracting row sample took 0.348125s\n[2022-11-09 05:53:02.448] [global] [info] retrieving pythonic sample took: 0.421888s\n[2022-11-09 05:53:02.459] [hyper specializer] [info] Deserialization of Code context took 1.036332s\n[2022-11-09 05:53:02.459] [hyper specializer] [info] Total Stage Decode took 1.037389s\n[2022-11-09 05:53:02.553] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.553] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.553] [fileinputoperator] [info] Filling sample cache for json operator took 0.064607s (1 entries, 0 rows)\n[2022-11-09 05:53:02.584] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.680] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.847] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.847] [fileinputoperator] [info] Extracting row sample took 0.294279s\n[2022-11-09 05:53:03.071] [hyper specializer] [info] sampling (setInputFiles) took 0.612699s\n[2022-11-09 05:53:03.072] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.072] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.072] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.072] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.072] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.072] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.072] [global] [warning] requested 2000 rows for sampling, but only 221 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.081] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.081] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.144] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.342] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.342] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.342] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.372] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.375] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.378] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.380] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.382] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.383] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.384] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.392] [hyper specializer] [info] generated code in 0.020012s\n[2022-11-09 05:53:03.451] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.451] [Lambda worker] [info] -- hyperspecialization took 2.030978s\n[2022-11-09 05:53:03.488] [global] [info] TransformStage - Optimization via LLVM passes took 0.036808 ms\n[2022-11-09 05:53:03.488] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.501] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.501] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.501] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.369] [Lambda worker] [info] fast path took: 4.867845s\n[2022-11-09 05:53:08.369] [Lambda worker] [info] Input rows processed: normal: 11790 unresolved: 83930\n[2022-11-09 05:53:08.369] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 83930\n[2022-11-09 05:53:08.369] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.369] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.369] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.595] [Lambda worker] [info] Compilation of slow path took 1.226124s\n[2022-11-09 05:53:14.588] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 42889 unresolved: 0\n[2022-11-09 05:53:19.465] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 41041 unresolved: 0\n[2022-11-09 05:53:19.470] [Lambda worker] [info] Exception resolution/slow path done. Took 11.101288s\n[2022-11-09 05:53:19.470] [Lambda worker] [info] Data processed in 15.9693s 86.99 KB (3762 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:19.470] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:19.470] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:19.470] [Lambda worker] [info] Writing output from 2 parts (86.99 KB, 3762 rows)\n[2022-11-09 05:53:19.470] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:19.470] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:19.470] [s3fs] [info] Writing buffer of size 51758\n[2022-11-09 05:53:19.470] [s3fs] [info] Writing buffer of size 37323\n[2022-11-09 05:53:19.470] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:19.470] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:19.583] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:19.583] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:19.583] [Lambda worker] [info] Took 16.082215s in total\n[2022-11-09 05:53:19.583] [Lambda worker] [info] Paths rows took: normal: 11790 general: 0 interpreter: 83930 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2015-10-15.json:536870912-805306368"]},{"container":{"reused":true,"requestId":"c3de8f72-fc4b-437d-8aac-79df662512c3","uuid":"a03cc337-c84e-4780-b453-eba54e9c5584","msRemaining":581521,"requestsServed":2,"startTimestamp":1667973146247346636,"deadlineTimestamp":1667973808210000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.229] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.262] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.286] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.286] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.286] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2013-10-15.json:0-268435456\n[2022-11-09 05:53:01.287] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2013-10-15.json:0-268435456\n[2022-11-09 05:53:01.288] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.360] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.364] [global] [info] retrieving pythonic sample took: 0.003546s\n[2022-11-09 05:53:01.432] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.433] [global] [info] retrieving pythonic sample took: 0.000276s\n[2022-11-09 05:53:01.443] [hyper specializer] [info] Deserialization of Code context took 0.155094s\n[2022-11-09 05:53:01.443] [hyper specializer] [info] Total Stage Decode took 0.156157s\n[2022-11-09 05:53:01.539] [global] [info] sampled s3://tuplex-public/data/github_daily/2013-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:01.539] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.539] [fileinputoperator] [info] Filling sample cache for json operator took 0.095792s (1 entries, 0 rows)\n[2022-11-09 05:53:01.568] [global] [info] sampled s3://tuplex-public/data/github_daily/2013-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:01.721] [global] [info] sampled s3://tuplex-public/data/github_daily/2013-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:01.971] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:01.971] [fileinputoperator] [info] Extracting row sample took 0.431954s\n[2022-11-09 05:53:02.236] [hyper specializer] [info] sampling (setInputFiles) took 0.792903s\n[2022-11-09 05:53:02.237] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.237] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.237] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.237] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.237] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.237] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.237] [global] [warning] requested 2000 rows for sampling, but only 287 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.246] [specializing stage optimizer] [info] Row type before retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)])\n[2022-11-09 05:53:02.246] [specializing stage optimizer] [info] Row type after retype: (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Option[Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)]],Option[Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)]])\n[2022-11-09 05:53:02.316] [codegen] [warning] could not find column 'repo' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.423] [hyper specializer] [info] specialized to input:  (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)])\n[2022-11-09 05:53:02.423] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.423] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.424] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.426] [codegen] [info] generating pipeline for (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.429] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)])) -> i64\n[2022-11-09 05:53:02.431] [codegen] [info] generating function extract_repo_id_code for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)],i64)) -> i64\n[2022-11-09 05:53:02.433] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)],i64,i64)) -> boolean\n[2022-11-09 05:53:02.435] [codegen] [info] generating lambda function for ((str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.436] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.444] [hyper specializer] [info] generated code in 0.020012s\n[2022-11-09 05:53:02.510] [Lambda worker] [info] specialized normal-case type (str,Struct[(str,'shas'->List[(str,str,str,str,boolean)]),(str,'size'->i64),(str,'ref'->str),(str,'head'->str)],boolean,str,str,str,Struct[(str,'login'->str),(str,'type'->str),(str,'gravatar_id'->str),(str,'email'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str),(str,'description'->str),(str,'watchers'->i64),(str,'stargazers'->i64),(str,'forks'->i64),(str,'fork'->boolean),(str,'size'->i64),(str,'owner'->str),(str,'private'->boolean),(str,'open_issues'->i64),(str,'has_issues'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'language'->str),(str,'created_at'->str),(str,'pushed_at'->str),(str,'master_branch'->str)]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.510] [Lambda worker] [info] -- hyperspecialization took 1.224414s\n[2022-11-09 05:53:02.541] [global] [info] TransformStage - Optimization via LLVM passes took 0.030508 ms\n[2022-11-09 05:53:02.541] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.553] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.553] [global] [info] Compiled code paths for stage 0 in 0.04 ms\n[2022-11-09 05:53:02.553] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.849] [Lambda worker] [info] fast path took: 5.296033s\n[2022-11-09 05:53:07.850] [Lambda worker] [info] Input rows processed: normal: 61470 unresolved: 87413\n[2022-11-09 05:53:07.850] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 87413\n[2022-11-09 05:53:07.850] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.850] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.850] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.069] [Lambda worker] [info] Compilation of slow path took 1.219125s\n[2022-11-09 05:53:09.130] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:14.306] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 41727 unresolved: 3005\n[2022-11-09 05:53:14.374] [Lambda worker] [info] first unresolved row ec code result is: ec code: 112\n[2022-11-09 05:53:19.515] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 39753 unresolved: 2928\n[2022-11-09 05:53:19.519] [Lambda worker] [info] Exception resolution/slow path done. Took 11.669729s\n[2022-11-09 05:53:19.519] [Lambda worker] [info] Data processed in 16.9659s 3.79 MB (5444 normal rows) 2.73 MB (5933 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:19.519] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part2.csv.csv\n[2022-11-09 05:53:19.519] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:19.519] [Lambda worker] [info] Writing output from 2 parts (3.79 MB, 5444 rows)\n[2022-11-09 05:53:19.519] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part2.csv.csv\n[2022-11-09 05:53:19.519] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:19.519] [s3fs] [info] Writing buffer of size 2186784\n[2022-11-09 05:53:19.521] [s3fs] [info] Writing buffer of size 1785740\n[2022-11-09 05:53:19.522] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part2.csv.csv\n[2022-11-09 05:53:19.522] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:19.687] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:19.688] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:19.688] [Lambda worker] [info] Took 17.134200s in total\n[2022-11-09 05:53:19.688] [Lambda worker] [info] Paths rows took: normal: 61470 general: 0 interpreter: 81480 unresolved: 5933\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2013-10-15.json:0-268435456"]},{"container":{"reused":true,"requestId":"b7911adc-0e61-4a76-9191-0d466a6f8595","uuid":"d66815e4-5ffa-434e-8be3-6c02296101a3","msRemaining":581875,"requestsServed":2,"startTimestamp":1667973147372121090,"deadlineTimestamp":1667973808595000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.615] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.648] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.670] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.670] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.670] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:536870912-805306368\n[2022-11-09 05:53:01.672] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:536870912-805306368\n[2022-11-09 05:53:01.673] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.743] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.747] [global] [info] retrieving pythonic sample took: 0.003473s\n[2022-11-09 05:53:01.814] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.892] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.892] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.892] [fileinputoperator] [info] Filling sample cache for json operator took 0.076917s (1 entries, 0 rows)\n[2022-11-09 05:53:01.922] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.074] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.251] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.251] [fileinputoperator] [info] Extracting row sample took 0.359113s\n[2022-11-09 05:53:02.299] [global] [info] retrieving pythonic sample took: 0.483549s\n[2022-11-09 05:53:02.309] [hyper specializer] [info] Deserialization of Code context took 0.635764s\n[2022-11-09 05:53:02.309] [hyper specializer] [info] Total Stage Decode took 0.636850s\n[2022-11-09 05:53:02.373] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.373] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.373] [fileinputoperator] [info] Filling sample cache for json operator took 0.035180s (1 entries, 0 rows)\n[2022-11-09 05:53:02.407] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.546] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.683] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.683] [fileinputoperator] [info] Extracting row sample took 0.310274s\n[2022-11-09 05:53:02.866] [hyper specializer] [info] sampling (setInputFiles) took 0.557240s\n[2022-11-09 05:53:02.867] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.867] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.867] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.867] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.867] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.867] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.867] [global] [warning] requested 2000 rows for sampling, but only 204 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.875] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.875] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.926] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.098] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.098] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.098] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.098] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.101] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.104] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.106] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.108] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.110] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.111] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.119] [hyper specializer] [info] generated code in 0.020271s\n[2022-11-09 05:53:03.170] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.171] [Lambda worker] [info] -- hyperspecialization took 1.500128s\n[2022-11-09 05:53:03.207] [global] [info] TransformStage - Optimization via LLVM passes took 0.036191 ms\n[2022-11-09 05:53:03.207] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.219] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.219] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.219] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.371] [Lambda worker] [info] fast path took: 5.151460s\n[2022-11-09 05:53:08.371] [Lambda worker] [info] Input rows processed: normal: 8933 unresolved: 84026\n[2022-11-09 05:53:08.371] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 84026\n[2022-11-09 05:53:08.371] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.371] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.371] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.601] [Lambda worker] [info] Compilation of slow path took 1.230404s\n[2022-11-09 05:53:14.692] [Lambda worker] [info] Resolved buffer, compiled: 3919 interpreted: 38258 unresolved: 0\n[2022-11-09 05:53:19.652] [Lambda worker] [info] Resolved buffer, compiled: 4153 interpreted: 37696 unresolved: 0\n[2022-11-09 05:53:19.658] [Lambda worker] [info] Exception resolution/slow path done. Took 11.286725s\n[2022-11-09 05:53:19.658] [Lambda worker] [info] Data processed in 16.4384s 72.92 KB (3074 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:19.658] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:19.658] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:19.658] [Lambda worker] [info] Writing output from 2 parts (72.92 KB, 3074 rows)\n[2022-11-09 05:53:19.658] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:19.658] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:19.658] [s3fs] [info] Writing buffer of size 32453\n[2022-11-09 05:53:19.658] [s3fs] [info] Writing buffer of size 42216\n[2022-11-09 05:53:19.658] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:19.658] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:19.718] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:19.718] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:19.719] [Lambda worker] [info] Took 16.499087s in total\n[2022-11-09 05:53:19.719] [Lambda worker] [info] Paths rows took: normal: 8933 general: 8072 interpreter: 75954 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:536870912-805306368"]},{"container":{"reused":true,"requestId":"c5f94cee-d7a7-49d6-8312-c3b7b5c5fc5b","uuid":"5c27ba80-879c-4306-bf49-79d97bebca30","msRemaining":581672,"requestsServed":2,"startTimestamp":1667973146321778096,"deadlineTimestamp":1667973808542000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.561] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.595] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.618] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.618] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.618] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2017-10-15.json:1610612736-1879048192\n[2022-11-09 05:53:01.619] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2017-10-15.json:1610612736-1879048192\n[2022-11-09 05:53:01.620] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.690] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.695] [global] [info] retrieving pythonic sample took: 0.003549s\n[2022-11-09 05:53:01.762] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.763] [global] [info] retrieving pythonic sample took: 0.000266s\n[2022-11-09 05:53:01.773] [hyper specializer] [info] Deserialization of Code context took 0.152526s\n[2022-11-09 05:53:01.773] [hyper specializer] [info] Total Stage Decode took 0.153576s\n[2022-11-09 05:53:01.855] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:01.855] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.855] [fileinputoperator] [info] Filling sample cache for json operator took 0.082030s (1 entries, 0 rows)\n[2022-11-09 05:53:01.889] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:02.020] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:1610612736-1879048192 on 256.00 KB\n[2022-11-09 05:53:02.135] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.135] [fileinputoperator] [info] Extracting row sample took 0.279987s\n[2022-11-09 05:53:02.312] [hyper specializer] [info] sampling (setInputFiles) took 0.539520s\n[2022-11-09 05:53:02.313] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.313] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.313] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.313] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.313] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.313] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.313] [global] [warning] requested 2000 rows for sampling, but only 244 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.320] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.321] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.372] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.524] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.524] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.524] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.525] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.527] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.530] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.532] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.534] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.535] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.536] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.544] [hyper specializer] [info] generated code in 0.019314s\n[2022-11-09 05:53:02.591] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.591] [Lambda worker] [info] -- hyperspecialization took 0.973503s\n[2022-11-09 05:53:02.628] [global] [info] TransformStage - Optimization via LLVM passes took 0.036306 ms\n[2022-11-09 05:53:02.628] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.641] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.641] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.641] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.877] [Lambda worker] [info] fast path took: 5.236086s\n[2022-11-09 05:53:07.877] [Lambda worker] [info] Input rows processed: normal: 11413 unresolved: 91775\n[2022-11-09 05:53:07.877] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 91775\n[2022-11-09 05:53:07.877] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.877] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.877] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.137] [Lambda worker] [info] Compilation of slow path took 1.259741s\n[2022-11-09 05:53:14.523] [Lambda worker] [info] Resolved buffer, compiled: 3339 interpreted: 43362 unresolved: 0\n[2022-11-09 05:53:19.763] [Lambda worker] [info] Resolved buffer, compiled: 2855 interpreted: 42219 unresolved: 0\n[2022-11-09 05:53:19.769] [Lambda worker] [info] Exception resolution/slow path done. Took 11.892336s\n[2022-11-09 05:53:19.770] [Lambda worker] [info] Data processed in 17.1286s 66.17 KB (2822 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:19.770] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:19.770] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:19.770] [Lambda worker] [info] Writing output from 2 parts (66.17 KB, 2822 rows)\n[2022-11-09 05:53:19.770] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:19.770] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:19.770] [s3fs] [info] Writing buffer of size 36595\n[2022-11-09 05:53:19.770] [s3fs] [info] Writing buffer of size 31165\n[2022-11-09 05:53:19.770] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:19.770] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:19.869] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:19.869] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:19.869] [Lambda worker] [info] Took 17.227688s in total\n[2022-11-09 05:53:19.869] [Lambda worker] [info] Paths rows took: normal: 11413 general: 6194 interpreter: 85581 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2017-10-15.json:1610612736-1879048192"]},{"container":{"reused":true,"requestId":"31ef307e-9ce3-43d3-a120-72f7467d8aa3","uuid":"ae0d3c56-8e35-4bfb-82f5-44831f11f0c4","msRemaining":581456,"requestsServed":2,"startTimestamp":1667973146133132762,"deadlineTimestamp":1667973808330000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.348] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.382] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.405] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.405] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.405] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2015-10-15.json:0-268435456\n[2022-11-09 05:53:01.406] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2015-10-15.json:0-268435456\n[2022-11-09 05:53:01.407] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.478] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.483] [global] [info] retrieving pythonic sample took: 0.003476s\n[2022-11-09 05:53:01.551] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.552] [global] [info] retrieving pythonic sample took: 0.000266s\n[2022-11-09 05:53:01.562] [hyper specializer] [info] Deserialization of Code context took 0.154916s\n[2022-11-09 05:53:01.562] [hyper specializer] [info] Total Stage Decode took 0.155980s\n[2022-11-09 05:53:01.662] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:01.662] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.662] [fileinputoperator] [info] Filling sample cache for json operator took 0.100225s (1 entries, 0 rows)\n[2022-11-09 05:53:01.706] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:01.920] [global] [info] sampled s3://tuplex-public/data/github_daily/2015-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:02.065] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.065] [fileinputoperator] [info] Extracting row sample took 0.402495s\n[2022-11-09 05:53:02.255] [hyper specializer] [info] sampling (setInputFiles) took 0.692495s\n[2022-11-09 05:53:02.255] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.255] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.255] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.255] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.255] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.255] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.255] [global] [warning] requested 2000 rows for sampling, but only 203 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.262] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.262] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.316] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.492] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.492] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.492] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.492] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.495] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.498] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.500] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.502] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.503] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.504] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.512] [hyper specializer] [info] generated code in 0.019399s\n[2022-11-09 05:53:02.562] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'email'->str),(str,'name'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.566] [Lambda worker] [info] -- hyperspecialization took 1.161134s\n[2022-11-09 05:53:02.603] [global] [info] TransformStage - Optimization via LLVM passes took 0.037394 ms\n[2022-11-09 05:53:02.604] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.616] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.616] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.616] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.886] [Lambda worker] [info] fast path took: 5.269050s\n[2022-11-09 05:53:07.886] [Lambda worker] [info] Input rows processed: normal: 10293 unresolved: 95455\n[2022-11-09 05:53:07.886] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 95455\n[2022-11-09 05:53:07.886] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.886] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.886] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.127] [Lambda worker] [info] Compilation of slow path took 1.241439s\n[2022-11-09 05:53:14.393] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 46216 unresolved: 0\n[2022-11-09 05:53:19.809] [Lambda worker] [info] Resolved buffer, compiled: 0 interpreted: 49239 unresolved: 0\n[2022-11-09 05:53:19.814] [Lambda worker] [info] Exception resolution/slow path done. Took 11.928795s\n[2022-11-09 05:53:19.815] [Lambda worker] [info] Data processed in 17.198s 102.86 KB (4447 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:19.815] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:19.815] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:19.815] [Lambda worker] [info] Writing output from 2 parts (102.86 KB, 4447 rows)\n[2022-11-09 05:53:19.815] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:19.815] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:19.815] [s3fs] [info] Writing buffer of size 48563\n[2022-11-09 05:53:19.815] [s3fs] [info] Writing buffer of size 56765\n[2022-11-09 05:53:19.815] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part4.csv.csv\n[2022-11-09 05:53:19.815] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:19.873] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:19.873] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:19.873] [Lambda worker] [info] Took 17.256641s in total\n[2022-11-09 05:53:19.873] [Lambda worker] [info] Paths rows took: normal: 10293 general: 0 interpreter: 95455 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2015-10-15.json:0-268435456"]},{"container":{"reused":true,"requestId":"049193c2-eb09-4817-a1b8-48b9163358e7","uuid":"063b68a6-ebad-476f-95b5-e219d62f1523","msRemaining":581440,"requestsServed":2,"startTimestamp":1667973146129884409,"deadlineTimestamp":1667973808439000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.458] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.492] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.514] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.514] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.514] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2016-10-15.json:805306368-1073741824\n[2022-11-09 05:53:01.516] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2016-10-15.json:805306368-1073741824\n[2022-11-09 05:53:01.517] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.590] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.595] [global] [info] retrieving pythonic sample took: 0.003507s\n[2022-11-09 05:53:01.661] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.663] [global] [info] retrieving pythonic sample took: 0.000264s\n[2022-11-09 05:53:01.672] [hyper specializer] [info] Deserialization of Code context took 0.155509s\n[2022-11-09 05:53:01.672] [hyper specializer] [info] Total Stage Decode took 0.156558s\n[2022-11-09 05:53:01.769] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:01.769] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.769] [fileinputoperator] [info] Filling sample cache for json operator took 0.097200s (1 entries, 0 rows)\n[2022-11-09 05:53:01.800] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:01.889] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.026] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.026] [fileinputoperator] [info] Extracting row sample took 0.256139s\n[2022-11-09 05:53:02.182] [hyper specializer] [info] sampling (setInputFiles) took 0.509588s\n[2022-11-09 05:53:02.182] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.182] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.182] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.182] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.182] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.182] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.182] [global] [warning] requested 2000 rows for sampling, but only 178 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.188] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.188] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.232] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.396] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.396] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.396] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.396] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.399] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.402] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.404] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.406] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.407] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.409] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.416] [hyper specializer] [info] generated code in 0.020062s\n[2022-11-09 05:53:02.458] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.458] [Lambda worker] [info] -- hyperspecialization took 0.943540s\n[2022-11-09 05:53:02.494] [global] [info] TransformStage - Optimization via LLVM passes took 0.035901 ms\n[2022-11-09 05:53:02.494] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.507] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.507] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.507] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.876] [Lambda worker] [info] fast path took: 5.368874s\n[2022-11-09 05:53:07.876] [Lambda worker] [info] Input rows processed: normal: 13480 unresolved: 97786\n[2022-11-09 05:53:07.876] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 97786\n[2022-11-09 05:53:07.876] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.876] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.876] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.115] [Lambda worker] [info] Compilation of slow path took 1.239471s\n[2022-11-09 05:53:14.589] [Lambda worker] [info] Resolved buffer, compiled: 3888 interpreted: 45970 unresolved: 0\n[2022-11-09 05:53:19.924] [Lambda worker] [info] Resolved buffer, compiled: 3442 interpreted: 44486 unresolved: 0\n[2022-11-09 05:53:19.930] [Lambda worker] [info] Exception resolution/slow path done. Took 12.054391s\n[2022-11-09 05:53:19.930] [Lambda worker] [info] Data processed in 17.4234s 75.45 KB (3247 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:19.930] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:19.930] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:19.930] [Lambda worker] [info] Writing output from 2 parts (75.45 KB, 3247 rows)\n[2022-11-09 05:53:19.930] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:19.930] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:19.930] [s3fs] [info] Writing buffer of size 41432\n[2022-11-09 05:53:19.930] [s3fs] [info] Writing buffer of size 35826\n[2022-11-09 05:53:19.930] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:19.930] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:19.998] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:19.998] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:19.998] [Lambda worker] [info] Took 17.491637s in total\n[2022-11-09 05:53:19.998] [Lambda worker] [info] Paths rows took: normal: 13480 general: 7330 interpreter: 90456 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2016-10-15.json:805306368-1073741824"]},{"container":{"reused":true,"requestId":"20994b41-eda9-4987-a82b-efe3190958bd","uuid":"aa529231-9c90-4979-aece-69987da83bb0","msRemaining":581570,"requestsServed":2,"startTimestamp":1667973147528920018,"deadlineTimestamp":1667973808583000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.603] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.636] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.659] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.659] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.659] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:268435456-536870912\n[2022-11-09 05:53:01.660] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:268435456-536870912\n[2022-11-09 05:53:01.661] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.731] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.735] [global] [info] retrieving pythonic sample took: 0.003478s\n[2022-11-09 05:53:01.802] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.879] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.879] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.879] [fileinputoperator] [info] Filling sample cache for json operator took 0.076532s (1 entries, 0 rows)\n[2022-11-09 05:53:01.913] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.072] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.253] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.253] [fileinputoperator] [info] Extracting row sample took 0.373485s\n[2022-11-09 05:53:02.300] [global] [info] retrieving pythonic sample took: 0.497351s\n[2022-11-09 05:53:02.310] [hyper specializer] [info] Deserialization of Code context took 0.648936s\n[2022-11-09 05:53:02.310] [hyper specializer] [info] Total Stage Decode took 0.649966s\n[2022-11-09 05:53:02.379] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:02.379] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.379] [fileinputoperator] [info] Filling sample cache for json operator took 0.039653s (1 entries, 0 rows)\n[2022-11-09 05:53:02.415] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:02.567] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:02.698] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.698] [fileinputoperator] [info] Extracting row sample took 0.318520s\n[2022-11-09 05:53:02.872] [hyper specializer] [info] sampling (setInputFiles) took 0.562469s\n[2022-11-09 05:53:02.873] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.873] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.873] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.873] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.873] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.873] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.873] [global] [warning] requested 2000 rows for sampling, but only 197 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.881] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.881] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.931] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.093] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.093] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.093] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.093] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.096] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.099] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.101] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.103] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.104] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.106] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.114] [hyper specializer] [info] generated code in 0.020445s\n[2022-11-09 05:53:03.158] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.158] [Lambda worker] [info] -- hyperspecialization took 1.499873s\n[2022-11-09 05:53:03.196] [global] [info] TransformStage - Optimization via LLVM passes took 0.037629 ms\n[2022-11-09 05:53:03.196] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.209] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.209] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.209] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.525] [Lambda worker] [info] fast path took: 4.315492s\n[2022-11-09 05:53:07.525] [Lambda worker] [info] Input rows processed: normal: 10339 unresolved: 95232\n[2022-11-09 05:53:07.525] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 95232\n[2022-11-09 05:53:07.525] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.525] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.525] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.770] [Lambda worker] [info] Compilation of slow path took 1.244580s\n[2022-11-09 05:53:14.396] [Lambda worker] [info] Resolved buffer, compiled: 4741 interpreted: 44381 unresolved: 0\n[2022-11-09 05:53:19.908] [Lambda worker] [info] Resolved buffer, compiled: 3871 interpreted: 42239 unresolved: 0\n[2022-11-09 05:53:19.914] [Lambda worker] [info] Exception resolution/slow path done. Took 12.388484s\n[2022-11-09 05:53:19.914] [Lambda worker] [info] Data processed in 16.7042s 86.04 KB (3623 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:19.914] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:19.914] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:19.914] [Lambda worker] [info] Writing output from 2 parts (86.04 KB, 3623 rows)\n[2022-11-09 05:53:19.914] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:19.914] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:19.914] [s3fs] [info] Writing buffer of size 47836\n[2022-11-09 05:53:19.914] [s3fs] [info] Writing buffer of size 40268\n[2022-11-09 05:53:19.914] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:19.914] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:20.012] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:20.012] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:20.012] [Lambda worker] [info] Took 16.802517s in total\n[2022-11-09 05:53:20.012] [Lambda worker] [info] Paths rows took: normal: 10339 general: 8612 interpreter: 86620 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:268435456-536870912"]},{"container":{"reused":true,"requestId":"59a84736-715a-4c57-904b-cd520d75283b","uuid":"378f55fe-75c2-40fd-beb5-11857afc3f62","msRemaining":581531,"requestsServed":2,"startTimestamp":1667973146405679447,"deadlineTimestamp":1667973808571000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.589] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.621] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.644] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.644] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.644] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2018-10-15.json:0-268435456\n[2022-11-09 05:53:01.645] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2018-10-15.json:0-268435456\n[2022-11-09 05:53:01.646] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.716] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.720] [global] [info] retrieving pythonic sample took: 0.003482s\n[2022-11-09 05:53:01.787] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.788] [global] [info] retrieving pythonic sample took: 0.000254s\n[2022-11-09 05:53:01.797] [hyper specializer] [info] Deserialization of Code context took 0.151542s\n[2022-11-09 05:53:01.797] [hyper specializer] [info] Total Stage Decode took 0.152570s\n[2022-11-09 05:53:01.911] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:01.912] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.912] [fileinputoperator] [info] Filling sample cache for json operator took 0.114058s (1 entries, 0 rows)\n[2022-11-09 05:53:01.954] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:02.053] [global] [info] sampled s3://tuplex-public/data/github_daily/2018-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:02.179] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.180] [fileinputoperator] [info] Extracting row sample took 0.267921s\n[2022-11-09 05:53:02.359] [hyper specializer] [info] sampling (setInputFiles) took 0.561767s\n[2022-11-09 05:53:02.360] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.360] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.360] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.360] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.360] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.360] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.360] [global] [warning] requested 2000 rows for sampling, but only 237 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.367] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.367] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.418] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.575] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.575] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.575] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.576] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.578] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.581] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.583] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.585] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.586] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.587] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.594] [hyper specializer] [info] generated code in 0.018840s\n[2022-11-09 05:53:02.641] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.641] [Lambda worker] [info] -- hyperspecialization took 0.997375s\n[2022-11-09 05:53:02.677] [global] [info] TransformStage - Optimization via LLVM passes took 0.035924 ms\n[2022-11-09 05:53:02.677] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.690] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.690] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.690] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.904] [Lambda worker] [info] fast path took: 5.214597s\n[2022-11-09 05:53:07.905] [Lambda worker] [info] Input rows processed: normal: 9920 unresolved: 96431\n[2022-11-09 05:53:07.905] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 96431\n[2022-11-09 05:53:07.905] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.905] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.905] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.103] [Lambda worker] [info] Compilation of slow path took 1.198690s\n[2022-11-09 05:53:14.581] [Lambda worker] [info] Resolved buffer, compiled: 3729 interpreted: 45178 unresolved: 0\n[2022-11-09 05:53:19.964] [Lambda worker] [info] Resolved buffer, compiled: 4291 interpreted: 43233 unresolved: 0\n[2022-11-09 05:53:19.970] [Lambda worker] [info] Exception resolution/slow path done. Took 12.065045s\n[2022-11-09 05:53:19.970] [Lambda worker] [info] Data processed in 17.2798s 82.77 KB (3479 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:19.970] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:19.970] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:19.970] [Lambda worker] [info] Writing output from 2 parts (82.77 KB, 3479 rows)\n[2022-11-09 05:53:19.970] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:19.970] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:19.970] [s3fs] [info] Writing buffer of size 36741\n[2022-11-09 05:53:19.970] [s3fs] [info] Writing buffer of size 48018\n[2022-11-09 05:53:19.970] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part7.csv.csv\n[2022-11-09 05:53:19.970] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:20.039] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:20.039] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:20.039] [Lambda worker] [info] Took 17.349512s in total\n[2022-11-09 05:53:20.039] [Lambda worker] [info] Paths rows took: normal: 9920 general: 8020 interpreter: 88411 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2018-10-15.json:0-268435456"]},{"container":{"reused":true,"requestId":"d9de059a-376f-49b5-9808-4f8034f11bb7","uuid":"3a2c6ed1-6788-4cdb-83df-97f9cf0a11d9","msRemaining":581296,"requestsServed":2,"startTimestamp":1667973145937530010,"deadlineTimestamp":1667973808430000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.449] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.482] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.504] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.504] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.504] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2016-10-15.json:536870912-805306368\n[2022-11-09 05:53:01.506] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2016-10-15.json:536870912-805306368\n[2022-11-09 05:53:01.507] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.577] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.582] [global] [info] retrieving pythonic sample took: 0.003535s\n[2022-11-09 05:53:01.650] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.651] [global] [info] retrieving pythonic sample took: 0.000282s\n[2022-11-09 05:53:01.661] [hyper specializer] [info] Deserialization of Code context took 0.154214s\n[2022-11-09 05:53:01.661] [hyper specializer] [info] Total Stage Decode took 0.155254s\n[2022-11-09 05:53:01.796] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:01.796] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.796] [fileinputoperator] [info] Filling sample cache for json operator took 0.134691s (1 entries, 0 rows)\n[2022-11-09 05:53:01.839] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:01.925] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.060] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.060] [fileinputoperator] [info] Extracting row sample took 0.263907s\n[2022-11-09 05:53:02.211] [hyper specializer] [info] sampling (setInputFiles) took 0.549987s\n[2022-11-09 05:53:02.212] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.212] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.212] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.212] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.212] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.212] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.212] [global] [warning] requested 2000 rows for sampling, but only 144 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.216] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.216] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.260] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.417] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.417] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.417] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.417] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.420] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.423] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.425] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.427] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.428] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.429] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.437] [hyper specializer] [info] generated code in 0.019403s\n[2022-11-09 05:53:02.477] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.477] [Lambda worker] [info] -- hyperspecialization took 0.972695s\n[2022-11-09 05:53:02.516] [global] [info] TransformStage - Optimization via LLVM passes took 0.038220 ms\n[2022-11-09 05:53:02.516] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.528] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.529] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.529] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.464] [Lambda worker] [info] fast path took: 4.935363s\n[2022-11-09 05:53:07.464] [Lambda worker] [info] Input rows processed: normal: 14630 unresolved: 100786\n[2022-11-09 05:53:07.464] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 100786\n[2022-11-09 05:53:07.464] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.464] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.464] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.698] [Lambda worker] [info] Compilation of slow path took 1.233786s\n[2022-11-09 05:53:14.417] [Lambda worker] [info] Resolved buffer, compiled: 3946 interpreted: 46873 unresolved: 0\n[2022-11-09 05:53:20.059] [Lambda worker] [info] Resolved buffer, compiled: 3565 interpreted: 46402 unresolved: 0\n[2022-11-09 05:53:20.065] [Lambda worker] [info] Exception resolution/slow path done. Took 12.601284s\n[2022-11-09 05:53:20.065] [Lambda worker] [info] Data processed in 17.5368s 79.51 KB (3425 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:20.065] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:20.065] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:20.065] [Lambda worker] [info] Writing output from 2 parts (79.51 KB, 3425 rows)\n[2022-11-09 05:53:20.065] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:20.065] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:20.065] [s3fs] [info] Writing buffer of size 40491\n[2022-11-09 05:53:20.066] [s3fs] [info] Writing buffer of size 40926\n[2022-11-09 05:53:20.066] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:20.066] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:20.133] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:20.133] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:20.133] [Lambda worker] [info] Took 17.604622s in total\n[2022-11-09 05:53:20.133] [Lambda worker] [info] Paths rows took: normal: 14630 general: 7511 interpreter: 93275 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2016-10-15.json:536870912-805306368"]},{"container":{"reused":true,"requestId":"e7c38963-5f5c-4ed1-9c0d-4a4cc7ea0fba","uuid":"9dd5f7ab-4191-4f89-96f3-37a7e97abddd","msRemaining":582391,"requestsServed":2,"startTimestamp":1667973146862232248,"deadlineTimestamp":1667973809581000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.600] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.633] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.656] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.656] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.656] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2021-10-15.json:805306368-1073741824\n[2022-11-09 05:53:02.657] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2021-10-15.json:805306368-1073741824\n[2022-11-09 05:53:02.658] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.729] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.733] [global] [info] retrieving pythonic sample took: 0.003535s\n[2022-11-09 05:53:02.800] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.859] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.859] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.859] [fileinputoperator] [info] Filling sample cache for json operator took 0.058222s (1 entries, 0 rows)\n[2022-11-09 05:53:02.881] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.053] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:03.228] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.228] [fileinputoperator] [info] Extracting row sample took 0.369079s\n[2022-11-09 05:53:03.275] [global] [info] retrieving pythonic sample took: 0.474482s\n[2022-11-09 05:53:03.285] [hyper specializer] [info] Deserialization of Code context took 0.626655s\n[2022-11-09 05:53:03.285] [hyper specializer] [info] Total Stage Decode took 0.627712s\n[2022-11-09 05:53:03.368] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:03.368] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:03.368] [fileinputoperator] [info] Filling sample cache for json operator took 0.054131s (1 entries, 0 rows)\n[2022-11-09 05:53:03.398] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:03.515] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:03.646] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:03.646] [fileinputoperator] [info] Extracting row sample took 0.277922s\n[2022-11-09 05:53:03.788] [hyper specializer] [info] sampling (setInputFiles) took 0.502902s\n[2022-11-09 05:53:03.789] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.789] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.789] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.789] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.789] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.789] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.789] [global] [warning] requested 2000 rows for sampling, but only 137 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.794] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.794] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.834] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.998] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.998] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.998] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.998] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:04.001] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:04.004] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:04.006] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:04.008] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:04.009] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:04.010] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:04.018] [hyper specializer] [info] generated code in 0.019349s\n[2022-11-09 05:53:04.054] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:04.054] [Lambda worker] [info] -- hyperspecialization took 1.398299s\n[2022-11-09 05:53:04.091] [global] [info] TransformStage - Optimization via LLVM passes took 0.036061 ms\n[2022-11-09 05:53:04.091] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:04.103] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:04.103] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:04.103] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:09.587] [Lambda worker] [info] fast path took: 5.483806s\n[2022-11-09 05:53:09.587] [Lambda worker] [info] Input rows processed: normal: 11914 unresolved: 78620\n[2022-11-09 05:53:09.587] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 78620\n[2022-11-09 05:53:09.587] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.587] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.587] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.808] [Lambda worker] [info] Compilation of slow path took 1.221144s\n[2022-11-09 05:53:15.474] [Lambda worker] [info] Resolved buffer, compiled: 4470 interpreted: 35282 unresolved: 0\n[2022-11-09 05:53:20.123] [Lambda worker] [info] Resolved buffer, compiled: 5183 interpreted: 33685 unresolved: 0\n[2022-11-09 05:53:20.129] [Lambda worker] [info] Exception resolution/slow path done. Took 10.542149s\n[2022-11-09 05:53:20.129] [Lambda worker] [info] Data processed in 16.0261s 48.87 KB (2026 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:20.129] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:20.129] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:20.129] [Lambda worker] [info] Writing output from 2 parts (48.87 KB, 2026 rows)\n[2022-11-09 05:53:20.129] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:20.129] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:20.129] [s3fs] [info] Writing buffer of size 24127\n[2022-11-09 05:53:20.129] [s3fs] [info] Writing buffer of size 25915\n[2022-11-09 05:53:20.130] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part10.csv.csv\n[2022-11-09 05:53:20.130] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:20.189] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:20.189] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:20.189] [Lambda worker] [info] Took 16.085772s in total\n[2022-11-09 05:53:20.189] [Lambda worker] [info] Paths rows took: normal: 11914 general: 9653 interpreter: 68967 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2021-10-15.json:805306368-1073741824"]},{"container":{"reused":true,"requestId":"25d58c77-353c-4b0d-bbf5-532e08f3ea65","uuid":"a2322714-7c52-45a9-9b8c-c6b9e601abdf","msRemaining":581159,"requestsServed":2,"startTimestamp":1667973146230071844,"deadlineTimestamp":1667973808402000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.422] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.455] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.478] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.478] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.478] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2016-10-15.json:0-268435456\n[2022-11-09 05:53:01.479] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2016-10-15.json:0-268435456\n[2022-11-09 05:53:01.480] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.552] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.556] [global] [info] retrieving pythonic sample took: 0.003721s\n[2022-11-09 05:53:01.623] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.705] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.705] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.706] [fileinputoperator] [info] Filling sample cache for json operator took 0.081937s (1 entries, 0 rows)\n[2022-11-09 05:53:01.735] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.885] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.060] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.060] [fileinputoperator] [info] Extracting row sample took 0.354207s\n[2022-11-09 05:53:02.106] [global] [info] retrieving pythonic sample took: 0.482834s\n[2022-11-09 05:53:02.116] [hyper specializer] [info] Deserialization of Code context took 0.635951s\n[2022-11-09 05:53:02.116] [hyper specializer] [info] Total Stage Decode took 0.636992s\n[2022-11-09 05:53:02.197] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:02.198] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.198] [fileinputoperator] [info] Filling sample cache for json operator took 0.052363s (1 entries, 0 rows)\n[2022-11-09 05:53:02.247] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:02.346] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:02.506] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.506] [fileinputoperator] [info] Extracting row sample took 0.308447s\n[2022-11-09 05:53:02.707] [hyper specializer] [info] sampling (setInputFiles) took 0.590466s\n[2022-11-09 05:53:02.707] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.707] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.707] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.707] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.707] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.707] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.707] [global] [warning] requested 2000 rows for sampling, but only 247 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.717] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.717] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.774] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.957] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.957] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.957] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.957] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.960] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.963] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.965] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.967] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.969] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.970] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.977] [hyper specializer] [info] generated code in 0.019999s\n[2022-11-09 05:53:03.030] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.030] [Lambda worker] [info] -- hyperspecialization took 1.552384s\n[2022-11-09 05:53:03.067] [global] [info] TransformStage - Optimization via LLVM passes took 0.036876 ms\n[2022-11-09 05:53:03.067] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.080] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.080] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.080] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.564] [Lambda worker] [info] fast path took: 5.484195s\n[2022-11-09 05:53:08.564] [Lambda worker] [info] Input rows processed: normal: 15418 unresolved: 95787\n[2022-11-09 05:53:08.564] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 95787\n[2022-11-09 05:53:08.564] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.564] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.564] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.789] [Lambda worker] [info] Compilation of slow path took 1.224811s\n[2022-11-09 05:53:14.710] [Lambda worker] [info] Resolved buffer, compiled: 3966 interpreted: 40589 unresolved: 0\n[2022-11-09 05:53:20.171] [Lambda worker] [info] Resolved buffer, compiled: 4280 interpreted: 46952 unresolved: 0\n[2022-11-09 05:53:20.178] [Lambda worker] [info] Exception resolution/slow path done. Took 11.613070s\n[2022-11-09 05:53:20.178] [Lambda worker] [info] Data processed in 17.0975s 77.08 KB (3317 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:20.178] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:20.178] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:20.178] [Lambda worker] [info] Writing output from 2 parts (77.08 KB, 3317 rows)\n[2022-11-09 05:53:20.178] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:20.178] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:20.178] [s3fs] [info] Writing buffer of size 32373\n[2022-11-09 05:53:20.178] [s3fs] [info] Writing buffer of size 46561\n[2022-11-09 05:53:20.178] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:20.178] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:20.241] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:20.241] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:20.241] [Lambda worker] [info] Took 17.161356s in total\n[2022-11-09 05:53:20.241] [Lambda worker] [info] Paths rows took: normal: 15418 general: 8246 interpreter: 87541 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2016-10-15.json:0-268435456"]},{"container":{"reused":true,"requestId":"7fb67d6f-9c1c-48a4-85d7-7dcc23c38c43","uuid":"3b38dedb-173f-4746-a920-252be8236012","msRemaining":581057,"requestsServed":2,"startTimestamp":1667973146460120395,"deadlineTimestamp":1667973808491000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.511] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.544] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.567] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.567] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.567] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2017-10-15.json:0-268435456\n[2022-11-09 05:53:01.568] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2017-10-15.json:0-268435456\n[2022-11-09 05:53:01.569] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.640] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.645] [global] [info] retrieving pythonic sample took: 0.003793s\n[2022-11-09 05:53:01.711] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.713] [global] [info] retrieving pythonic sample took: 0.000275s\n[2022-11-09 05:53:01.722] [hyper specializer] [info] Deserialization of Code context took 0.152888s\n[2022-11-09 05:53:01.722] [hyper specializer] [info] Total Stage Decode took 0.153914s\n[2022-11-09 05:53:01.824] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:01.824] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.824] [fileinputoperator] [info] Filling sample cache for json operator took 0.102029s (1 entries, 0 rows)\n[2022-11-09 05:53:01.852] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:01.944] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:0-268435456 on 256.00 KB\n[2022-11-09 05:53:02.091] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.091] [fileinputoperator] [info] Extracting row sample took 0.267006s\n[2022-11-09 05:53:02.277] [hyper specializer] [info] sampling (setInputFiles) took 0.554928s\n[2022-11-09 05:53:02.278] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.278] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.278] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.278] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.278] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.278] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.278] [global] [warning] requested 2000 rows for sampling, but only 286 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.286] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.286] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.339] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.476] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.476] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.476] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.476] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.479] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.482] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.484] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.486] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.487] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.488] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.496] [hyper specializer] [info] generated code in 0.019646s\n[2022-11-09 05:53:02.544] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.544] [Lambda worker] [info] -- hyperspecialization took 0.977623s\n[2022-11-09 05:53:02.581] [global] [info] TransformStage - Optimization via LLVM passes took 0.036458 ms\n[2022-11-09 05:53:02.581] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.594] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.594] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.594] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.792] [Lambda worker] [info] fast path took: 5.198496s\n[2022-11-09 05:53:07.792] [Lambda worker] [info] Input rows processed: normal: 16457 unresolved: 104318\n[2022-11-09 05:53:07.792] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 104318\n[2022-11-09 05:53:07.792] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.792] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.792] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.023] [Lambda worker] [info] Compilation of slow path took 1.230094s\n[2022-11-09 05:53:14.545] [Lambda worker] [info] Resolved buffer, compiled: 3602 interpreted: 46632 unresolved: 0\n[2022-11-09 05:53:20.367] [Lambda worker] [info] Resolved buffer, compiled: 3933 interpreted: 50151 unresolved: 0\n[2022-11-09 05:53:20.373] [Lambda worker] [info] Exception resolution/slow path done. Took 12.580595s\n[2022-11-09 05:53:20.373] [Lambda worker] [info] Data processed in 17.7793s 73.68 KB (3141 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:20.373] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.373] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:20.373] [Lambda worker] [info] Writing output from 2 parts (73.68 KB, 3141 rows)\n[2022-11-09 05:53:20.373] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.373] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:20.373] [s3fs] [info] Writing buffer of size 33885\n[2022-11-09 05:53:20.373] [s3fs] [info] Writing buffer of size 41568\n[2022-11-09 05:53:20.373] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.373] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:20.433] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:20.433] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:20.433] [Lambda worker] [info] Took 17.838996s in total\n[2022-11-09 05:53:20.433] [Lambda worker] [info] Paths rows took: normal: 16457 general: 7535 interpreter: 96783 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2017-10-15.json:0-268435456"]},{"container":{"reused":true,"requestId":"6764f7c6-90f0-46c0-baaa-783197dd980a","uuid":"4ca88929-ee71-4376-ae40-02a1baaef947","msRemaining":581017,"requestsServed":2,"startTimestamp":1667973146286065323,"deadlineTimestamp":1667973808529000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.548] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.581] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.605] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.605] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.605] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2017-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:01.606] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2017-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:01.607] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.677] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.682] [global] [info] retrieving pythonic sample took: 0.003576s\n[2022-11-09 05:53:01.749] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.835] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.835] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.835] [fileinputoperator] [info] Filling sample cache for json operator took 0.085123s (1 entries, 0 rows)\n[2022-11-09 05:53:01.867] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.020] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.199] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.199] [fileinputoperator] [info] Extracting row sample took 0.363742s\n[2022-11-09 05:53:02.248] [global] [info] retrieving pythonic sample took: 0.497456s\n[2022-11-09 05:53:02.258] [hyper specializer] [info] Deserialization of Code context took 0.650712s\n[2022-11-09 05:53:02.258] [hyper specializer] [info] Total Stage Decode took 0.651804s\n[2022-11-09 05:53:02.350] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.351] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.351] [fileinputoperator] [info] Filling sample cache for json operator took 0.061978s (1 entries, 0 rows)\n[2022-11-09 05:53:02.378] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.494] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.627] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.627] [fileinputoperator] [info] Extracting row sample took 0.275887s\n[2022-11-09 05:53:02.810] [hyper specializer] [info] sampling (setInputFiles) took 0.551656s\n[2022-11-09 05:53:02.810] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.810] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.810] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.810] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.810] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.810] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.810] [global] [warning] requested 2000 rows for sampling, but only 197 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.818] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.818] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.869] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.032] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.032] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.032] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.032] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.035] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.038] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.040] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.042] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.043] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.044] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.052] [hyper specializer] [info] generated code in 0.019948s\n[2022-11-09 05:53:03.099] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.099] [Lambda worker] [info] -- hyperspecialization took 1.493790s\n[2022-11-09 05:53:03.135] [global] [info] TransformStage - Optimization via LLVM passes took 0.036439 ms\n[2022-11-09 05:53:03.135] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.148] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.148] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.148] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.375] [Lambda worker] [info] fast path took: 5.226056s\n[2022-11-09 05:53:08.375] [Lambda worker] [info] Input rows processed: normal: 11584 unresolved: 93117\n[2022-11-09 05:53:08.375] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 93117\n[2022-11-09 05:53:08.375] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.375] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.375] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.682] [Lambda worker] [info] Compilation of slow path took 1.307382s\n[2022-11-09 05:53:15.177] [Lambda worker] [info] Resolved buffer, compiled: 3382 interpreted: 43982 unresolved: 0\n[2022-11-09 05:53:20.442] [Lambda worker] [info] Resolved buffer, compiled: 3019 interpreted: 42734 unresolved: 0\n[2022-11-09 05:53:20.448] [Lambda worker] [info] Exception resolution/slow path done. Took 12.073661s\n[2022-11-09 05:53:20.448] [Lambda worker] [info] Data processed in 17.3s 68.89 KB (2931 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:20.448] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.448] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:20.448] [Lambda worker] [info] Writing output from 2 parts (68.89 KB, 2931 rows)\n[2022-11-09 05:53:20.448] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.448] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:20.448] [s3fs] [info] Writing buffer of size 36726\n[2022-11-09 05:53:20.448] [s3fs] [info] Writing buffer of size 33819\n[2022-11-09 05:53:20.448] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.448] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:20.511] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:20.511] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:20.511] [Lambda worker] [info] Took 17.362824s in total\n[2022-11-09 05:53:20.511] [Lambda worker] [info] Paths rows took: normal: 11584 general: 6401 interpreter: 86716 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2017-10-15.json:1342177280-1610612736"]},{"container":{"reused":true,"requestId":"55524733-2a7d-4072-b2c7-cd4ca551990d","uuid":"55ec06ea-d21d-4b2a-8346-97f254bc79a5","msRemaining":580851,"requestsServed":2,"startTimestamp":1667973146438925422,"deadlineTimestamp":1667973808500000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.522] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.555] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.578] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.578] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.578] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2017-10-15.json:536870912-805306368\n[2022-11-09 05:53:01.580] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2017-10-15.json:536870912-805306368\n[2022-11-09 05:53:01.581] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.652] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.657] [global] [info] retrieving pythonic sample took: 0.003715s\n[2022-11-09 05:53:01.725] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.797] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.797] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.797] [fileinputoperator] [info] Filling sample cache for json operator took 0.071143s (1 entries, 0 rows)\n[2022-11-09 05:53:01.839] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.993] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.170] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.170] [fileinputoperator] [info] Extracting row sample took 0.372499s\n[2022-11-09 05:53:02.219] [global] [info] retrieving pythonic sample took: 0.492933s\n[2022-11-09 05:53:02.230] [hyper specializer] [info] Deserialization of Code context took 0.648899s\n[2022-11-09 05:53:02.230] [hyper specializer] [info] Total Stage Decode took 0.649932s\n[2022-11-09 05:53:02.307] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.307] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.307] [fileinputoperator] [info] Filling sample cache for json operator took 0.047073s (1 entries, 0 rows)\n[2022-11-09 05:53:02.364] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.453] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.624] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.625] [fileinputoperator] [info] Extracting row sample took 0.317072s\n[2022-11-09 05:53:02.787] [hyper specializer] [info] sampling (setInputFiles) took 0.556830s\n[2022-11-09 05:53:02.787] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.787] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.787] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.787] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.787] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.787] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.787] [global] [warning] requested 2000 rows for sampling, but only 103 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.791] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.791] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.838] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.051] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.051] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.051] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.051] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.054] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.057] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.059] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.061] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.062] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.063] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.071] [hyper specializer] [info] generated code in 0.019653s\n[2022-11-09 05:53:03.115] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.115] [Lambda worker] [info] -- hyperspecialization took 1.536732s\n[2022-11-09 05:53:03.152] [global] [info] TransformStage - Optimization via LLVM passes took 0.036373 ms\n[2022-11-09 05:53:03.152] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.165] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.165] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.165] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.375] [Lambda worker] [info] fast path took: 5.209524s\n[2022-11-09 05:53:08.375] [Lambda worker] [info] Input rows processed: normal: 14587 unresolved: 97756\n[2022-11-09 05:53:08.375] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 97756\n[2022-11-09 05:53:08.375] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.375] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.375] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.675] [Lambda worker] [info] Compilation of slow path took 1.299871s\n[2022-11-09 05:53:15.220] [Lambda worker] [info] Resolved buffer, compiled: 3940 interpreted: 45787 unresolved: 0\n[2022-11-09 05:53:20.586] [Lambda worker] [info] Resolved buffer, compiled: 3687 interpreted: 44342 unresolved: 0\n[2022-11-09 05:53:20.592] [Lambda worker] [info] Exception resolution/slow path done. Took 12.217644s\n[2022-11-09 05:53:20.592] [Lambda worker] [info] Data processed in 17.4274s 81.92 KB (3486 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:20.592] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.592] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:20.592] [Lambda worker] [info] Writing output from 2 parts (81.92 KB, 3486 rows)\n[2022-11-09 05:53:20.592] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.592] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:20.592] [s3fs] [info] Writing buffer of size 42890\n[2022-11-09 05:53:20.592] [s3fs] [info] Writing buffer of size 40994\n[2022-11-09 05:53:20.593] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.593] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:20.648] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:20.648] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:20.648] [Lambda worker] [info] Took 17.482864s in total\n[2022-11-09 05:53:20.648] [Lambda worker] [info] Paths rows took: normal: 14587 general: 7627 interpreter: 90129 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2017-10-15.json:536870912-805306368"]},{"container":{"reused":true,"requestId":"5a720cec-2832-4356-b686-66bc971413b4","uuid":"f7f2a243-8564-41c7-8501-558d2347e6ad","msRemaining":580804,"requestsServed":2,"startTimestamp":1667973146379874203,"deadlineTimestamp":1667973808489000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.509] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.542] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.564] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.564] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.564] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2017-10-15.json:268435456-536870912\n[2022-11-09 05:53:01.566] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2017-10-15.json:268435456-536870912\n[2022-11-09 05:53:01.567] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.636] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.641] [global] [info] retrieving pythonic sample took: 0.003479s\n[2022-11-09 05:53:01.708] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.709] [global] [info] retrieving pythonic sample took: 0.000267s\n[2022-11-09 05:53:01.718] [hyper specializer] [info] Deserialization of Code context took 0.151516s\n[2022-11-09 05:53:01.718] [hyper specializer] [info] Total Stage Decode took 0.152558s\n[2022-11-09 05:53:01.805] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:01.805] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.805] [fileinputoperator] [info] Filling sample cache for json operator took 0.086600s (1 entries, 0 rows)\n[2022-11-09 05:53:01.830] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:01.940] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:02.067] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.067] [fileinputoperator] [info] Extracting row sample took 0.262463s\n[2022-11-09 05:53:02.233] [hyper specializer] [info] sampling (setInputFiles) took 0.514859s\n[2022-11-09 05:53:02.234] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.234] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.234] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.234] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.234] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.234] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.234] [global] [warning] requested 2000 rows for sampling, but only 195 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.240] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.240] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.287] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.438] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.438] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.438] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.438] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.441] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.444] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.446] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.448] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.449] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.450] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.457] [hyper specializer] [info] generated code in 0.019085s\n[2022-11-09 05:53:02.501] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.501] [Lambda worker] [info] -- hyperspecialization took 0.936295s\n[2022-11-09 05:53:02.537] [global] [info] TransformStage - Optimization via LLVM passes took 0.036095 ms\n[2022-11-09 05:53:02.537] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.549] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.550] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.550] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.722] [Lambda worker] [info] fast path took: 5.172425s\n[2022-11-09 05:53:07.722] [Lambda worker] [info] Input rows processed: normal: 14441 unresolved: 105290\n[2022-11-09 05:53:07.722] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 105290\n[2022-11-09 05:53:07.722] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:07.722] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:07.722] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:08.925] [Lambda worker] [info] Compilation of slow path took 1.203323s\n[2022-11-09 05:53:14.707] [Lambda worker] [info] Resolved buffer, compiled: 4009 interpreted: 48617 unresolved: 0\n[2022-11-09 05:53:20.620] [Lambda worker] [info] Resolved buffer, compiled: 4267 interpreted: 48397 unresolved: 0\n[2022-11-09 05:53:20.626] [Lambda worker] [info] Exception resolution/slow path done. Took 12.904337s\n[2022-11-09 05:53:20.626] [Lambda worker] [info] Data processed in 18.0769s 90.25 KB (3842 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:20.627] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.627] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:20.627] [Lambda worker] [info] Writing output from 2 parts (90.25 KB, 3842 rows)\n[2022-11-09 05:53:20.627] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.627] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:20.627] [s3fs] [info] Writing buffer of size 44931\n[2022-11-09 05:53:20.627] [s3fs] [info] Writing buffer of size 47482\n[2022-11-09 05:53:20.627] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.627] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:20.684] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:20.684] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:20.684] [Lambda worker] [info] Took 18.134397s in total\n[2022-11-09 05:53:20.684] [Lambda worker] [info] Paths rows took: normal: 14441 general: 8276 interpreter: 97014 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2017-10-15.json:268435456-536870912"]},{"container":{"reused":true,"requestId":"a4c472c0-32e9-4210-ba72-79091d73cf17","uuid":"0c5ccf80-e722-423a-a368-e188e6368d04","msRemaining":580698,"requestsServed":2,"startTimestamp":1667973146242462117,"deadlineTimestamp":1667973808508000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.529] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.562] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.584] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.585] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.585] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2017-10-15.json:805306368-1073741824\n[2022-11-09 05:53:01.586] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2017-10-15.json:805306368-1073741824\n[2022-11-09 05:53:01.587] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.657] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.661] [global] [info] retrieving pythonic sample took: 0.003716s\n[2022-11-09 05:53:01.728] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.796] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.796] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.796] [fileinputoperator] [info] Filling sample cache for json operator took 0.067716s (1 entries, 0 rows)\n[2022-11-09 05:53:01.824] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.978] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.154] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.154] [fileinputoperator] [info] Extracting row sample took 0.357416s\n[2022-11-09 05:53:02.201] [global] [info] retrieving pythonic sample took: 0.472166s\n[2022-11-09 05:53:02.211] [hyper specializer] [info] Deserialization of Code context took 0.623822s\n[2022-11-09 05:53:02.211] [hyper specializer] [info] Total Stage Decode took 0.624900s\n[2022-11-09 05:53:02.284] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.284] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.284] [fileinputoperator] [info] Filling sample cache for json operator took 0.043654s (1 entries, 0 rows)\n[2022-11-09 05:53:02.312] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.412] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:805306368-1073741824 on 256.00 KB\n[2022-11-09 05:53:02.561] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.561] [fileinputoperator] [info] Extracting row sample took 0.276861s\n[2022-11-09 05:53:02.742] [hyper specializer] [info] sampling (setInputFiles) took 0.531652s\n[2022-11-09 05:53:02.743] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.743] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.743] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.743] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.743] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.743] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.743] [global] [warning] requested 2000 rows for sampling, but only 206 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.751] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.751] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.803] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.972] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.972] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.972] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.972] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.975] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.978] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.980] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.982] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.983] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.984] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.991] [hyper specializer] [info] generated code in 0.019665s\n[2022-11-09 05:53:03.039] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.039] [Lambda worker] [info] -- hyperspecialization took 1.454188s\n[2022-11-09 05:53:03.075] [global] [info] TransformStage - Optimization via LLVM passes took 0.036387 ms\n[2022-11-09 05:53:03.075] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.088] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.088] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.088] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.220] [Lambda worker] [info] fast path took: 5.131733s\n[2022-11-09 05:53:08.220] [Lambda worker] [info] Input rows processed: normal: 12559 unresolved: 101540\n[2022-11-09 05:53:08.220] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 101540\n[2022-11-09 05:53:08.220] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.220] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.220] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.463] [Lambda worker] [info] Compilation of slow path took 1.242709s\n[2022-11-09 05:53:15.062] [Lambda worker] [info] Resolved buffer, compiled: 3936 interpreted: 46277 unresolved: 0\n[2022-11-09 05:53:20.733] [Lambda worker] [info] Resolved buffer, compiled: 4122 interpreted: 47205 unresolved: 0\n[2022-11-09 05:53:20.740] [Lambda worker] [info] Exception resolution/slow path done. Took 12.519713s\n[2022-11-09 05:53:20.740] [Lambda worker] [info] Data processed in 17.6516s 90.69 KB (3857 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:20.740] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.740] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:20.740] [Lambda worker] [info] Writing output from 2 parts (90.69 KB, 3857 rows)\n[2022-11-09 05:53:20.740] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.740] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:20.740] [s3fs] [info] Writing buffer of size 46887\n[2022-11-09 05:53:20.740] [s3fs] [info] Writing buffer of size 45982\n[2022-11-09 05:53:20.740] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:20.740] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:20.809] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:20.809] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:20.809] [Lambda worker] [info] Took 17.720672s in total\n[2022-11-09 05:53:20.809] [Lambda worker] [info] Paths rows took: normal: 12559 general: 8058 interpreter: 93482 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2017-10-15.json:805306368-1073741824"]},{"container":{"reused":true,"requestId":"b33e0518-996f-422f-9d87-38680d0e5cae","uuid":"ebabfb9d-7725-41b3-971b-88f46385b661","msRemaining":580812,"requestsServed":2,"startTimestamp":1667973147575172768,"deadlineTimestamp":1667973808813000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.832] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.864] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.887] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.887] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.887] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:01.888] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:1342177280-1610612736\n[2022-11-09 05:53:01.889] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.959] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.963] [global] [info] retrieving pythonic sample took: 0.003568s\n[2022-11-09 05:53:02.030] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.031] [global] [info] retrieving pythonic sample took: 0.000259s\n[2022-11-09 05:53:02.041] [hyper specializer] [info] Deserialization of Code context took 0.151441s\n[2022-11-09 05:53:02.041] [hyper specializer] [info] Total Stage Decode took 0.152426s\n[2022-11-09 05:53:02.127] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.127] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.127] [fileinputoperator] [info] Filling sample cache for json operator took 0.086200s (1 entries, 0 rows)\n[2022-11-09 05:53:02.166] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.280] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:1342177280-1610612736 on 256.00 KB\n[2022-11-09 05:53:02.386] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.386] [fileinputoperator] [info] Extracting row sample took 0.258541s\n[2022-11-09 05:53:02.532] [hyper specializer] [info] sampling (setInputFiles) took 0.490920s\n[2022-11-09 05:53:02.532] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.532] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.532] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.532] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.532] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.532] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.532] [global] [warning] requested 2000 rows for sampling, but only 203 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.538] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.538] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.580] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.709] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.709] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.709] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.710] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.712] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.715] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.717] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.719] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.720] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.721] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.728] [hyper specializer] [info] generated code in 0.018453s\n[2022-11-09 05:53:02.765] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.766] [Lambda worker] [info] -- hyperspecialization took 0.878467s\n[2022-11-09 05:53:02.800] [global] [info] TransformStage - Optimization via LLVM passes took 0.034712 ms\n[2022-11-09 05:53:02.800] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.812] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.812] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.812] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.858] [Lambda worker] [info] Spilling 131071245/131072000 to s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam8/5/spill_except_0_0.tmp\n[2022-11-09 05:53:07.858] [s3fs] [info] Writing buffer of size 8\n[2022-11-09 05:53:07.858] [s3fs] [info] Writing buffer of size 8\n[2022-11-09 05:53:07.858] [s3fs] [info] Writing buffer of size 131071245\n[2022-11-09 05:53:07.858] [s3fs] [info] Writing buffer of size 67108848\n[2022-11-09 05:53:08.796] [s3fs] [info] initiated multiupload, first part with size=67108864 uploaded.\n[2022-11-09 05:53:08.796] [s3fs] [info] Writing buffer of size 63962397\n[2022-11-09 05:53:09.473] [s3fs] [info] uploaded another part with size=63962397.\n[2022-11-09 05:53:09.473] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam8/5/spill_except_0_0.tmp\n[2022-11-09 05:53:09.473] [s3fs] [info] Completing multipart upload, uploading last part.\n[2022-11-09 05:53:09.473] [s3fs] [info] Skipping empty buffer (partno = 3)\n[2022-11-09 05:53:09.473] [s3fs] [info] Completing multipart upload, completion request.\n[2022-11-09 05:53:09.473] [s3fs] [info] Completing multi-part upload for 3 parts\n[2022-11-09 05:53:09.581] [s3fs] [info] Multipart done.\n[2022-11-09 05:53:09.581] [Lambda worker] [info] Spilled 125.00 MB to s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam8/5/spill_except_0_0.tmp\n[2022-11-09 05:53:09.592] [Lambda worker] [info] fast path took: 6.779761s\n[2022-11-09 05:53:09.592] [Lambda worker] [info] Input rows processed: normal: 6991 unresolved: 66301\n[2022-11-09 05:53:09.592] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 66301\n[2022-11-09 05:53:09.592] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.592] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.592] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.785] [Lambda worker] [info] Compilation of slow path took 1.192644s\n[2022-11-09 05:53:10.790] [Lambda worker] [info] Resolved buffer, compiled: 8 interpreted: 31 unresolved: 0\n[2022-11-09 05:53:10.790] [Lambda worker] [info] Processing 1 spilled except file\n[2022-11-09 05:53:16.948] [Lambda worker] [info] Resolved buffer, compiled: 3326 interpreted: 29993 unresolved: 0\n[2022-11-09 05:53:16.956] [Lambda worker] [info] except spill files done.\n[2022-11-09 05:53:20.898] [Lambda worker] [info] Resolved buffer, compiled: 3517 interpreted: 29426 unresolved: 0\n[2022-11-09 05:53:20.904] [Lambda worker] [info] Exception resolution/slow path done. Took 11.311533s\n[2022-11-09 05:53:20.904] [Lambda worker] [info] Data processed in 18.0915s 62.44 KB (2608 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:20.904] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:20.904] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:20.904] [Lambda worker] [info] Writing output from 2 parts (62.44 KB, 2608 rows)\n[2022-11-09 05:53:20.904] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:20.904] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:20.904] [s3fs] [info] Writing buffer of size 31701\n[2022-11-09 05:53:20.904] [s3fs] [info] Writing buffer of size 32236\n[2022-11-09 05:53:20.904] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:20.904] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:21.000] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:21.000] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:21.000] [Lambda worker] [info] Took 18.187391s in total\n[2022-11-09 05:53:21.000] [Lambda worker] [info] Paths rows took: normal: 6991 general: 6851 interpreter: 59450 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:1342177280-1610612736"]},{"container":{"reused":true,"requestId":"1d6de05c-8bc7-4815-92d1-6db39c9fbae3","uuid":"15757b4a-b114-45e1-859e-cfd34b9da5a9","msRemaining":580335,"requestsServed":2,"startTimestamp":1667973146243053580,"deadlineTimestamp":1667973808520000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.540] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.572] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.595] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.595] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.595] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2017-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:01.596] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2017-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:01.598] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.667] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.672] [global] [info] retrieving pythonic sample took: 0.003656s\n[2022-11-09 05:53:01.739] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.809] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.809] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.809] [fileinputoperator] [info] Filling sample cache for json operator took 0.069707s (1 entries, 0 rows)\n[2022-11-09 05:53:01.844] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.022] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.200] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.200] [fileinputoperator] [info] Extracting row sample took 0.390341s\n[2022-11-09 05:53:02.248] [global] [info] retrieving pythonic sample took: 0.507763s\n[2022-11-09 05:53:02.258] [hyper specializer] [info] Deserialization of Code context took 0.660091s\n[2022-11-09 05:53:02.258] [hyper specializer] [info] Total Stage Decode took 0.661208s\n[2022-11-09 05:53:02.347] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.347] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.347] [fileinputoperator] [info] Filling sample cache for json operator took 0.059811s (1 entries, 0 rows)\n[2022-11-09 05:53:02.383] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.519] [global] [info] sampled s3://tuplex-public/data/github_daily/2017-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.628] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.628] [fileinputoperator] [info] Extracting row sample took 0.280842s\n[2022-11-09 05:53:02.775] [hyper specializer] [info] sampling (setInputFiles) took 0.516789s\n[2022-11-09 05:53:02.775] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.775] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.775] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.775] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.775] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.775] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.775] [global] [warning] requested 2000 rows for sampling, but only 150 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.781] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.781] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.823] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.053] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.053] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.053] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.053] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.056] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.059] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.061] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.063] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.064] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.066] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.073] [hyper specializer] [info] generated code in 0.019854s\n[2022-11-09 05:53:03.113] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.113] [Lambda worker] [info] -- hyperspecialization took 1.517617s\n[2022-11-09 05:53:03.150] [global] [info] TransformStage - Optimization via LLVM passes took 0.037352 ms\n[2022-11-09 05:53:03.150] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.163] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.163] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.163] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.555] [Lambda worker] [info] fast path took: 5.391708s\n[2022-11-09 05:53:08.555] [Lambda worker] [info] Input rows processed: normal: 11585 unresolved: 98389\n[2022-11-09 05:53:08.555] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 98389\n[2022-11-09 05:53:08.555] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.555] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.555] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.786] [Lambda worker] [info] Compilation of slow path took 1.230492s\n[2022-11-09 05:53:15.519] [Lambda worker] [info] Resolved buffer, compiled: 4105 interpreted: 45667 unresolved: 0\n[2022-11-09 05:53:21.108] [Lambda worker] [info] Resolved buffer, compiled: 3683 interpreted: 44934 unresolved: 0\n[2022-11-09 05:53:21.115] [Lambda worker] [info] Exception resolution/slow path done. Took 12.559372s\n[2022-11-09 05:53:21.115] [Lambda worker] [info] Data processed in 17.9512s 79.12 KB (3370 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:21.115] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:21.115] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:21.115] [Lambda worker] [info] Writing output from 2 parts (79.12 KB, 3370 rows)\n[2022-11-09 05:53:21.115] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:21.115] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:21.115] [s3fs] [info] Writing buffer of size 41214\n[2022-11-09 05:53:21.115] [s3fs] [info] Writing buffer of size 39803\n[2022-11-09 05:53:21.115] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part6.csv.csv\n[2022-11-09 05:53:21.115] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:21.183] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:21.183] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:21.183] [Lambda worker] [info] Took 18.020135s in total\n[2022-11-09 05:53:21.183] [Lambda worker] [info] Paths rows took: normal: 11585 general: 7788 interpreter: 90601 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2017-10-15.json:1073741824-1342177280"]},{"container":{"reused":true,"requestId":"47f9a9f0-8409-482f-94fb-fe1007a4abcc","uuid":"2fbb3e6e-1daf-431a-bc75-5e1eddf21e47","msRemaining":580981,"requestsServed":2,"startTimestamp":1667973147211373220,"deadlineTimestamp":1667973809171000000},"invoked_containers":[],"log":"[2022-11-09 05:53:02.191] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:02.225] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:02.248] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:02.248] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:02.248] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2020-10-15.json:2415919104-2684354560\n[2022-11-09 05:53:02.249] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2020-10-15.json:2415919104-2684354560\n[2022-11-09 05:53:02.250] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:02.322] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.326] [global] [info] retrieving pythonic sample took: 0.003728s\n[2022-11-09 05:53:02.393] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.394] [global] [info] retrieving pythonic sample took: 0.000260s\n[2022-11-09 05:53:02.404] [hyper specializer] [info] Deserialization of Code context took 0.154075s\n[2022-11-09 05:53:02.404] [hyper specializer] [info] Total Stage Decode took 0.155103s\n[2022-11-09 05:53:02.518] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:2415919104-2684354560 on 256.00 KB\n[2022-11-09 05:53:02.518] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.518] [fileinputoperator] [info] Filling sample cache for json operator took 0.113623s (1 entries, 0 rows)\n[2022-11-09 05:53:02.552] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:2415919104-2684354560 on 256.00 KB\n[2022-11-09 05:53:02.642] [global] [info] sampled s3://tuplex-public/data/github_daily/2020-10-15.json:2415919104-2684354560 on 256.00 KB\n[2022-11-09 05:53:02.736] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.736] [fileinputoperator] [info] Extracting row sample took 0.218068s\n[2022-11-09 05:53:02.861] [hyper specializer] [info] sampling (setInputFiles) took 0.456698s\n[2022-11-09 05:53:02.861] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.861] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.861] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.861] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.861] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.861] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.861] [global] [warning] requested 2000 rows for sampling, but only 102 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.865] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.865] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.901] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.073] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.073] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.073] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.074] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.077] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.080] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.081] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.083] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.085] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.086] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.093] [hyper specializer] [info] generated code in 0.019533s\n[2022-11-09 05:53:03.125] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.125] [Lambda worker] [info] -- hyperspecialization took 0.877783s\n[2022-11-09 05:53:03.163] [global] [info] TransformStage - Optimization via LLVM passes took 0.037135 ms\n[2022-11-09 05:53:03.163] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.176] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.176] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.176] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.425] [Lambda worker] [info] Spilling 131061075/131072000 to s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam9/9/spill_except_0_0.tmp\n[2022-11-09 05:53:08.425] [s3fs] [info] Writing buffer of size 8\n[2022-11-09 05:53:08.425] [s3fs] [info] Writing buffer of size 8\n[2022-11-09 05:53:08.425] [s3fs] [info] Writing buffer of size 131061075\n[2022-11-09 05:53:08.425] [s3fs] [info] Writing buffer of size 67108848\n[2022-11-09 05:53:09.105] [s3fs] [info] initiated multiupload, first part with size=67108864 uploaded.\n[2022-11-09 05:53:09.105] [s3fs] [info] Writing buffer of size 63952227\n[2022-11-09 05:53:09.677] [s3fs] [info] uploaded another part with size=63952227.\n[2022-11-09 05:53:09.677] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam9/9/spill_except_0_0.tmp\n[2022-11-09 05:53:09.677] [s3fs] [info] Completing multipart upload, uploading last part.\n[2022-11-09 05:53:09.677] [s3fs] [info] Skipping empty buffer (partno = 3)\n[2022-11-09 05:53:09.677] [s3fs] [info] Completing multipart upload, completion request.\n[2022-11-09 05:53:09.677] [s3fs] [info] Completing multi-part upload for 3 parts\n[2022-11-09 05:53:09.809] [s3fs] [info] Multipart done.\n[2022-11-09 05:53:09.809] [Lambda worker] [info] Spilled 124.99 MB to s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam9/9/spill_except_0_0.tmp\n[2022-11-09 05:53:09.822] [Lambda worker] [info] fast path took: 6.646251s\n[2022-11-09 05:53:09.822] [Lambda worker] [info] Input rows processed: normal: 5485 unresolved: 58084\n[2022-11-09 05:53:09.823] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 58084\n[2022-11-09 05:53:09.823] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.823] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.823] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:11.073] [Lambda worker] [info] Compilation of slow path took 1.250715s\n[2022-11-09 05:53:11.087] [Lambda worker] [info] Resolved buffer, compiled: 5 interpreted: 91 unresolved: 0\n[2022-11-09 05:53:11.087] [Lambda worker] [info] Processing 1 spilled except file\n[2022-11-09 05:53:17.338] [Lambda worker] [info] Resolved buffer, compiled: 2191 interpreted: 28980 unresolved: 0\n[2022-11-09 05:53:17.346] [Lambda worker] [info] except spill files done.\n[2022-11-09 05:53:21.081] [Lambda worker] [info] Resolved buffer, compiled: 2106 interpreted: 24711 unresolved: 0\n[2022-11-09 05:53:21.087] [Lambda worker] [info] Exception resolution/slow path done. Took 11.264239s\n[2022-11-09 05:53:21.087] [Lambda worker] [info] Data processed in 17.9107s 30.19 KB (1255 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:21.087] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:21.087] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:21.087] [Lambda worker] [info] Writing output from 2 parts (30.19 KB, 1255 rows)\n[2022-11-09 05:53:21.087] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:21.087] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:21.087] [s3fs] [info] Writing buffer of size 16051\n[2022-11-09 05:53:21.087] [s3fs] [info] Writing buffer of size 14861\n[2022-11-09 05:53:21.087] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part9.csv.csv\n[2022-11-09 05:53:21.087] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:21.189] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:21.189] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:21.189] [Lambda worker] [info] Took 18.012805s in total\n[2022-11-09 05:53:21.189] [Lambda worker] [info] Paths rows took: normal: 5485 general: 4302 interpreter: 53782 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2020-10-15.json:2415919104-2684354560"]},{"container":{"reused":true,"requestId":"3466cd39-4598-4c77-aaa9-6181453823b8","uuid":"4d4f753e-fab1-4989-b283-98a60a69250d","msRemaining":579972,"requestsServed":2,"startTimestamp":1667973146222645444,"deadlineTimestamp":1667973808441000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.461] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.494] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.517] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.517] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.517] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2016-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:01.518] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2016-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:01.519] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.590] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.594] [global] [info] retrieving pythonic sample took: 0.003612s\n[2022-11-09 05:53:01.661] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.738] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.739] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.739] [fileinputoperator] [info] Filling sample cache for json operator took 0.076607s (1 entries, 0 rows)\n[2022-11-09 05:53:01.766] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.924] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.101] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.101] [fileinputoperator] [info] Extracting row sample took 0.362175s\n[2022-11-09 05:53:02.148] [global] [info] retrieving pythonic sample took: 0.486020s\n[2022-11-09 05:53:02.158] [hyper specializer] [info] Deserialization of Code context took 0.638868s\n[2022-11-09 05:53:02.158] [hyper specializer] [info] Total Stage Decode took 0.639934s\n[2022-11-09 05:53:02.245] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.245] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.245] [fileinputoperator] [info] Filling sample cache for json operator took 0.057734s (1 entries, 0 rows)\n[2022-11-09 05:53:02.280] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.408] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.559] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.559] [fileinputoperator] [info] Extracting row sample took 0.313831s\n[2022-11-09 05:53:02.772] [hyper specializer] [info] sampling (setInputFiles) took 0.614157s\n[2022-11-09 05:53:02.774] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.774] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.774] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.774] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.774] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.774] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.774] [global] [warning] requested 2000 rows for sampling, but only 241 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.783] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.783] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.841] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.099] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.099] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.099] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.099] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.102] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.105] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.107] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.109] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.110] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.112] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.119] [hyper specializer] [info] generated code in 0.019337s\n[2022-11-09 05:53:03.172] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.172] [Lambda worker] [info] -- hyperspecialization took 1.654911s\n[2022-11-09 05:53:03.208] [global] [info] TransformStage - Optimization via LLVM passes took 0.036501 ms\n[2022-11-09 05:53:03.208] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.222] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.222] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.222] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.787] [Lambda worker] [info] fast path took: 5.565095s\n[2022-11-09 05:53:08.787] [Lambda worker] [info] Input rows processed: normal: 13668 unresolved: 94461\n[2022-11-09 05:53:08.787] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 94461\n[2022-11-09 05:53:08.787] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.787] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.787] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.150] [Lambda worker] [info] Compilation of slow path took 1.363389s\n[2022-11-09 05:53:15.866] [Lambda worker] [info] Resolved buffer, compiled: 3504 interpreted: 45905 unresolved: 0\n[2022-11-09 05:53:21.368] [Lambda worker] [info] Resolved buffer, compiled: 3094 interpreted: 41958 unresolved: 0\n[2022-11-09 05:53:21.375] [Lambda worker] [info] Exception resolution/slow path done. Took 12.588300s\n[2022-11-09 05:53:21.375] [Lambda worker] [info] Data processed in 18.1536s 62.24 KB (2678 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:21.375] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:21.375] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:21.375] [Lambda worker] [info] Writing output from 2 parts (62.24 KB, 2678 rows)\n[2022-11-09 05:53:21.375] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:21.375] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:21.375] [s3fs] [info] Writing buffer of size 33431\n[2022-11-09 05:53:21.376] [s3fs] [info] Writing buffer of size 30299\n[2022-11-09 05:53:21.376] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:21.376] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:21.467] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:21.467] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:21.468] [Lambda worker] [info] Took 18.245713s in total\n[2022-11-09 05:53:21.468] [Lambda worker] [info] Paths rows took: normal: 13668 general: 6598 interpreter: 87863 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2016-10-15.json:1073741824-1342177280"]},{"container":{"reused":true,"requestId":"0d9d21a1-4c11-4fb2-adf0-a2f72ef7f7fe","uuid":"c84581fe-6212-4250-96f3-5cb31d456426","msRemaining":579872,"requestsServed":2,"startTimestamp":1667973146358420072,"deadlineTimestamp":1667973808425000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.445] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.478] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.502] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.504] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.504] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2016-10-15.json:268435456-536870912\n[2022-11-09 05:53:01.505] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2016-10-15.json:268435456-536870912\n[2022-11-09 05:53:01.506] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.576] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.581] [global] [info] retrieving pythonic sample took: 0.003562s\n[2022-11-09 05:53:01.648] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.720] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.720] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:01.720] [fileinputoperator] [info] Filling sample cache for json operator took 0.071378s (1 entries, 0 rows)\n[2022-11-09 05:53:01.750] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:01.924] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.105] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.105] [fileinputoperator] [info] Extracting row sample took 0.384511s\n[2022-11-09 05:53:02.155] [global] [info] retrieving pythonic sample took: 0.505794s\n[2022-11-09 05:53:02.166] [hyper specializer] [info] Deserialization of Code context took 0.659804s\n[2022-11-09 05:53:02.166] [hyper specializer] [info] Total Stage Decode took 0.660840s\n[2022-11-09 05:53:02.228] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:02.228] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.228] [fileinputoperator] [info] Filling sample cache for json operator took 0.030629s (1 entries, 0 rows)\n[2022-11-09 05:53:02.255] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:02.360] [global] [info] sampled s3://tuplex-public/data/github_daily/2016-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:02.509] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.509] [fileinputoperator] [info] Extracting row sample took 0.280839s\n[2022-11-09 05:53:02.691] [hyper specializer] [info] sampling (setInputFiles) took 0.525368s\n[2022-11-09 05:53:02.692] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.692] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.692] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.692] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.692] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.692] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.692] [global] [warning] requested 2000 rows for sampling, but only 244 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.701] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.701] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.752] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.911] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.911] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.911] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.911] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.914] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.917] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.919] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.922] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.924] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.925] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.932] [hyper specializer] [info] generated code in 0.020953s\n[2022-11-09 05:53:02.980] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.980] [Lambda worker] [info] -- hyperspecialization took 1.476518s\n[2022-11-09 05:53:03.017] [global] [info] TransformStage - Optimization via LLVM passes took 0.036923 ms\n[2022-11-09 05:53:03.017] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.030] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.030] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.030] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.556] [Lambda worker] [info] fast path took: 5.525872s\n[2022-11-09 05:53:08.556] [Lambda worker] [info] Input rows processed: normal: 15463 unresolved: 105351\n[2022-11-09 05:53:08.556] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 105351\n[2022-11-09 05:53:08.556] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:08.556] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:08.556] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:09.775] [Lambda worker] [info] Compilation of slow path took 1.219111s\n[2022-11-09 05:53:15.547] [Lambda worker] [info] Resolved buffer, compiled: 5183 interpreted: 48164 unresolved: 0\n[2022-11-09 05:53:21.484] [Lambda worker] [info] Resolved buffer, compiled: 4254 interpreted: 47750 unresolved: 0\n[2022-11-09 05:53:21.490] [Lambda worker] [info] Exception resolution/slow path done. Took 12.933977s\n[2022-11-09 05:53:21.490] [Lambda worker] [info] Data processed in 18.46s 93.35 KB (4019 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:21.490] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:21.490] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:21.490] [Lambda worker] [info] Writing output from 2 parts (93.35 KB, 4019 rows)\n[2022-11-09 05:53:21.490] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:21.490] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:21.490] [s3fs] [info] Writing buffer of size 49838\n[2022-11-09 05:53:21.490] [s3fs] [info] Writing buffer of size 45750\n[2022-11-09 05:53:21.490] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part5.csv.csv\n[2022-11-09 05:53:21.490] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:21.552] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:21.552] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:21.552] [Lambda worker] [info] Took 18.521480s in total\n[2022-11-09 05:53:21.552] [Lambda worker] [info] Paths rows took: normal: 15463 general: 9437 interpreter: 95914 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2016-10-15.json:268435456-536870912"]},{"container":{"reused":true,"requestId":"5c0fe4cf-8a6c-4680-a86c-cd69d4dbac67","uuid":"98d0bfc8-2c7a-48d5-b461-c54b5fbb40eb","msRemaining":580230,"requestsServed":2,"startTimestamp":1667973146463224072,"deadlineTimestamp":1667973808806000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.828] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.862] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.885] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.885] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.885] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:01.886] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:1073741824-1342177280\n[2022-11-09 05:53:01.887] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.959] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.963] [global] [info] retrieving pythonic sample took: 0.003592s\n[2022-11-09 05:53:02.030] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.114] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.114] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.114] [fileinputoperator] [info] Filling sample cache for json operator took 0.082983s (1 entries, 0 rows)\n[2022-11-09 05:53:02.151] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.305] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.482] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.482] [fileinputoperator] [info] Extracting row sample took 0.368150s\n[2022-11-09 05:53:02.530] [global] [info] retrieving pythonic sample took: 0.498765s\n[2022-11-09 05:53:02.540] [hyper specializer] [info] Deserialization of Code context took 0.652714s\n[2022-11-09 05:53:02.540] [hyper specializer] [info] Total Stage Decode took 0.653765s\n[2022-11-09 05:53:02.645] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.645] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.645] [fileinputoperator] [info] Filling sample cache for json operator took 0.076259s (1 entries, 0 rows)\n[2022-11-09 05:53:02.681] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.770] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:1073741824-1342177280 on 256.00 KB\n[2022-11-09 05:53:02.905] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.905] [fileinputoperator] [info] Extracting row sample took 0.259320s\n[2022-11-09 05:53:03.053] [hyper specializer] [info] sampling (setInputFiles) took 0.512680s\n[2022-11-09 05:53:03.053] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.053] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.053] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.053] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.053] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.053] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.053] [global] [warning] requested 2000 rows for sampling, but only 143 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.059] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.059] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.102] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.279] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.279] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.279] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.279] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.282] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.285] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.287] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.289] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.290] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.291] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.299] [hyper specializer] [info] generated code in 0.019894s\n[2022-11-09 05:53:03.338] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.338] [Lambda worker] [info] -- hyperspecialization took 1.452860s\n[2022-11-09 05:53:03.377] [global] [info] TransformStage - Optimization via LLVM passes took 0.038883 ms\n[2022-11-09 05:53:03.377] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.389] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.389] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.390] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.618] [Lambda worker] [info] Spilling 131060299/131072000 to s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam8/4/spill_except_0_0.tmp\n[2022-11-09 05:53:08.618] [s3fs] [info] Writing buffer of size 8\n[2022-11-09 05:53:08.618] [s3fs] [info] Writing buffer of size 8\n[2022-11-09 05:53:08.618] [s3fs] [info] Writing buffer of size 131060299\n[2022-11-09 05:53:08.618] [s3fs] [info] Writing buffer of size 67108848\n[2022-11-09 05:53:09.237] [s3fs] [info] initiated multiupload, first part with size=67108864 uploaded.\n[2022-11-09 05:53:09.237] [s3fs] [info] Writing buffer of size 63951451\n[2022-11-09 05:53:09.751] [s3fs] [info] uploaded another part with size=63951451.\n[2022-11-09 05:53:09.751] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam8/4/spill_except_0_0.tmp\n[2022-11-09 05:53:09.751] [s3fs] [info] Completing multipart upload, uploading last part.\n[2022-11-09 05:53:09.751] [s3fs] [info] Skipping empty buffer (partno = 3)\n[2022-11-09 05:53:09.751] [s3fs] [info] Completing multipart upload, completion request.\n[2022-11-09 05:53:09.751] [s3fs] [info] Completing multi-part upload for 3 parts\n[2022-11-09 05:53:09.836] [s3fs] [info] Multipart done.\n[2022-11-09 05:53:09.836] [Lambda worker] [info] Spilled 124.99 MB to s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam8/4/spill_except_0_0.tmp\n[2022-11-09 05:53:09.848] [Lambda worker] [info] fast path took: 6.458914s\n[2022-11-09 05:53:09.848] [Lambda worker] [info] Input rows processed: normal: 6730 unresolved: 65525\n[2022-11-09 05:53:09.848] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 65525\n[2022-11-09 05:53:09.849] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.849] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.849] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:11.088] [Lambda worker] [info] Compilation of slow path took 1.239491s\n[2022-11-09 05:53:11.103] [Lambda worker] [info] Resolved buffer, compiled: 6 interpreted: 100 unresolved: 0\n[2022-11-09 05:53:11.103] [Lambda worker] [info] Processing 1 spilled except file\n[2022-11-09 05:53:17.292] [Lambda worker] [info] Resolved buffer, compiled: 2624 interpreted: 28799 unresolved: 0\n[2022-11-09 05:53:17.300] [Lambda worker] [info] except spill files done.\n[2022-11-09 05:53:21.518] [Lambda worker] [info] Resolved buffer, compiled: 3106 interpreted: 30890 unresolved: 0\n[2022-11-09 05:53:21.524] [Lambda worker] [info] Exception resolution/slow path done. Took 11.675311s\n[2022-11-09 05:53:21.524] [Lambda worker] [info] Data processed in 18.1344s 50.07 KB (2092 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:21.524] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:21.524] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:21.524] [Lambda worker] [info] Writing output from 2 parts (50.07 KB, 2092 rows)\n[2022-11-09 05:53:21.524] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:21.524] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:21.524] [s3fs] [info] Writing buffer of size 23093\n[2022-11-09 05:53:21.524] [s3fs] [info] Writing buffer of size 28176\n[2022-11-09 05:53:21.524] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:21.524] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:21.575] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:21.575] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:21.575] [Lambda worker] [info] Took 18.185104s in total\n[2022-11-09 05:53:21.575] [Lambda worker] [info] Paths rows took: normal: 6730 general: 5736 interpreter: 59789 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:1073741824-1342177280"]},{"container":{"reused":true,"requestId":"1a4e2a26-eb8e-4440-a9e4-2d8a70cf0038","uuid":"14ebd118-b95b-418b-a933-8903d9e84398","msRemaining":579412,"requestsServed":2,"startTimestamp":1667973146425377716,"deadlineTimestamp":1667973808781000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.803] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.836] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.859] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.859] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.859] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:268435456-536870912\n[2022-11-09 05:53:01.860] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:268435456-536870912\n[2022-11-09 05:53:01.861] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.931] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.936] [global] [info] retrieving pythonic sample took: 0.003550s\n[2022-11-09 05:53:02.003] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.004] [global] [info] retrieving pythonic sample took: 0.000262s\n[2022-11-09 05:53:02.014] [hyper specializer] [info] Deserialization of Code context took 0.152442s\n[2022-11-09 05:53:02.014] [hyper specializer] [info] Total Stage Decode took 0.153481s\n[2022-11-09 05:53:02.119] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:02.119] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.119] [fileinputoperator] [info] Filling sample cache for json operator took 0.105012s (1 entries, 0 rows)\n[2022-11-09 05:53:02.146] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:02.235] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:268435456-536870912 on 256.00 KB\n[2022-11-09 05:53:02.370] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.370] [fileinputoperator] [info] Extracting row sample took 0.251410s\n[2022-11-09 05:53:02.514] [hyper specializer] [info] sampling (setInputFiles) took 0.499734s\n[2022-11-09 05:53:02.514] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.514] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.514] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.514] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.514] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.514] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:02.514] [global] [warning] requested 2000 rows for sampling, but only 141 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:02.519] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.519] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.560] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.716] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:02.716] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:02.716] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:02.716] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:02.719] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:02.722] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:02.724] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:02.726] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:02.727] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:02.728] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:02.737] [hyper specializer] [info] generated code in 0.020613s\n[2022-11-09 05:53:02.774] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:02.774] [Lambda worker] [info] -- hyperspecialization took 0.915072s\n[2022-11-09 05:53:02.811] [global] [info] TransformStage - Optimization via LLVM passes took 0.037119 ms\n[2022-11-09 05:53:02.811] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:02.824] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:02.824] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:02.824] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:07.928] [Lambda worker] [info] Spilling 131061636/131072000 to s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam8/1/spill_except_0_0.tmp\n[2022-11-09 05:53:07.928] [s3fs] [info] Writing buffer of size 8\n[2022-11-09 05:53:07.928] [s3fs] [info] Writing buffer of size 8\n[2022-11-09 05:53:07.928] [s3fs] [info] Writing buffer of size 131061636\n[2022-11-09 05:53:07.928] [s3fs] [info] Writing buffer of size 67108848\n[2022-11-09 05:53:08.828] [s3fs] [info] initiated multiupload, first part with size=67108864 uploaded.\n[2022-11-09 05:53:08.828] [s3fs] [info] Writing buffer of size 63952788\n[2022-11-09 05:53:09.537] [s3fs] [info] uploaded another part with size=63952788.\n[2022-11-09 05:53:09.537] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam8/1/spill_except_0_0.tmp\n[2022-11-09 05:53:09.537] [s3fs] [info] Completing multipart upload, uploading last part.\n[2022-11-09 05:53:09.537] [s3fs] [info] Skipping empty buffer (partno = 3)\n[2022-11-09 05:53:09.537] [s3fs] [info] Completing multipart upload, completion request.\n[2022-11-09 05:53:09.537] [s3fs] [info] Completing multi-part upload for 3 parts\n[2022-11-09 05:53:09.671] [s3fs] [info] Multipart done.\n[2022-11-09 05:53:09.671] [Lambda worker] [info] Spilled 124.99 MB to s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam8/1/spill_except_0_0.tmp\n[2022-11-09 05:53:09.683] [Lambda worker] [info] fast path took: 6.858599s\n[2022-11-09 05:53:09.683] [Lambda worker] [info] Input rows processed: normal: 7024 unresolved: 75386\n[2022-11-09 05:53:09.683] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 75386\n[2022-11-09 05:53:09.683] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:09.683] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:09.683] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:10.924] [Lambda worker] [info] Compilation of slow path took 1.240937s\n[2022-11-09 05:53:10.933] [Lambda worker] [info] Resolved buffer, compiled: 6 interpreted: 49 unresolved: 0\n[2022-11-09 05:53:10.933] [Lambda worker] [info] Processing 1 spilled except file\n[2022-11-09 05:53:17.492] [Lambda worker] [info] Resolved buffer, compiled: 3251 interpreted: 32571 unresolved: 0\n[2022-11-09 05:53:17.501] [Lambda worker] [info] except spill files done.\n[2022-11-09 05:53:22.298] [Lambda worker] [info] Resolved buffer, compiled: 3743 interpreted: 35766 unresolved: 0\n[2022-11-09 05:53:22.304] [Lambda worker] [info] Exception resolution/slow path done. Took 12.621249s\n[2022-11-09 05:53:22.304] [Lambda worker] [info] Data processed in 19.48s 67.77 KB (2832 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:22.304] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:22.304] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:22.304] [Lambda worker] [info] Writing output from 2 parts (67.77 KB, 2832 rows)\n[2022-11-09 05:53:22.304] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:22.304] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:22.304] [s3fs] [info] Writing buffer of size 30706\n[2022-11-09 05:53:22.304] [s3fs] [info] Writing buffer of size 38693\n[2022-11-09 05:53:22.304] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:22.304] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:22.367] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:22.367] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:22.367] [Lambda worker] [info] Took 19.543091s in total\n[2022-11-09 05:53:22.367] [Lambda worker] [info] Paths rows took: normal: 7024 general: 7000 interpreter: 68386 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:268435456-536870912"]},{"container":{"reused":true,"requestId":"95bc6030-d910-420e-b89f-f59e60effaab","uuid":"0133adfd-19a0-40bd-ba5f-c40878c32174","msRemaining":578632,"requestsServed":2,"startTimestamp":1667973146600298922,"deadlineTimestamp":1667973808777000000},"invoked_containers":[],"log":"[2022-11-09 05:53:01.796] [Lambda worker] [info] performing global initialization (Worker App)\n[2022-11-09 05:53:01.829] [Lambda worker] [info] Invoking WorkerApp fallback\n[2022-11-09 05:53:01.851] [Lambda worker] [info] Found 1 input URIs to process\n[2022-11-09 05:53:01.851] [Lambda worker] [info] *** hyperspecialization active ***\n[2022-11-09 05:53:01.851] [Lambda worker] [info] -- specializing to s3://tuplex-public/data/github_daily/2019-10-15.json:536870912-805306368\n[2022-11-09 05:53:01.853] [hyper specializer] [info] specializing code to file s3://tuplex-public/data/github_daily/2019-10-15.json:536870912-805306368\n[2022-11-09 05:53:01.854] [hyper specializer] [info] Decompressed Code context from 4.79 KB to 159.07 KB\n[2022-11-09 05:53:01.923] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:01.928] [global] [info] retrieving pythonic sample took: 0.003554s\n[2022-11-09 05:53:01.994] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:02.069] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.069] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.069] [fileinputoperator] [info] Filling sample cache for json operator took 0.073409s (1 entries, 0 rows)\n[2022-11-09 05:53:02.094] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.244] [global] [info] sampled s3://tuplex-public/data/github_daily/2021-10-15.json on 256.00 KB\n[2022-11-09 05:53:02.419] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.419] [fileinputoperator] [info] Extracting row sample took 0.350127s\n[2022-11-09 05:53:02.466] [global] [info] retrieving pythonic sample took: 0.471124s\n[2022-11-09 05:53:02.476] [hyper specializer] [info] Deserialization of Code context took 0.622661s\n[2022-11-09 05:53:02.476] [hyper specializer] [info] Total Stage Decode took 0.623697s\n[2022-11-09 05:53:02.579] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.580] [fileinputoperator] [info] Parallel sample fetch done.\n[2022-11-09 05:53:02.580] [fileinputoperator] [info] Filling sample cache for json operator took 0.074357s (1 entries, 0 rows)\n[2022-11-09 05:53:02.610] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.718] [global] [info] sampled s3://tuplex-public/data/github_daily/2019-10-15.json:536870912-805306368 on 256.00 KB\n[2022-11-09 05:53:02.836] [fileinputoperator] [info] Parallel sample parse done.\n[2022-11-09 05:53:02.836] [fileinputoperator] [info] Extracting row sample took 0.256538s\n[2022-11-09 05:53:03.010] [hyper specializer] [info] sampling (setInputFiles) took 0.533999s\n[2022-11-09 05:53:03.011] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.011] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.011] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.011] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.011] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.011] [global] [error] fatal error: TupleTree can be only constructed using nested tuples so far! Given type is Exception\n[2022-11-09 05:53:03.011] [global] [warning] requested 2000 rows for sampling, but only 177 stored. Consider decreasing sample size. Returning all available rows.\n[2022-11-09 05:53:03.018] [specializing stage optimizer] [info] Row type before retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.018] [specializing stage optimizer] [info] Row type after retype: (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'push_id'->i64),(str,'size'->i64),(str,'distinct_size'->i64),(str,'ref'->str),(str,'head'->str),(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]])],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.067] [codegen] [warning] could not find column 'repository' in dataset. Emitting deoptimization trigger.\n[2022-11-09 05:53:03.223] [hyper specializer] [info] specialized to input:  (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])\n[2022-11-09 05:53:03.223] [hyper specializer] [info] specialized to output: (str)\n[2022-11-09 05:53:03.223] [hyper specializer] [info] specialized code reads: 8 columns\n[2022-11-09 05:53:03.223] [codegen] [info] module's data layout is:\n[2022-11-09 05:53:03.226] [codegen] [info] generating pipeline for (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) -> (str) (5 operators pipelined)\n[2022-11-09 05:53:03.229] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]])) -> i64\n[2022-11-09 05:53:03.231] [codegen] [info] generating function extract_repo_id_code for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64)) -> i64\n[2022-11-09 05:53:03.233] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> boolean\n[2022-11-09 05:53:03.234] [codegen] [info] generating lambda function for ((str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]],i64,i64)) -> (str,i64,i64)\n[2022-11-09 05:53:03.236] [codegen] [warning] hack, need to fix stuff here...\n[2022-11-09 05:53:03.243] [hyper specializer] [info] generated code in 0.019718s\n[2022-11-09 05:53:03.288] [Lambda worker] [info] specialized normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'before'->str),(str,'commits'->List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'distinct_size'->i64),(str,'head'->str),(str,'push_id'->i64),(str,'ref'->str),(str,'size'->i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]) is different than given normal-case type (str,str,Struct[(str,'id'->i64),(str,'login'->str),(str,'display_login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)],Struct[(str,'id'->i64),(str,'name'->str),(str,'url'->str)],Struct[(str,'action'=>str),(str,'before'=>str),(str,'comment'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'issue_url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'created_at'->str),(str,'updated_at'->str),(str,'author_association'->str),(str,'body'->str),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'performed_via_github_app'->null)]),(str,'commits'=>List[Struct[(str,'sha'->str),(str,'author'->Struct[(str,'name'->str),(str,'email'->str)]),(str,'message'->str),(str,'distinct'->boolean),(str,'url'->str)]]),(str,'description'=>Option[str]),(str,'distinct_size'=>i64),(str,'head'=>str),(str,'issue'=>Struct[(str,'active_lock_reason'->null),(str,'assignee'->Option[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'assignees'->List[Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]]),(str,'author_association'->str),(str,'body'->Option[str]),(str,'closed_at'->Option[str]),(str,'comments'->i64),(str,'comments_url'->str),(str,'created_at'->str),(str,'events_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'labels'->List[Struct[(str,'id'->i64),(str,'node_id'->str),(str,'url'->str),(str,'name'->str),(str,'color'->str),(str,'default'->boolean),(str,'description'->str)]]),(str,'labels_url'->str),(str,'locked'->boolean),(str,'milestone'->null),(str,'node_id'->str),(str,'number'->i64),(str,'performed_via_github_app'->null),(str,'pull_request'=>Struct[(str,'url'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str)]),(str,'reactions'->Struct[(str,'url'->str),(str,'total_count'->i64),(str,'+1'->i64),(str,'-1'->i64),(str,'laugh'->i64),(str,'hooray'->i64),(str,'confused'->i64),(str,'heart'->i64),(str,'rocket'->i64),(str,'eyes'->i64)]),(str,'repository_url'->str),(str,'state'->str),(str,'timeline_url'->str),(str,'title'->str),(str,'updated_at'->str),(str,'url'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)])]),(str,'master_branch'=>str),(str,'number'=>i64),(str,'pull_request'=>Struct[(str,'url'->str),(str,'id'->i64),(str,'node_id'->str),(str,'html_url'->str),(str,'diff_url'->str),(str,'patch_url'->str),(str,'issue_url'->str),(str,'number'->i64),(str,'state'->str),(str,'locked'->boolean),(str,'title'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'body'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'closed_at'->null),(str,'merged_at'->null),(str,'merge_commit_sha'->null),(str,'assignee'->null),(str,'assignees'->[]),(str,'requested_reviewers'->[]),(str,'requested_teams'->[]),(str,'labels'->[]),(str,'milestone'->null),(str,'draft'->boolean),(str,'commits_url'->str),(str,'review_comments_url'->str),(str,'review_comment_url'->str),(str,'comments_url'->str),(str,'statuses_url'->str),(str,'head'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'base'->Struct[(str,'label'->str),(str,'ref'->str),(str,'sha'->str),(str,'user'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'repo'->Struct[(str,'id'->i64),(str,'node_id'->str),(str,'name'->str),(str,'full_name'->str),(str,'private'->boolean),(str,'owner'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'html_url'->str),(str,'description'->null),(str,'fork'->boolean),(str,'url'->str),(str,'forks_url'->str),(str,'keys_url'->str),(str,'collaborators_url'->str),(str,'teams_url'->str),(str,'hooks_url'->str),(str,'issue_events_url'->str),(str,'events_url'->str),(str,'assignees_url'->str),(str,'branches_url'->str),(str,'tags_url'->str),(str,'blobs_url'->str),(str,'git_tags_url'->str),(str,'git_refs_url'->str),(str,'trees_url'->str),(str,'statuses_url'->str),(str,'languages_url'->str),(str,'stargazers_url'->str),(str,'contributors_url'->str),(str,'subscribers_url'->str),(str,'subscription_url'->str),(str,'commits_url'->str),(str,'git_commits_url'->str),(str,'comments_url'->str),(str,'issue_comment_url'->str),(str,'contents_url'->str),(str,'compare_url'->str),(str,'merges_url'->str),(str,'archive_url'->str),(str,'downloads_url'->str),(str,'issues_url'->str),(str,'pulls_url'->str),(str,'milestones_url'->str),(str,'notifications_url'->str),(str,'labels_url'->str),(str,'releases_url'->str),(str,'deployments_url'->str),(str,'created_at'->str),(str,'updated_at'->str),(str,'pushed_at'->str),(str,'git_url'->str),(str,'ssh_url'->str),(str,'clone_url'->str),(str,'svn_url'->str),(str,'homepage'->null),(str,'size'->i64),(str,'stargazers_count'->i64),(str,'watchers_count'->i64),(str,'language'->null),(str,'has_issues'->boolean),(str,'has_projects'->boolean),(str,'has_downloads'->boolean),(str,'has_wiki'->boolean),(str,'has_pages'->boolean),(str,'forks_count'->i64),(str,'mirror_url'->null),(str,'archived'->boolean),(str,'disabled'->boolean),(str,'open_issues_count'->i64),(str,'license'->null),(str,'allow_forking'->boolean),(str,'is_template'->boolean),(str,'topics'->[]),(str,'visibility'->str),(str,'forks'->i64),(str,'open_issues'->i64),(str,'watchers'->i64),(str,'default_branch'->str)])]),(str,'_links'->Struct[(str,'self'->Struct[(str,'href'->str)]),(str,'html'->Struct[(str,'href'->str)]),(str,'issue'->Struct[(str,'href'->str)]),(str,'comments'->Struct[(str,'href'->str)]),(str,'review_comments'->Struct[(str,'href'->str)]),(str,'review_comment'->Struct[(str,'href'->str)]),(str,'commits'->Struct[(str,'href'->str)]),(str,'statuses'->Struct[(str,'href'->str)])]),(str,'author_association'->str),(str,'auto_merge'->null),(str,'active_lock_reason'->null),(str,'merged'->boolean),(str,'mergeable'->null),(str,'rebaseable'->null),(str,'mergeable_state'->str),(str,'merged_by'->null),(str,'comments'->i64),(str,'review_comments'->i64),(str,'maintainer_can_modify'->boolean),(str,'commits'->i64),(str,'additions'->i64),(str,'deletions'->i64),(str,'changed_files'->i64)]),(str,'push_id'=>i64),(str,'pusher_type'=>str),(str,'ref'=>Option[str]),(str,'ref_type'=>str),(str,'release'=>Struct[(str,'url'->str),(str,'assets_url'->str),(str,'upload_url'->str),(str,'html_url'->str),(str,'id'->i64),(str,'author'->Struct[(str,'login'->str),(str,'id'->i64),(str,'node_id'->str),(str,'avatar_url'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'html_url'->str),(str,'followers_url'->str),(str,'following_url'->str),(str,'gists_url'->str),(str,'starred_url'->str),(str,'subscriptions_url'->str),(str,'organizations_url'->str),(str,'repos_url'->str),(str,'events_url'->str),(str,'received_events_url'->str),(str,'type'->str),(str,'site_admin'->boolean)]),(str,'node_id'->str),(str,'tag_name'->str),(str,'target_commitish'->str),(str,'name'->str),(str,'draft'->boolean),(str,'prerelease'->boolean),(str,'created_at'->str),(str,'published_at'->str),(str,'assets'->[]),(str,'tarball_url'->str),(str,'zipball_url'->str),(str,'body'->str),(str,'short_description_html'->str),(str,'is_short_description_html_truncated'->boolean)]),(str,'size'=>i64)],boolean,str,Option[Struct[(str,'id'->i64),(str,'login'->str),(str,'gravatar_id'->str),(str,'url'->str),(str,'avatar_url'->str)]]).\n[2022-11-09 05:53:03.288] [Lambda worker] [info] -- hyperspecialization took 1.436587s\n[2022-11-09 05:53:03.324] [global] [info] TransformStage - Optimization via LLVM passes took 0.036321 ms\n[2022-11-09 05:53:03.324] [global] [info] syms registered (or skipped), compile now\n[2022-11-09 05:53:03.337] [global] [info] functor fast_Stage_0 retrieved from llvm\n[2022-11-09 05:53:03.337] [global] [info] Compiled code paths for stage 0 in 0.05 ms\n[2022-11-09 05:53:03.337] [Lambda worker] [info] calling initStageFunctor with 0 args\n[2022-11-09 05:53:08.904] [Lambda worker] [info] Spilling 131071608/131072000 to s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam8/2/spill_except_0_0.tmp\n[2022-11-09 05:53:08.904] [s3fs] [info] Writing buffer of size 8\n[2022-11-09 05:53:08.904] [s3fs] [info] Writing buffer of size 8\n[2022-11-09 05:53:08.904] [s3fs] [info] Writing buffer of size 131071608\n[2022-11-09 05:53:08.904] [s3fs] [info] Writing buffer of size 67108848\n[2022-11-09 05:53:09.523] [s3fs] [info] initiated multiupload, first part with size=67108864 uploaded.\n[2022-11-09 05:53:09.523] [s3fs] [info] Writing buffer of size 63962760\n[2022-11-09 05:53:10.044] [s3fs] [info] uploaded another part with size=63962760.\n[2022-11-09 05:53:10.044] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam8/2/spill_except_0_0.tmp\n[2022-11-09 05:53:10.044] [s3fs] [info] Completing multipart upload, uploading last part.\n[2022-11-09 05:53:10.044] [s3fs] [info] Skipping empty buffer (partno = 3)\n[2022-11-09 05:53:10.044] [s3fs] [info] Completing multipart upload, completion request.\n[2022-11-09 05:53:10.044] [s3fs] [info] Completing multi-part upload for 3 parts\n[2022-11-09 05:53:10.115] [s3fs] [info] Multipart done.\n[2022-11-09 05:53:10.115] [Lambda worker] [info] Spilled 125.00 MB to s3://tuplex-leonhard/scratch/github-exp/spill_folder/lam8/2/spill_except_0_0.tmp\n[2022-11-09 05:53:10.127] [Lambda worker] [info] fast path took: 6.790164s\n[2022-11-09 05:53:10.127] [Lambda worker] [info] Input rows processed: normal: 7432 unresolved: 81336\n[2022-11-09 05:53:10.127] [Lambda worker] [info] Normal rows before resolve: 0, except rows before resolve: 81336\n[2022-11-09 05:53:10.127] [Lambda worker] [info] Starting exception resolution/slow path execution\n[2022-11-09 05:53:10.127] [Lambda worker] [info] has interpreter path: yes has compiled fallback path: yes\n[2022-11-09 05:53:10.127] [Lambda worker] [info] compiling slow code path b.c. exceptions occurred.\n[2022-11-09 05:53:11.332] [Lambda worker] [info] Compilation of slow path took 1.204335s\n[2022-11-09 05:53:11.344] [Lambda worker] [info] Resolved buffer, compiled: 5 interpreted: 80 unresolved: 0\n[2022-11-09 05:53:11.344] [Lambda worker] [info] Processing 1 spilled except file\n[2022-11-09 05:53:18.127] [Lambda worker] [info] Resolved buffer, compiled: 3620 interpreted: 35647 unresolved: 0\n[2022-11-09 05:53:18.135] [Lambda worker] [info] except spill files done.\n[2022-11-09 05:53:23.020] [Lambda worker] [info] Resolved buffer, compiled: 4012 interpreted: 37972 unresolved: 0\n[2022-11-09 05:53:23.026] [Lambda worker] [info] Exception resolution/slow path done. Took 12.898673s\n[2022-11-09 05:53:23.026] [Lambda worker] [info] Data processed in 19.689s 78.20 KB (3266 normal rows) 0.00 B (0 exception rows)  128.03 KB (0 hash rows)\n[2022-11-09 05:53:23.026] [Lambda worker] [info] Writing data to s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:23.026] [Lambda worker] [info] file output initiated...\n[2022-11-09 05:53:23.026] [Lambda worker] [info] Writing output from 2 parts (78.20 KB, 3266 rows)\n[2022-11-09 05:53:23.026] [Lambda worker] [info] Merging output parts together into s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:23.026] [s3fs] [info] Writing buffer of size 18\n[2022-11-09 05:53:23.026] [s3fs] [info] Writing buffer of size 39013\n[2022-11-09 05:53:23.026] [s3fs] [info] Writing buffer of size 41061\n[2022-11-09 05:53:23.026] [s3fs] [info] Invoking lazyUpload to uri s3://tuplex-leonhard/experiments/flights_github/hyper/part8.csv.csv\n[2022-11-09 05:53:23.026] [s3fs] [info] Issuing simple write request\n[2022-11-09 05:53:23.144] [Lambda worker] [info] file output done.\n[2022-11-09 05:53:23.144] [Lambda worker] [info] Data fully materialized\n[2022-11-09 05:53:23.144] [Lambda worker] [info] Took 19.807243s in total\n[2022-11-09 05:53:23.144] [Lambda worker] [info] Paths rows took: normal: 7432 general: 7637 interpreter: 73699 unresolved: 0\n","invoked_requests":[],"input_uris":["s3://tuplex-public/data/github_daily/2019-10-15.json:536870912-805306368"]}],"requests":[{"requestId":"07425840-cda7-4a88-bbcc-25ab414af546","containerId":"fb20d5f2-8fc7-4a94-9a12-e6b014fd2a71","durationInMs":2484.02,"billedDurationInMs":2485,"memorySizeInMb":10000,"maxMemoryUsedInMb":1084,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":31,"general":17,"fallback":200,"unresolved":0},"output_paths_taken":{"normal":7,"unresolved":0},"t_hyper":0.917147,"t_compile":0.0490397,"t_fast":0.109748,"t_slow":1.26458,"tsRequestStart":1667973208302358503,"tsRequestEnd":1667973210966824284},{"requestId":"090d43ac-46ef-4740-a97b-42e179567b5b","containerId":"6e88582b-9217-4d4e-af4a-78a26be5d5b1","durationInMs":3526.48,"billedDurationInMs":3527,"memorySizeInMb":10000,"maxMemoryUsedInMb":999,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":1085,"general":528,"fallback":5989,"unresolved":0},"output_paths_taken":{"normal":140,"unresolved":0},"t_hyper":0.86913,"t_compile":0.0483341,"t_fast":0.451585,"t_slow":2.02531,"tsRequestStart":1667973208591704816,"tsRequestEnd":1667973212295219033},{"requestId":"1b9d01bd-2511-4458-8f30-5e9b5fb00f5c","containerId":"59883bbd-c97e-4955-ab37-a947bb12e9e1","durationInMs":3626.64,"billedDurationInMs":3627,"memorySizeInMb":10000,"maxMemoryUsedInMb":1076,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":516,"general":304,"fallback":3110,"unresolved":0},"output_paths_taken":{"normal":74,"unresolved":0},"t_hyper":1.45939,"t_compile":0.0499686,"t_fast":0.294978,"t_slow":1.65531,"tsRequestStart":1667973208897945446,"tsRequestEnd":1667973212704221394},{"requestId":"bd40144a-1d3f-4a8d-a67e-90168b9d8cb0","containerId":"0bb08b95-1afc-4ae9-be3f-8b670532fa07","durationInMs":5558.26,"billedDurationInMs":5559,"memorySizeInMb":10000,"maxMemoryUsedInMb":940,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":2716,"general":1548,"fallback":18083,"unresolved":0},"output_paths_taken":{"normal":535,"unresolved":0},"t_hyper":0.908694,"t_compile":0.0486774,"t_fast":1.01903,"t_slow":3.44489,"tsRequestStart":1667973208393528817,"tsRequestEnd":1667973214129815859},{"requestId":"160acb89-f7c2-404d-b67a-e78192ebe0ac","containerId":"b242c615-94ae-492e-90df-33773b223c81","durationInMs":6565.74,"billedDurationInMs":6566,"memorySizeInMb":10000,"maxMemoryUsedInMb":1016,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":3252,"general":1551,"fallback":18930,"unresolved":0},"output_paths_taken":{"normal":429,"unresolved":0},"t_hyper":0.875954,"t_compile":0.0487813,"t_fast":1.50054,"t_slow":3.96625,"tsRequestStart":1667973209384498731,"tsRequestEnd":1667973216126136748},{"requestId":"d522a592-a958-4ed9-9558-4745d5ca43cb","containerId":"42dc74b6-b64b-4f30-8635-bd67b6e88fec","durationInMs":6961.91,"billedDurationInMs":6962,"memorySizeInMb":10000,"maxMemoryUsedInMb":594,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":4048,"general":2531,"fallback":22040,"unresolved":0},"output_paths_taken":{"normal":485,"unresolved":0},"t_hyper":1.01491,"t_compile":0.0515281,"t_fast":1.52104,"t_slow":4.21981,"tsRequestStart":1667973209543614972,"tsRequestEnd":1667973216666049232},{"requestId":"34f5698d-7de9-4d37-8ae4-616d02d2f7ca","containerId":"91f6c0f9-add5-47c5-8860-5734bf2e30c9","durationInMs":9198.28,"billedDurationInMs":9199,"memorySizeInMb":10000,"maxMemoryUsedInMb":1111,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":3526,"general":0,"fallback":44088,"unresolved":1284},"output_paths_taken":{"normal":1418,"unresolved":1284},"t_hyper":1.23673,"t_compile":0.059121,"t_fast":1.68869,"t_slow":6.07597,"tsRequestStart":1667973208019789282,"tsRequestEnd":1667973217336829571},{"requestId":"ef26e3ce-19fc-4eeb-9c56-39a40f2ce9e1","containerId":"21767532-8e9b-4d7f-8b8c-7aeb7b5a01e2","durationInMs":11019.8,"billedDurationInMs":11020,"memorySizeInMb":10000,"maxMemoryUsedInMb":1327,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":20788,"general":0,"fallback":27657,"unresolved":31},"output_paths_taken":{"normal":1719,"unresolved":31},"t_hyper":0.822338,"t_compile":0.0842939,"t_fast":4.57017,"t_slow":5.32177,"tsRequestStart":1667973208069060839,"tsRequestEnd":1667973219264962202},{"requestId":"c61179fa-3ee8-4db0-a085-8e59118794ae","containerId":"50200b11-c32c-4cb5-a01b-4f7331d8b500","durationInMs":11090.2,"billedDurationInMs":11091,"memorySizeInMb":10000,"maxMemoryUsedInMb":1107,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":10897,"general":0,"fallback":33682,"unresolved":20},"output_paths_taken":{"normal":1884,"unresolved":20},"t_hyper":1.37585,"t_compile":0.0927706,"t_fast":3.00613,"t_slow":6.33937,"tsRequestStart":1667973208148801746,"tsRequestEnd":1667973219414289707},{"requestId":"f96f6dd3-3e93-410e-83fb-7a4eb9842555","containerId":"39cd45b6-70a2-4a0c-89d4-0b737f88b40d","durationInMs":11216.4,"billedDurationInMs":11217,"memorySizeInMb":10000,"maxMemoryUsedInMb":1399,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":23160,"general":0,"fallback":24960,"unresolved":24},"output_paths_taken":{"normal":2036,"unresolved":24},"t_hyper":0.749071,"t_compile":0.0842399,"t_fast":5.01733,"t_slow":5.18108,"tsRequestStart":1667973208059057500,"tsRequestEnd":1667973219449947579},{"requestId":"2efc770a-5dba-4e46-846c-2ac1a447ae97","containerId":"dc3e8c4a-ac03-446d-af84-333c2a96826b","durationInMs":11527.4,"billedDurationInMs":11528,"memorySizeInMb":10000,"maxMemoryUsedInMb":1269,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":24365,"general":0,"fallback":22596,"unresolved":134},"output_paths_taken":{"normal":1320,"unresolved":134},"t_hyper":1.33537,"t_compile":0.0891886,"t_fast":5.26911,"t_slow":4.63043,"tsRequestStart":1667973208108788751,"tsRequestEnd":1667973219814199792},{"requestId":"bf3b6be6-5d1b-4a28-814b-6c41e69a2724","containerId":"12cd0ef5-8150-4642-b074-9c5bf9202a8e","durationInMs":13137.3,"billedDurationInMs":13138,"memorySizeInMb":10000,"maxMemoryUsedInMb":1430,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":11063,"general":0,"fallback":36636,"unresolved":91},"output_paths_taken":{"normal":1299,"unresolved":91},"t_hyper":0.870931,"t_compile":0.0880634,"t_fast":5.19889,"t_slow":6.69477,"tsRequestStart":1667973208098797192,"tsRequestEnd":1667973221406175403},{"requestId":"acc332de-21ff-47b6-a31d-29ce59e6c976","containerId":"168f14e3-63b4-474b-86ed-e283a53102dd","durationInMs":13153.3,"billedDurationInMs":13154,"memorySizeInMb":10000,"maxMemoryUsedInMb":1357,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":10760,"general":0,"fallback":37885,"unresolved":129},"output_paths_taken":{"normal":1392,"unresolved":129},"t_hyper":0.78426,"t_compile":0.0898211,"t_fast":5.13282,"t_slow":6.86794,"tsRequestStart":1667973208088938282,"tsRequestEnd":1667973221414848222},{"requestId":"9fe34ad9-b77c-45be-9870-ea54451769cd","containerId":"0a436303-e3c7-4f19-a64c-7e744b4537c4","durationInMs":13397.2,"billedDurationInMs":13398,"memorySizeInMb":10000,"maxMemoryUsedInMb":1342,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":11388,"general":0,"fallback":36497,"unresolved":56},"output_paths_taken":{"normal":1638,"unresolved":56},"t_hyper":0.901831,"t_compile":0.0928806,"t_fast":5.37407,"t_slow":6.81341,"tsRequestStart":1667973208078932120,"tsRequestEnd":1667973221649280420},{"requestId":"3218601a-9ca7-441a-a2ef-d4cde6ff781d","containerId":"0b9f8d76-f65f-4693-9812-387968f0e3cd","durationInMs":13455.1,"billedDurationInMs":13456,"memorySizeInMb":10000,"maxMemoryUsedInMb":1147,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9594,"general":0,"fallback":64511,"unresolved":0},"output_paths_taken":{"normal":1923,"unresolved":0},"t_hyper":1.57818,"t_compile":0.0491817,"t_fast":2.76314,"t_slow":8.91844,"tsRequestStart":1667973208229760697,"tsRequestEnd":1667973221864762257},{"requestId":"22334a04-6123-4e48-9bee-08247a52fdc9","containerId":"3e80fc7e-c6e8-42c7-bcc4-295c2358163e","durationInMs":13722.1,"billedDurationInMs":13723,"memorySizeInMb":10000,"maxMemoryUsedInMb":1347,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":12117,"general":0,"fallback":34831,"unresolved":94},"output_paths_taken":{"normal":1259,"unresolved":94},"t_hyper":1.43477,"t_compile":0.0907944,"t_fast":5.41109,"t_slow":6.51499,"tsRequestStart":1667973208118661233,"tsRequestEnd":1667973222009405885},{"requestId":"f5625daa-d20a-4a1b-8409-8f040e97e48e","containerId":"1e827b2a-3ac2-481b-8f0d-f8667e89bf84","durationInMs":13958.9,"billedDurationInMs":13959,"memorySizeInMb":10000,"maxMemoryUsedInMb":1350,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":12817,"general":0,"fallback":34463,"unresolved":43},"output_paths_taken":{"normal":1303,"unresolved":43},"t_hyper":1.69,"t_compile":0.0980541,"t_fast":5.45117,"t_slow":6.45403,"tsRequestStart":1667973208128702872,"tsRequestEnd":1667973222259380652},{"requestId":"f4589a13-8265-4805-80b1-180c08d80e34","containerId":"30207079-d640-49fc-b9e0-29181dce9426","durationInMs":14293.3,"billedDurationInMs":14294,"memorySizeInMb":10000,"maxMemoryUsedInMb":1325,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":11378,"general":0,"fallback":37797,"unresolved":15},"output_paths_taken":{"normal":2163,"unresolved":15},"t_hyper":1.426,"t_compile":0.097103,"t_fast":5.31476,"t_slow":7.15872,"tsRequestStart":1667973208138757374,"tsRequestEnd":1667973222611136291},{"requestId":"c7ca8d5e-390a-4156-9c52-777ac333f781","containerId":"7cea9d3c-c936-46ea-abdd-49a504cfd952","durationInMs":14430.5,"billedDurationInMs":14431,"memorySizeInMb":10000,"maxMemoryUsedInMb":1396,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":6051,"general":5151,"fallback":49948,"unresolved":0},"output_paths_taken":{"normal":1442,"unresolved":0},"t_hyper":0.910296,"t_compile":0.0479431,"t_fast":4.76556,"t_slow":8.57892,"tsRequestStart":1667973208989700052,"tsRequestEnd":1667973223602756345},{"requestId":"a45611fa-c570-45e2-8764-3f7c0943251d","containerId":"97eb6e3e-234c-416c-a6c0-2b676e4e629f","durationInMs":14876.2,"billedDurationInMs":14877,"memorySizeInMb":10000,"maxMemoryUsedInMb":1444,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9331,"general":6770,"fallback":58141,"unresolved":0},"output_paths_taken":{"normal":2251,"unresolved":0},"t_hyper":0.94042,"t_compile":0.0483605,"t_fast":4.31083,"t_slow":9.37766,"tsRequestStart":1667973208724989514,"tsRequestEnd":1667973223776600082},{"requestId":"d150a83f-1f32-4086-8910-50dd00ef088f","containerId":"8482856b-42f5-4a71-908c-a67530b6e342","durationInMs":14733.4,"billedDurationInMs":14734,"memorySizeInMb":10000,"maxMemoryUsedInMb":1258,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8768,"general":5919,"fallback":58382,"unresolved":0},"output_paths_taken":{"normal":1624,"unresolved":0},"t_hyper":1.37198,"t_compile":0.0502761,"t_fast":3.73964,"t_slow":9.39557,"tsRequestStart":1667973208887877120,"tsRequestEnd":1667973223805115246},{"requestId":"32596fec-aa79-4785-8542-cf471b9b2fb6","containerId":"3abc146c-1317-427d-8cef-d47c7d5ee840","durationInMs":14887.2,"billedDurationInMs":14888,"memorySizeInMb":10000,"maxMemoryUsedInMb":1409,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":6108,"general":4300,"fallback":49399,"unresolved":0},"output_paths_taken":{"normal":1375,"unresolved":0},"t_hyper":0.902004,"t_compile":0.0490352,"t_fast":5.27234,"t_slow":8.49655,"tsRequestStart":1667973208979363822,"tsRequestEnd":1667973224043946426},{"requestId":"63807f26-30fd-409e-9294-5c6e3dbb122d","containerId":"0abd90ed-c049-4211-8d36-dc19860e1c1b","durationInMs":14601.6,"billedDurationInMs":14602,"memorySizeInMb":10000,"maxMemoryUsedInMb":1454,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7517,"general":4294,"fallback":49013,"unresolved":0},"output_paths_taken":{"normal":958,"unresolved":0},"t_hyper":1.43628,"t_compile":0.0490355,"t_fast":4.22458,"t_slow":8.72473,"tsRequestStart":1667973209344639388,"tsRequestEnd":1667973224109827032},{"requestId":"ad8e8ccf-8d5f-4f77-8d1a-25545d8774b0","containerId":"9c8ade83-3575-479b-b594-39bcbaa2fc39","durationInMs":14860.5,"billedDurationInMs":14861,"memorySizeInMb":10000,"maxMemoryUsedInMb":1386,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7163,"general":4916,"fallback":50900,"unresolved":0},"output_paths_taken":{"normal":1419,"unresolved":0},"t_hyper":1.45571,"t_compile":0.048681,"t_fast":4.39393,"t_slow":8.77575,"tsRequestStart":1667973209080329236,"tsRequestEnd":1667973224112687159},{"requestId":"132585d8-7412-4255-ae73-b69004b012a1","containerId":"99721ee9-fbed-4548-85f0-992f814a3838","durationInMs":14532.8,"billedDurationInMs":14533,"memorySizeInMb":10000,"maxMemoryUsedInMb":1327,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9478,"general":8538,"fallback":56747,"unresolved":0},"output_paths_taken":{"normal":1385,"unresolved":0},"t_hyper":1.2094,"t_compile":0.0421785,"t_fast":5.17455,"t_slow":7.98776,"tsRequestStart":1667973209464026956,"tsRequestEnd":1667973224175851401},{"requestId":"f71321c3-a46d-4c46-ba53-59054864c7d2","containerId":"a4bdb011-f836-45c3-8f10-c7273edf2f01","durationInMs":15256.2,"billedDurationInMs":15257,"memorySizeInMb":10000,"maxMemoryUsedInMb":1370,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8354,"general":5657,"fallback":55944,"unresolved":0},"output_paths_taken":{"normal":1629,"unresolved":0},"t_hyper":0.969293,"t_compile":0.0486946,"t_fast":4.98336,"t_slow":9.11912,"tsRequestStart":1667973208847718630,"tsRequestEnd":1667973224273611753},{"requestId":"06d87915-9d39-4f28-be5f-3c17a7d8f87a","containerId":"00010b8a-98f3-4d83-b203-c48065c4b05f","durationInMs":15416.9,"billedDurationInMs":15417,"memorySizeInMb":10000,"maxMemoryUsedInMb":1418,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8451,"general":6484,"fallback":57812,"unresolved":0},"output_paths_taken":{"normal":2288,"unresolved":0},"t_hyper":0.840734,"t_compile":0.0507867,"t_fast":4.91159,"t_slow":9.47469,"tsRequestStart":1667973208704848440,"tsRequestEnd":1667973224299760568},{"requestId":"44976c4a-be6c-4410-84f7-a86a33e7a379","containerId":"18bbe06b-ff1d-4787-81be-7c194e1b252d","durationInMs":14786.5,"billedDurationInMs":14787,"memorySizeInMb":10000,"maxMemoryUsedInMb":1398,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7251,"general":4206,"fallback":48184,"unresolved":0},"output_paths_taken":{"normal":1012,"unresolved":0},"t_hyper":1.05206,"t_compile":0.0472014,"t_fast":5.43646,"t_slow":8.11871,"tsRequestStart":1667973209334506194,"tsRequestEnd":1667973224301271557},{"requestId":"bb6e0649-a7b5-48cd-b86c-864a455578fe","containerId":"527ef388-ab03-4abb-9417-b9073718660e","durationInMs":14647.1,"billedDurationInMs":14648,"memorySizeInMb":10000,"maxMemoryUsedInMb":1046,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":12079,"general":8519,"fallback":61477,"unresolved":0},"output_paths_taken":{"normal":1313,"unresolved":0},"t_hyper":1.02793,"t_compile":0.0489328,"t_fast":3.80993,"t_slow":9.52733,"tsRequestStart":1667973209527284832,"tsRequestEnd":1667973224350004762},{"requestId":"6cf238a4-f5ac-4b4b-91a2-4280c5cd6c46","containerId":"940c2f03-aacc-4cc0-b94a-bd7384e2100a","durationInMs":15160.8,"billedDurationInMs":15161,"memorySizeInMb":10000,"maxMemoryUsedInMb":1417,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":6638,"general":4934,"fallback":48954,"unresolved":0},"output_paths_taken":{"normal":1500,"unresolved":0},"t_hyper":1.0264,"t_compile":0.0489732,"t_fast":5.37957,"t_slow":8.56958,"tsRequestStart":1667973209029900781,"tsRequestEnd":1667973224367683783},{"requestId":"24bb23f7-e0f4-4b44-8603-d4d7fb37a379","containerId":"3cea70cb-cfac-4eaf-bc38-75ec048c371e","durationInMs":15024.9,"billedDurationInMs":15025,"memorySizeInMb":10000,"maxMemoryUsedInMb":1366,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7629,"general":5198,"fallback":48004,"unresolved":0},"output_paths_taken":{"normal":1256,"unresolved":0},"t_hyper":0.891433,"t_compile":0.048487,"t_fast":5.54349,"t_slow":8.4009,"tsRequestStart":1667973209162394741,"tsRequestEnd":1667973224371254834},{"requestId":"214dee54-2211-4400-87d4-12106dd0fb14","containerId":"48fa0d8b-b6b3-45e8-a243-55df3e746802","durationInMs":15435.8,"billedDurationInMs":15436,"memorySizeInMb":10000,"maxMemoryUsedInMb":1391,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8854,"general":6234,"fallback":56521,"unresolved":0},"output_paths_taken":{"normal":1826,"unresolved":0},"t_hyper":0.983988,"t_compile":0.0487321,"t_fast":5.20197,"t_slow":9.06876,"tsRequestStart":1667973208775483853,"tsRequestEnd":1667973224379885011},{"requestId":"12bbcc7e-17ee-4bc1-8898-3fb143feb18e","containerId":"5b70ed5c-d72f-4fd0-b57c-ae40ead3a1aa","durationInMs":15186.5,"billedDurationInMs":15187,"memorySizeInMb":10000,"maxMemoryUsedInMb":1371,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7051,"general":4747,"fallback":52651,"unresolved":0},"output_paths_taken":{"normal":1569,"unresolved":0},"t_hyper":0.862911,"t_compile":0.0512079,"t_fast":5.19411,"t_slow":8.94369,"tsRequestStart":1667973209059923130,"tsRequestEnd":1667973224430325539},{"requestId":"a65c6483-0847-48c4-943a-82ffba0fc411","containerId":"9626b0f3-5240-4c85-a494-da0c117bee5d","durationInMs":14989.1,"billedDurationInMs":14990,"memorySizeInMb":10000,"maxMemoryUsedInMb":1377,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":6801,"general":4772,"fallback":50098,"unresolved":0},"output_paths_taken":{"normal":1296,"unresolved":0},"t_hyper":0.86356,"t_compile":0.0493475,"t_fast":5.25196,"t_slow":8.65116,"tsRequestStart":1667973209264371975,"tsRequestEnd":1667973224433356523},{"requestId":"31107633-c907-4c11-9603-8d05c299f92d","containerId":"cb060240-6c29-4df6-ae62-97f32ca3245d","durationInMs":14967.6,"billedDurationInMs":14968,"memorySizeInMb":10000,"maxMemoryUsedInMb":1387,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7190,"general":3861,"fallback":49288,"unresolved":0},"output_paths_taken":{"normal":1060,"unresolved":0},"t_hyper":0.971547,"t_compile":0.048963,"t_fast":5.26133,"t_slow":8.54011,"tsRequestStart":1667973209304995409,"tsRequestEnd":1667973224450378968},{"requestId":"a988f90b-0b6c-4be3-a886-08b5e0c6685d","containerId":"b4cbfb5f-3fb4-470c-b2a5-d584ae4f2878","durationInMs":15581.1,"billedDurationInMs":15582,"memorySizeInMb":10000,"maxMemoryUsedInMb":1374,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8563,"general":7380,"fallback":58130,"unresolved":0},"output_paths_taken":{"normal":2459,"unresolved":0},"t_hyper":0.871018,"t_compile":0.048866,"t_fast":5.12396,"t_slow":9.36363,"tsRequestStart":1667973208694552905,"tsRequestEnd":1667973224462225471},{"requestId":"784d3f07-4696-49bc-b3da-059cab1f6ce5","containerId":"2e646d65-bd02-4132-89cc-0532c5bd00f3","durationInMs":15006.4,"billedDurationInMs":15007,"memorySizeInMb":10000,"maxMemoryUsedInMb":1397,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7025,"general":4395,"fallback":49155,"unresolved":0},"output_paths_taken":{"normal":1168,"unresolved":0},"t_hyper":0.94614,"t_compile":0.0485132,"t_fast":5.31368,"t_slow":8.57087,"tsRequestStart":1667973209286903325,"tsRequestEnd":1667973224480991105},{"requestId":"2b2a109a-388d-4cf2-a57c-4e4b09b7b3c2","containerId":"9131a2c7-9c27-456b-9742-5926a96efee0","durationInMs":15478,"billedDurationInMs":15479,"memorySizeInMb":10000,"maxMemoryUsedInMb":1397,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8186,"general":6141,"fallback":55002,"unresolved":0},"output_paths_taken":{"normal":1744,"unresolved":0},"t_hyper":1.01996,"t_compile":0.0494095,"t_fast":5.22417,"t_slow":9.02693,"tsRequestStart":1667973208827081736,"tsRequestEnd":1667973224482256224},{"requestId":"28592e6b-ca67-4d1f-8ff6-792a0f841792","containerId":"6742b97f-5883-4a06-be73-021bda97af0b","durationInMs":15518,"billedDurationInMs":15518,"memorySizeInMb":10000,"maxMemoryUsedInMb":1444,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8175,"general":5600,"fallback":55798,"unresolved":0},"output_paths_taken":{"normal":1773,"unresolved":0},"t_hyper":0.89557,"t_compile":0.0496441,"t_fast":5.15777,"t_slow":9.28338,"tsRequestStart":1667973208816979701,"tsRequestEnd":1667973224510025495},{"requestId":"c2a12297-574a-4a49-b85c-75456227d41b","containerId":"76822cf8-9710-4fb0-8999-b985da3a023e","durationInMs":15311.9,"billedDurationInMs":15312,"memorySizeInMb":10000,"maxMemoryUsedInMb":1380,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7086,"general":4766,"fallback":50856,"unresolved":0},"output_paths_taken":{"normal":1676,"unresolved":0},"t_hyper":0.990687,"t_compile":0.0500091,"t_fast":5.31314,"t_slow":8.68151,"tsRequestStart":1667973209019690090,"tsRequestEnd":1667973224511647598},{"requestId":"2fdbab09-4d98-4665-b2c7-aec44a6e05ca","containerId":"a1f37394-f188-40e5-92ae-d4ca1040b4a2","durationInMs":15554,"billedDurationInMs":15554,"memorySizeInMb":10000,"maxMemoryUsedInMb":1368,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8648,"general":6371,"fallback":55387,"unresolved":0},"output_paths_taken":{"normal":1836,"unresolved":0},"t_hyper":1.55162,"t_compile":0.0491661,"t_fast":4.53411,"t_slow":9.26926,"tsRequestStart":1667973208785738653,"tsRequestEnd":1667973224515961691},{"requestId":"df807c1f-9f99-4531-9bda-c5425466e523","containerId":"8b3c822d-4bd2-4789-8116-b7e6c904f0f2","durationInMs":15084.7,"billedDurationInMs":15085,"memorySizeInMb":10000,"maxMemoryUsedInMb":1383,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":6709,"general":4351,"fallback":48858,"unresolved":0},"output_paths_taken":{"normal":1252,"unresolved":0},"t_hyper":1.11215,"t_compile":0.0500209,"t_fast":5.28857,"t_slow":8.49593,"tsRequestStart":1667973209254232327,"tsRequestEnd":1667973224537027385},{"requestId":"a904d4db-03e1-4a4c-89f5-abae07229a6a","containerId":"be999fa7-2a6e-4d4c-b624-7bb17508e98b","durationInMs":15632.2,"billedDurationInMs":15633,"memorySizeInMb":10000,"maxMemoryUsedInMb":1453,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8910,"general":6673,"fallback":58758,"unresolved":0},"output_paths_taken":{"normal":2170,"unresolved":0},"t_hyper":1.0204,"t_compile":0.048666,"t_fast":5.02046,"t_slow":9.4067,"tsRequestStart":1667973208734905627,"tsRequestEnd":1667973224541389969},{"requestId":"7746d8fe-aea5-480b-a896-f22ad7d866b3","containerId":"64938fec-1b23-461c-9f1b-58958f94f353","durationInMs":14940.5,"billedDurationInMs":14941,"memorySizeInMb":10000,"maxMemoryUsedInMb":1383,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":10181,"general":10628,"fallback":59173,"unresolved":0},"output_paths_taken":{"normal":1916,"unresolved":0},"t_hyper":1.20497,"t_compile":0.0418673,"t_fast":5.18933,"t_slow":8.35276,"tsRequestStart":1667973209434255932,"tsRequestEnd":1667973224560011224},{"requestId":"166b439b-be5e-4643-8979-58967722eff9","containerId":"9f49c1f8-7bdc-4c4f-b8c9-c4042403a45a","durationInMs":15809.9,"billedDurationInMs":15810,"memorySizeInMb":10000,"maxMemoryUsedInMb":1275,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":10647,"general":7023,"fallback":64455,"unresolved":0},"output_paths_taken":{"normal":1844,"unresolved":0},"t_hyper":1.50083,"t_compile":0.0494269,"t_fast":3.78606,"t_slow":10.2671,"tsRequestStart":1667973208581414261,"tsRequestEnd":1667973224575820236},{"requestId":"935268e5-25ac-4c15-8432-31acb1a16ff7","containerId":"694e8fe1-5df6-4c20-b1ef-56f97791db48","durationInMs":15205.2,"billedDurationInMs":15206,"memorySizeInMb":10000,"maxMemoryUsedInMb":1421,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7032,"general":4126,"fallback":50429,"unresolved":0},"output_paths_taken":{"normal":1199,"unresolved":0},"t_hyper":1.44764,"t_compile":0.049356,"t_fast":4.67975,"t_slow":8.8706,"tsRequestStart":1667973209192855028,"tsRequestEnd":1667973224581626980},{"requestId":"872b6bc6-8106-4c89-87e0-db40128187f1","containerId":"37e75f53-1db0-4d30-a7f6-4e23c2440040","durationInMs":16218.3,"billedDurationInMs":16219,"memorySizeInMb":10000,"maxMemoryUsedInMb":1381,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":11633,"general":0,"fallback":76029,"unresolved":0},"output_paths_taken":{"normal":2480,"unresolved":0},"t_hyper":1.033,"t_compile":0.0474809,"t_fast":4.8845,"t_slow":10.1038,"tsRequestStart":1667973208209483282,"tsRequestEnd":1667973224606316558},{"requestId":"4d68fe13-6bab-4189-8045-591873cd4ebb","containerId":"06256221-73f3-452f-8c13-31d1ac58178a","durationInMs":15340.5,"billedDurationInMs":15341,"memorySizeInMb":10000,"maxMemoryUsedInMb":1445,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7401,"general":4798,"fallback":53096,"unresolved":0},"output_paths_taken":{"normal":1434,"unresolved":0},"t_hyper":1.42014,"t_compile":0.0490251,"t_fast":4.52058,"t_slow":9.21103,"tsRequestStart":1667973209090717850,"tsRequestEnd":1667973224610978609},{"requestId":"f84f43de-d2a2-483a-99ae-593f6f4f2fbe","containerId":"a5d64f77-6bac-423c-be1f-7df0fbecf938","durationInMs":15185.8,"billedDurationInMs":15186,"memorySizeInMb":10000,"maxMemoryUsedInMb":1438,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7121,"general":4212,"fallback":48540,"unresolved":0},"output_paths_taken":{"normal":1151,"unresolved":0},"t_hyper":0.875943,"t_compile":0.0506125,"t_fast":5.49017,"t_slow":8.62786,"tsRequestStart":1667973209243810998,"tsRequestEnd":1667973224614587593},{"requestId":"ba5432eb-bf9f-4281-ab5b-765d2151d9ba","containerId":"2863aa3e-6556-4f55-82d7-924f3cbfca4b","durationInMs":15905.1,"billedDurationInMs":15906,"memorySizeInMb":10000,"maxMemoryUsedInMb":1400,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9291,"general":5810,"fallback":63285,"unresolved":0},"output_paths_taken":{"normal":1897,"unresolved":0},"t_hyper":0.955579,"t_compile":0.0504344,"t_fast":4.60903,"t_slow":10.1235,"tsRequestStart":1667973208540763344,"tsRequestEnd":1667973224625235925},{"requestId":"d9331795-e2fd-4520-a149-f811c3c27381","containerId":"a2687913-1691-4291-b324-d1b045d0689d","durationInMs":15152.5,"billedDurationInMs":15153,"memorySizeInMb":10000,"maxMemoryUsedInMb":1454,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7180,"general":4286,"fallback":48719,"unresolved":0},"output_paths_taken":{"normal":1115,"unresolved":0},"t_hyper":0.91652,"t_compile":0.0482547,"t_fast":5.52307,"t_slow":8.50095,"tsRequestStart":1667973209324669191,"tsRequestEnd":1667973224640965145},{"requestId":"f95768ef-3679-48c3-b096-206df3168fcd","containerId":"d8495234-a82e-4c4c-a6b1-950d82c8409c","durationInMs":15387.2,"billedDurationInMs":15388,"memorySizeInMb":10000,"maxMemoryUsedInMb":1371,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7184,"general":4669,"fallback":52207,"unresolved":0},"output_paths_taken":{"normal":1419,"unresolved":0},"t_hyper":0.907786,"t_compile":0.0489329,"t_fast":5.30367,"t_slow":8.96926,"tsRequestStart":1667973209121454530,"tsRequestEnd":1667973224685264505},{"requestId":"c1c4b95d-c88e-412b-9e8d-a0effca74eef","containerId":"7cb14dde-7ac1-4090-a160-4e64eaf85665","durationInMs":15373.2,"billedDurationInMs":15374,"memorySizeInMb":10000,"maxMemoryUsedInMb":1446,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7513,"general":4815,"fallback":52713,"unresolved":0},"output_paths_taken":{"normal":1396,"unresolved":0},"t_hyper":1.01307,"t_compile":0.0492177,"t_fast":5.17021,"t_slow":8.9701,"tsRequestStart":1667973209141722863,"tsRequestEnd":1667973224696961768},{"requestId":"0cae937e-736a-4394-8383-921bd2c860b1","containerId":"266301ba-a420-4543-8bbb-27a83aab7794","durationInMs":15233,"billedDurationInMs":15234,"memorySizeInMb":10000,"maxMemoryUsedInMb":1376,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":6979,"general":3995,"fallback":48705,"unresolved":0},"output_paths_taken":{"normal":1019,"unresolved":0},"t_hyper":0.93112,"t_compile":0.0662167,"t_fast":5.55149,"t_slow":8.55054,"tsRequestStart":1667973209314882529,"tsRequestEnd":1667973224723257450},{"requestId":"94a88834-1bf2-4a05-b809-99940c13e866","containerId":"f38307fb-818a-4b05-aa02-a73ef652f12d","durationInMs":15482.5,"billedDurationInMs":15483,"memorySizeInMb":10000,"maxMemoryUsedInMb":1381,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7590,"general":4413,"fallback":51167,"unresolved":0},"output_paths_taken":{"normal":1342,"unresolved":0},"t_hyper":0.907326,"t_compile":0.0492374,"t_fast":5.47795,"t_slow":8.89936,"tsRequestStart":1667973209100905387,"tsRequestEnd":1667973224745255398},{"requestId":"0a3cef3e-d014-4499-b758-b743a11bbff2","containerId":"03238cf3-ad33-4512-b708-eb2a6d462305","durationInMs":15874.8,"billedDurationInMs":15875,"memorySizeInMb":10000,"maxMemoryUsedInMb":1383,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8155,"general":7449,"fallback":58203,"unresolved":0},"output_paths_taken":{"normal":2505,"unresolved":0},"t_hyper":0.974173,"t_compile":0.0498615,"t_fast":5.05134,"t_slow":9.61293,"tsRequestStart":1667973208683899357,"tsRequestEnd":1667973224747936375},{"requestId":"3ab59254-5532-49f5-a169-29f4b0b632f7","containerId":"3c85b1d8-8208-4d97-94e2-34426d77cde0","durationInMs":15577.1,"billedDurationInMs":15578,"memorySizeInMb":10000,"maxMemoryUsedInMb":1374,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":6771,"general":5101,"fallback":50047,"unresolved":0},"output_paths_taken":{"normal":1686,"unresolved":0},"t_hyper":1.42397,"t_compile":0.048365,"t_fast":5.17761,"t_slow":8.78512,"tsRequestStart":1667973209009728590,"tsRequestEnd":1667973224755898962},{"requestId":"6abd9cc0-42c9-486b-8bdc-c842d6dac4da","containerId":"907c6645-01bc-4256-bd98-a0358edb5e33","durationInMs":15379.2,"billedDurationInMs":15380,"memorySizeInMb":10000,"maxMemoryUsedInMb":1391,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7241,"general":4109,"fallback":49237,"unresolved":0},"output_paths_taken":{"normal":1315,"unresolved":0},"t_hyper":0.926668,"t_compile":0.0497499,"t_fast":5.47625,"t_slow":8.79083,"tsRequestStart":1667973209213273780,"tsRequestEnd":1667973224792649937},{"requestId":"3f0ae415-fcf0-4be9-a4ec-14f9d209ce14","containerId":"930606c4-fd5d-4352-8dc2-cf524e36d44f","durationInMs":15516.8,"billedDurationInMs":15517,"memorySizeInMb":10000,"maxMemoryUsedInMb":1410,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7105,"general":5122,"fallback":53545,"unresolved":0},"output_paths_taken":{"normal":1348,"unresolved":0},"t_hyper":0.949186,"t_compile":0.0485776,"t_fast":5.39738,"t_slow":8.98193,"tsRequestStart":1667973209131516850,"tsRequestEnd":1667973224821608246},{"requestId":"558e2a4b-6cb8-4650-b551-4d2995ee4606","containerId":"b630af07-248a-4059-bdef-822ccc9c2851","durationInMs":15827.7,"billedDurationInMs":15828,"memorySizeInMb":10000,"maxMemoryUsedInMb":1375,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8495,"general":6340,"fallback":56453,"unresolved":0},"output_paths_taken":{"normal":1729,"unresolved":0},"t_hyper":1.01809,"t_compile":0.0495833,"t_fast":5.21978,"t_slow":9.40194,"tsRequestStart":1667973208837617344,"tsRequestEnd":1667973224834184146},{"requestId":"53cfc08b-f094-4890-a170-39041d9ffc7f","containerId":"cc461c20-bcc1-423a-93c2-97523062c51b","durationInMs":15845.7,"billedDurationInMs":15846,"memorySizeInMb":10000,"maxMemoryUsedInMb":1397,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8448,"general":5647,"fallback":56784,"unresolved":0},"output_paths_taken":{"normal":1624,"unresolved":0},"t_hyper":1.02863,"t_compile":0.0502284,"t_fast":5.45473,"t_slow":9.17466,"tsRequestStart":1667973208857861703,"tsRequestEnd":1667973224869689573},{"requestId":"229fd54c-0542-4d65-8e48-fb4482ff76eb","containerId":"539522a8-d736-4caf-a830-35a3caecbce8","durationInMs":16656.5,"billedDurationInMs":16657,"memorySizeInMb":10000,"maxMemoryUsedInMb":1156,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":62388,"general":0,"fallback":80390,"unresolved":4792},"output_paths_taken":{"normal":5184,"unresolved":4792},"t_hyper":1.84214,"t_compile":0.0435989,"t_fast":3.62001,"t_slow":10.9664,"tsRequestStart":1667973208048945989,"tsRequestEnd":1667973224878717620},{"requestId":"7e83838c-ff0a-4a28-a0fb-a3cbd449340e","containerId":"ca0d2d9e-597c-45be-9e58-e26bee8016ad","durationInMs":15950,"billedDurationInMs":15950,"memorySizeInMb":10000,"maxMemoryUsedInMb":1447,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8797,"general":7233,"fallback":55504,"unresolved":0},"output_paths_taken":{"normal":1889,"unresolved":0},"t_hyper":1.50698,"t_compile":0.0492215,"t_fast":4.96631,"t_slow":9.29304,"tsRequestStart":1667973208765240369,"tsRequestEnd":1667973224886572176},{"requestId":"85e6015a-b055-4c03-a900-d5a160b951d6","containerId":"c57f3749-d026-48fc-b62e-6668d6e7633f","durationInMs":16146.9,"billedDurationInMs":16147,"memorySizeInMb":10000,"maxMemoryUsedInMb":1403,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9617,"general":5614,"fallback":62557,"unresolved":0},"output_paths_taken":{"normal":1790,"unresolved":0},"t_hyper":0.936341,"t_compile":0.0507738,"t_fast":5.26176,"t_slow":9.75451,"tsRequestStart":1667973208571272247,"tsRequestEnd":1667973224901457661},{"requestId":"f9a13b66-099c-44dd-9ab3-97e869bc2e94","containerId":"1a163ad3-9b5a-43ce-a226-b66cec35120d","durationInMs":15525.7,"billedDurationInMs":15526,"memorySizeInMb":10000,"maxMemoryUsedInMb":1439,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7181,"general":3996,"fallback":50024,"unresolved":0},"output_paths_taken":{"normal":1217,"unresolved":0},"t_hyper":1.02107,"t_compile":0.0490881,"t_fast":5.53233,"t_slow":8.69426,"tsRequestStart":1667973209202869686,"tsRequestEnd":1667973224911932915},{"requestId":"62266292-5043-4103-8371-44095d5e2b5e","containerId":"993f9287-49f3-4867-9859-7c2b2268786f","durationInMs":16236.5,"billedDurationInMs":16237,"memorySizeInMb":10000,"maxMemoryUsedInMb":1411,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9853,"general":5951,"fallback":61720,"unresolved":0},"output_paths_taken":{"normal":2119,"unresolved":0},"t_hyper":0.970381,"t_compile":0.0493719,"t_fast":5.43068,"t_slow":9.64863,"tsRequestStart":1667973208519927397,"tsRequestEnd":1667973224926506867},{"requestId":"ef2f56d0-b891-482d-b026-ec26eada4ba9","containerId":"b77e5ba9-a73e-4f81-b912-4860c854a175","durationInMs":16538.8,"billedDurationInMs":16539,"memorySizeInMb":10000,"maxMemoryUsedInMb":1440,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":11929,"general":0,"fallback":77026,"unresolved":0},"output_paths_taken":{"normal":2494,"unresolved":0},"t_hyper":1.07017,"t_compile":0.0488312,"t_fast":5.06775,"t_slow":10.2115,"tsRequestStart":1667973208219712656,"tsRequestEnd":1667973224934207117},{"requestId":"744255d1-605f-4d47-8829-e78410c9bc32","containerId":"d39a773d-b7ad-4901-8824-b02a26b99494","durationInMs":16252.9,"billedDurationInMs":16253,"memorySizeInMb":10000,"maxMemoryUsedInMb":1372,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9486,"general":6276,"fallback":63285,"unresolved":0},"output_paths_taken":{"normal":2247,"unresolved":0},"t_hyper":0.9106,"t_compile":0.0487023,"t_fast":5.15286,"t_slow":10.0048,"tsRequestStart":1667973208509383564,"tsRequestEnd":1667973224942740990},{"requestId":"44b04be3-a4e3-477e-8027-398f349a8c52","containerId":"ca566f7d-87de-43ba-851e-653ba87e05b2","durationInMs":15957.1,"billedDurationInMs":15958,"memorySizeInMb":10000,"maxMemoryUsedInMb":1441,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8928,"general":5037,"fallback":55715,"unresolved":0},"output_paths_taken":{"normal":2080,"unresolved":0},"t_hyper":0.942406,"t_compile":0.0502396,"t_fast":5.53295,"t_slow":9.24722,"tsRequestStart":1667973208806308583,"tsRequestEnd":1667973224945510126},{"requestId":"d06d4ee7-c8ab-4dd6-a954-261d7fa84070","containerId":"4c8ff7a5-fe44-47a6-a8da-856c8aad21b5","durationInMs":16105.6,"billedDurationInMs":16106,"memorySizeInMb":10000,"maxMemoryUsedInMb":1382,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7668,"general":6985,"fallback":58126,"unresolved":0},"output_paths_taken":{"normal":2731,"unresolved":0},"t_hyper":1.05985,"t_compile":0.0487922,"t_fast":5.42385,"t_slow":9.41066,"tsRequestStart":1667973208663534819,"tsRequestEnd":1667973224951014777},{"requestId":"c15ca2a6-04dd-46b3-b762-2592aeb658b6","containerId":"3f9eda77-ce48-461c-a8fa-488858f86a23","durationInMs":16038,"billedDurationInMs":16039,"memorySizeInMb":10000,"maxMemoryUsedInMb":1434,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9285,"general":6092,"fallback":55607,"unresolved":0},"output_paths_taken":{"normal":1949,"unresolved":0},"t_hyper":1.30872,"t_compile":0.0494006,"t_fast":5.53118,"t_slow":9.00184,"tsRequestStart":1667973208745159375,"tsRequestEnd":1667973224963995286},{"requestId":"1783b710-bc7b-496e-a129-3bff7c1af3f8","containerId":"8b18fb3f-fbf6-4e39-a6d7-04b552f49b31","durationInMs":15435.1,"billedDurationInMs":15436,"memorySizeInMb":10000,"maxMemoryUsedInMb":1365,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7683,"general":4271,"fallback":51420,"unresolved":0},"output_paths_taken":{"normal":1036,"unresolved":0},"t_hyper":0.909764,"t_compile":0.0494567,"t_fast":5.5537,"t_slow":8.78514,"tsRequestStart":1667973209354597324,"tsRequestEnd":1667973224964463671},{"requestId":"e582aa35-71b9-4ea8-8b83-aac11f21dace","containerId":"4dc6e260-083c-454c-8bb1-5f87a1ca36fb","durationInMs":15743.1,"billedDurationInMs":15744,"memorySizeInMb":10000,"maxMemoryUsedInMb":1382,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7078,"general":5505,"fallback":51701,"unresolved":0},"output_paths_taken":{"normal":1626,"unresolved":0},"t_hyper":0.972012,"t_compile":0.0511254,"t_fast":5.47137,"t_slow":9.11787,"tsRequestStart":1667973209049829741,"tsRequestEnd":1667973224968212442},{"requestId":"4883e17a-c617-435e-b229-e4c86aeff31b","containerId":"e0082c00-bc86-41c4-bffe-3240c29d8156","durationInMs":15917.3,"billedDurationInMs":15918,"memorySizeInMb":10000,"maxMemoryUsedInMb":1388,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8401,"general":6069,"fallback":57973,"unresolved":0},"output_paths_taken":{"normal":1449,"unresolved":0},"t_hyper":0.911256,"t_compile":0.0499771,"t_fast":5.20701,"t_slow":9.48745,"tsRequestStart":1667973208877980483,"tsRequestEnd":1667973224975096730},{"requestId":"aecc7444-3aca-4d15-a3b8-8b0c06299016","containerId":"c020cbdf-9935-4d67-a1b3-5296162104d3","durationInMs":15630.5,"billedDurationInMs":15631,"memorySizeInMb":10000,"maxMemoryUsedInMb":1446,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7635,"general":5562,"fallback":49939,"unresolved":0},"output_paths_taken":{"normal":1268,"unresolved":0},"t_hyper":1.39988,"t_compile":0.0495417,"t_fast":5.25799,"t_slow":8.70301,"tsRequestStart":1667973209172508794,"tsRequestEnd":1667973224981301287},{"requestId":"58b4889c-ff71-4f39-9e25-05a89e2bbffe","containerId":"e5cd1858-52df-4d3c-92bf-dbe1c48cd185","durationInMs":15571.2,"billedDurationInMs":15572,"memorySizeInMb":10000,"maxMemoryUsedInMb":1419,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7383,"general":4100,"fallback":48955,"unresolved":0},"output_paths_taken":{"normal":1203,"unresolved":0},"t_hyper":1.50808,"t_compile":0.048437,"t_fast":5.18064,"t_slow":8.68934,"tsRequestStart":1667973209233841062,"tsRequestEnd":1667973225016155802},{"requestId":"702b6e18-d0d8-4833-a5b6-2a0efc939415","containerId":"2dfa46f0-5ac8-422d-8635-de9e07e809c9","durationInMs":15669.5,"billedDurationInMs":15670,"memorySizeInMb":10000,"maxMemoryUsedInMb":1389,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":6914,"general":3988,"fallback":49706,"unresolved":0},"output_paths_taken":{"normal":1218,"unresolved":0},"t_hyper":1.35331,"t_compile":0.0493975,"t_fast":5.25121,"t_slow":8.61938,"tsRequestStart":1667973209182701941,"tsRequestEnd":1667973225027637040},{"requestId":"48a8d820-6417-4ed2-8c22-f84f1c11b3ad","containerId":"f04b08e0-6270-4fe9-ae7d-7c7a5fd28288","durationInMs":16315.8,"billedDurationInMs":16316,"memorySizeInMb":10000,"maxMemoryUsedInMb":1402,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9351,"general":5971,"fallback":63661,"unresolved":0},"output_paths_taken":{"normal":2021,"unresolved":0},"t_hyper":1.00165,"t_compile":0.0501651,"t_fast":5.23074,"t_slow":9.87983,"tsRequestStart":1667973208550785458,"tsRequestEnd":1667973225043561022},{"requestId":"1fbbe43a-3e68-43ed-a71e-c52686647749","containerId":"f2a0b834-3bf3-4859-a58a-2b0c4f192ff0","durationInMs":15640.3,"billedDurationInMs":15641,"memorySizeInMb":10000,"maxMemoryUsedInMb":1396,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":6673,"general":3974,"fallback":48768,"unresolved":0},"output_paths_taken":{"normal":1232,"unresolved":0},"t_hyper":1.56192,"t_compile":0.047776,"t_fast":5.35677,"t_slow":8.51958,"tsRequestStart":1667973209223433951,"tsRequestEnd":1667973225078622886},{"requestId":"e2ecaea5-7ed7-4059-bd7d-1df82d14ea8e","containerId":"0827c766-555f-4b97-99a8-04035e79c594","durationInMs":16221.9,"billedDurationInMs":16222,"memorySizeInMb":10000,"maxMemoryUsedInMb":1379,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8020,"general":7083,"fallback":59703,"unresolved":0},"output_paths_taken":{"normal":2640,"unresolved":0},"t_hyper":1.04618,"t_compile":0.0480032,"t_fast":5.47846,"t_slow":9.5041,"tsRequestStart":1667973208673708422,"tsRequestEnd":1667973225079390143},{"requestId":"f1e2c254-cca8-4c1b-8ed6-894680bfcb87","containerId":"a7396edb-815d-47ff-a3ef-f9c76ba5eab5","durationInMs":15569.8,"billedDurationInMs":15570,"memorySizeInMb":10000,"maxMemoryUsedInMb":1394,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7928,"general":4063,"fallback":53893,"unresolved":0},"output_paths_taken":{"normal":1040,"unresolved":0},"t_hyper":1.4212,"t_compile":0.0486876,"t_fast":4.93676,"t_slow":9.00601,"tsRequestStart":1667973209374471835,"tsRequestEnd":1667973225122430048},{"requestId":"b40973b8-9f05-4485-af2f-5d1eea14ce61","containerId":"5c1cd2cf-5d17-466f-a1ec-59ef9a727d1d","durationInMs":16006.1,"billedDurationInMs":16007,"memorySizeInMb":10000,"maxMemoryUsedInMb":1387,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8332,"general":4821,"fallback":60137,"unresolved":0},"output_paths_taken":{"normal":1510,"unresolved":0},"t_hyper":1.40696,"t_compile":0.0481903,"t_fast":4.9446,"t_slow":9.47504,"tsRequestStart":1667973208958828085,"tsRequestEnd":1667973225144057958},{"requestId":"25f109b8-5aff-4a2f-8929-76ca12eaa9cf","containerId":"a53a0b43-ca22-4491-93fb-8a218cdd9e98","durationInMs":16298.3,"billedDurationInMs":16299,"memorySizeInMb":10000,"maxMemoryUsedInMb":1440,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8914,"general":6578,"fallback":57922,"unresolved":0},"output_paths_taken":{"normal":2030,"unresolved":0},"t_hyper":1.06544,"t_compile":0.0499991,"t_fast":5.21502,"t_slow":9.62895,"tsRequestStart":1667973208714797483,"tsRequestEnd":1667973225182131673},{"requestId":"73da005f-80f6-42bf-8cfd-f11dac12edd6","containerId":"5d36bc0b-3f9e-4f38-871a-201cd6fd27b3","durationInMs":16214,"billedDurationInMs":16214,"memorySizeInMb":10000,"maxMemoryUsedInMb":1372,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9116,"general":6278,"fallback":57256,"unresolved":0},"output_paths_taken":{"normal":2301,"unresolved":0},"t_hyper":1.00238,"t_compile":0.0496769,"t_fast":5.32033,"t_slow":9.3964,"tsRequestStart":1667973208796073882,"tsRequestEnd":1667973225185148918},{"requestId":"51bd9242-e703-43fa-8e12-556a837b7e34","containerId":"84406d89-ecb1-442d-afc3-6c0215beb9fc","durationInMs":15660.1,"billedDurationInMs":15661,"memorySizeInMb":10000,"maxMemoryUsedInMb":1464,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7546,"general":4086,"fallback":51093,"unresolved":0},"output_paths_taken":{"normal":930,"unresolved":0},"t_hyper":1.50184,"t_compile":0.0486509,"t_fast":5.26285,"t_slow":8.70836,"tsRequestStart":1667973209364606560,"tsRequestEnd":1667973225195637677},{"requestId":"3e474965-b78d-4b5f-bed1-f96a8cbcb1b2","containerId":"c3a56b1a-1a57-40c4-a6fd-156571c97f06","durationInMs":15894.2,"billedDurationInMs":15895,"memorySizeInMb":10000,"maxMemoryUsedInMb":1450,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7419,"general":5558,"fallback":51433,"unresolved":0},"output_paths_taken":{"normal":1369,"unresolved":0},"t_hyper":1.10326,"t_compile":0.0501651,"t_fast":5.61997,"t_slow":8.96813,"tsRequestStart":1667973209152052286,"tsRequestEnd":1667973225238163469},{"requestId":"212c5936-3a66-4200-ac1c-120ad8b9e776","containerId":"e8edc894-269d-4444-ab25-b41378ec69e3","durationInMs":16153.1,"billedDurationInMs":16154,"memorySizeInMb":10000,"maxMemoryUsedInMb":1395,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8024,"general":5074,"fallback":59732,"unresolved":0},"output_paths_taken":{"normal":1451,"unresolved":0},"t_hyper":0.883515,"t_compile":0.0493442,"t_fast":5.36103,"t_slow":9.70256,"tsRequestStart":1667973208918186778,"tsRequestEnd":1667973225254861436},{"requestId":"76993c83-f1a1-4e9a-8f9c-75a21ef52a28","containerId":"2f848193-e7e2-4f22-9a11-5726dc45b438","durationInMs":16228.6,"billedDurationInMs":16229,"memorySizeInMb":10000,"maxMemoryUsedInMb":1435,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8680,"general":5458,"fallback":55715,"unresolved":0},"output_paths_taken":{"normal":1329,"unresolved":0},"t_hyper":1.46577,"t_compile":0.0485858,"t_fast":5.44851,"t_slow":9.12809,"tsRequestStart":1667973208867786177,"tsRequestEnd":1667973225266221476},{"requestId":"247d9873-2429-4bf5-9438-15d3be2f8ffc","containerId":"9374d728-a3bf-4435-b81f-38e580f3ca7e","durationInMs":16903.8,"billedDurationInMs":16904,"memorySizeInMb":10000,"maxMemoryUsedInMb":1364,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":12111,"general":0,"fallback":77863,"unresolved":0},"output_paths_taken":{"normal":2629,"unresolved":0},"t_hyper":1.0204,"t_compile":0.0504646,"t_fast":5.42749,"t_slow":10.24,"tsRequestStart":1667973208199230840,"tsRequestEnd":1667973225272539833},{"requestId":"40286c50-9c48-42b3-ac81-a40a1382c36c","containerId":"a1fc7d8a-5c8f-4065-8384-ffdcb54ba91b","durationInMs":16695.6,"billedDurationInMs":16696,"memorySizeInMb":10000,"maxMemoryUsedInMb":1421,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":10007,"general":7680,"fallback":65719,"unresolved":0},"output_paths_taken":{"normal":2580,"unresolved":0},"t_hyper":0.911152,"t_compile":0.0494544,"t_fast":5.27263,"t_slow":10.3218,"tsRequestStart":1667973208454321609,"tsRequestEnd":1667973225329883816},{"requestId":"7ebf0edf-cbef-48d6-ac02-cdd71dbeeea5","containerId":"8133ca9c-6a25-49d6-ad4d-58f34990c1b0","durationInMs":15907.3,"billedDurationInMs":15908,"memorySizeInMb":10000,"maxMemoryUsedInMb":1386,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7095,"general":4296,"fallback":50770,"unresolved":0},"output_paths_taken":{"normal":1138,"unresolved":0},"t_hyper":1.4339,"t_compile":0.0491783,"t_fast":5.4974,"t_slow":8.75157,"tsRequestStart":1667973209274714021,"tsRequestEnd":1667973225359557486},{"requestId":"2346a26a-527e-4d40-adf3-6ae55c8c3709","containerId":"340dcb5d-a230-4464-8227-2c0ff689954b","durationInMs":16446.5,"billedDurationInMs":16447,"memorySizeInMb":10000,"maxMemoryUsedInMb":1439,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9327,"general":6429,"fallback":55530,"unresolved":0},"output_paths_taken":{"normal":2034,"unresolved":0},"t_hyper":1.48263,"t_compile":0.0501138,"t_fast":5.28233,"t_slow":9.45282,"tsRequestStart":1667973208755183582,"tsRequestEnd":1667973225377432352},{"requestId":"3bf0ab57-61cc-4374-b93c-0ef70deabf45","containerId":"9779bba0-73a7-4abc-8ab0-cb60066c96c8","durationInMs":16771.8,"billedDurationInMs":16772,"memorySizeInMb":10000,"maxMemoryUsedInMb":1389,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":10838,"general":7004,"fallback":65431,"unresolved":0},"output_paths_taken":{"normal":2274,"unresolved":0},"t_hyper":0.991938,"t_compile":0.0505138,"t_fast":5.08011,"t_slow":10.5078,"tsRequestStart":1667973208465114653,"tsRequestEnd":1667973225412753495},{"requestId":"710d10ef-21f8-46d4-b15e-83f53d5d84f4","containerId":"fdc745af-8929-4b53-801c-3345c49cdd43","durationInMs":16265.4,"billedDurationInMs":16266,"memorySizeInMb":10000,"maxMemoryUsedInMb":1380,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7333,"general":5976,"fallback":55584,"unresolved":0},"output_paths_taken":{"normal":1379,"unresolved":0},"t_hyper":1.49433,"t_compile":0.0490102,"t_fast":5.46846,"t_slow":9.11312,"tsRequestStart":1667973208969042527,"tsRequestEnd":1667973225414117882},{"requestId":"9c3ca78c-07c9-4a51-9dff-e730747dc77d","containerId":"5e02e967-b178-4830-a703-52688bfd635b","durationInMs":16339.6,"billedDurationInMs":16340,"memorySizeInMb":10000,"maxMemoryUsedInMb":1466,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7210,"general":4767,"fallback":52770,"unresolved":0},"output_paths_taken":{"normal":1063,"unresolved":0},"t_hyper":1.01437,"t_compile":0.052222,"t_fast":5.56617,"t_slow":9.29573,"tsRequestStart":1667973208907952600,"tsRequestEnd":1667973225414713150},{"requestId":"ca6085e6-4bd8-454f-9e6c-2caf4442b919","containerId":"4a1903c3-435c-480e-be7b-acb6d310d80e","durationInMs":16199.9,"billedDurationInMs":16200,"memorySizeInMb":10000,"maxMemoryUsedInMb":1386,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7153,"general":5091,"fallback":51469,"unresolved":0},"output_paths_taken":{"normal":1533,"unresolved":0},"t_hyper":1.56487,"t_compile":0.0485832,"t_fast":5.53718,"t_slow":8.90961,"tsRequestStart":1667973209070329909,"tsRequestEnd":1667973225446120164},{"requestId":"a7a4eb0e-5ec7-4405-8a3a-caf9f75d75bd","containerId":"c7b0e0a5-b7da-46c4-b9c1-183a98348752","durationInMs":15800.9,"billedDurationInMs":15801,"memorySizeInMb":10000,"maxMemoryUsedInMb":1141,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9454,"general":9579,"fallback":54826,"unresolved":0},"output_paths_taken":{"normal":1532,"unresolved":0},"t_hyper":0.953908,"t_compile":0.0509485,"t_fast":5.37146,"t_slow":9.27593,"tsRequestStart":1667973209474133662,"tsRequestEnd":1667973225450875185},{"requestId":"769322bd-454f-4302-bdc5-827d7ac38129","containerId":"c76a74ec-0913-45c6-b1c8-1762eaa58004","durationInMs":16825.5,"billedDurationInMs":16826,"memorySizeInMb":10000,"maxMemoryUsedInMb":1395,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9773,"general":7078,"fallback":64249,"unresolved":0},"output_paths_taken":{"normal":2681,"unresolved":0},"t_hyper":1.44798,"t_compile":0.0485805,"t_fast":5.28894,"t_slow":9.87831,"tsRequestStart":1667973208498235926,"tsRequestEnd":1667973225500408388},{"requestId":"a86399da-971b-4c05-8d0b-ed0c0305fa74","containerId":"f5fa1af7-f9c9-4361-9be9-8ee86bab46c7","durationInMs":17065.7,"billedDurationInMs":17066,"memorySizeInMb":10000,"maxMemoryUsedInMb":1255,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":14533,"general":7290,"fallback":89221,"unresolved":0},"output_paths_taken":{"normal":2719,"unresolved":0},"t_hyper":0.877458,"t_compile":0.0497561,"t_fast":3.87901,"t_slow":12.1267,"tsRequestStart":1667973208292283157,"tsRequestEnd":1667973225536007857},{"requestId":"4976b596-8547-4e61-b4b4-ee02144dd8d4","containerId":"fc690a01-586b-4a81-beb0-b36edbacb8ce","durationInMs":15994.5,"billedDurationInMs":15995,"memorySizeInMb":10000,"maxMemoryUsedInMb":1441,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":13239,"general":8621,"fallback":66291,"unresolved":0},"output_paths_taken":{"normal":1793,"unresolved":0},"t_hyper":0.893128,"t_compile":0.0543473,"t_fast":4.7421,"t_slow":10.1418,"tsRequestStart":1667973209414420775,"tsRequestEnd":1667973225583924203},{"requestId":"2c13f42c-f72e-4467-92e3-6583006fdf7c","containerId":"144a1be7-fe44-44b9-99c2-d7b4f0552b54","durationInMs":16505.6,"billedDurationInMs":16506,"memorySizeInMb":10000,"maxMemoryUsedInMb":1375,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8459,"general":5621,"fallback":66324,"unresolved":0},"output_paths_taken":{"normal":1994,"unresolved":0},"t_hyper":0.900953,"t_compile":0.0488632,"t_fast":5.19739,"t_slow":10.2042,"tsRequestStart":1667973208948459662,"tsRequestEnd":1667973225638095147},{"requestId":"6830c6cb-1b60-441a-9ed2-325b40ab957d","containerId":"947980f2-d384-4093-a3a3-3bad29ac5dd2","durationInMs":16947,"billedDurationInMs":16947,"memorySizeInMb":10000,"maxMemoryUsedInMb":1381,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9571,"general":6261,"fallback":61714,"unresolved":0},"output_paths_taken":{"normal":1868,"unresolved":0},"t_hyper":1.4629,"t_compile":0.0489345,"t_fast":5.24883,"t_slow":9.69807,"tsRequestStart":1667973208530479379,"tsRequestEnd":1667973225654600176},{"requestId":"9fb943ce-d168-4ebf-8d39-76fd27a51143","containerId":"b987d47c-2bb5-42a3-add8-56ac2d9075b2","durationInMs":16562.7,"billedDurationInMs":16563,"memorySizeInMb":10000,"maxMemoryUsedInMb":1372,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8192,"general":5457,"fallback":61319,"unresolved":0},"output_paths_taken":{"normal":1838,"unresolved":0},"t_hyper":1.43397,"t_compile":0.048972,"t_fast":5.13023,"t_slow":9.81504,"tsRequestStart":1667973208928336911,"tsRequestEnd":1667973225670549684},{"requestId":"695253d6-614e-4ef1-8a60-cd22475137e8","containerId":"03864c11-274a-40cf-8cee-3224e144e37d","durationInMs":16066,"billedDurationInMs":16067,"memorySizeInMb":10000,"maxMemoryUsedInMb":1333,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":10685,"general":10261,"fallback":58629,"unresolved":0},"output_paths_taken":{"normal":1697,"unresolved":0},"t_hyper":1.00235,"t_compile":0.0572127,"t_fast":5.33063,"t_slow":9.52646,"tsRequestStart":1667973209444093474,"tsRequestEnd":1667973225692011302},{"requestId":"4177df97-f838-4974-92e7-1f86bbad25b4","containerId":"bc9b8789-bffc-495b-a58f-3d9abe57490e","durationInMs":16434.3,"billedDurationInMs":16435,"memorySizeInMb":10000,"maxMemoryUsedInMb":1452,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7752,"general":4846,"fallback":53433,"unresolved":0},"output_paths_taken":{"normal":1431,"unresolved":0},"t_hyper":1.55942,"t_compile":0.0487657,"t_fast":5.30344,"t_slow":9.35125,"tsRequestStart":1667973209111124978,"tsRequestEnd":1667973225723625127},{"requestId":"c934b1de-c4df-4dc9-8c8d-dcfdccc3f998","containerId":"419c9043-4f56-41f6-bc0a-ab433a7c6eda","durationInMs":16072.6,"billedDurationInMs":16073,"memorySizeInMb":10000,"maxMemoryUsedInMb":1185,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9931,"general":9251,"fallback":59631,"unresolved":0},"output_paths_taken":{"normal":1470,"unresolved":0},"t_hyper":1.47954,"t_compile":0.0504215,"t_fast":4.79627,"t_slow":9.6096,"tsRequestStart":1667973209494422102,"tsRequestEnd":1667973225736877252},{"requestId":"a5b037a1-35c7-413f-9fe3-5267799cd378","containerId":"572c3b78-67e1-477f-ad2a-d6780e760b36","durationInMs":16527.1,"billedDurationInMs":16528,"memorySizeInMb":10000,"maxMemoryUsedInMb":1387,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":6894,"general":4827,"fallback":51400,"unresolved":0},"output_paths_taken":{"normal":1703,"unresolved":0},"t_hyper":1.81897,"t_compile":0.0489737,"t_fast":5.43438,"t_slow":9.00103,"tsRequestStart":1667973209039949041,"tsRequestEnd":1667973225740843673},{"requestId":"ee3f5b92-dd8b-44cb-9584-69b3980b9529","containerId":"96fc5ffb-29e0-454d-84b2-10b192a5520b","durationInMs":17173.6,"billedDurationInMs":17174,"memorySizeInMb":10000,"maxMemoryUsedInMb":1384,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9008,"general":8007,"fallback":67008,"unresolved":0},"output_paths_taken":{"normal":2992,"unresolved":0},"t_hyper":1.00698,"t_compile":0.0492261,"t_fast":5.54543,"t_slow":10.4314,"tsRequestStart":1667973208433981713,"tsRequestEnd":1667973225784063758},{"requestId":"1cf3c818-637c-4c6d-ab44-65dde3c86a0c","containerId":"d8908be2-8d82-4c26-b023-bf60ac5f26a2","durationInMs":17160.7,"billedDurationInMs":17161,"memorySizeInMb":10000,"maxMemoryUsedInMb":1403,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9555,"general":6419,"fallback":63353,"unresolved":0},"output_paths_taken":{"normal":2600,"unresolved":0},"t_hyper":1.52178,"t_compile":0.0499791,"t_fast":5.35529,"t_slow":10.0671,"tsRequestStart":1667973208487507319,"tsRequestEnd":1667973225824421597},{"requestId":"4fc57b60-6435-4ce9-bc48-024067360ab4","containerId":"a6cab9fb-8abe-4b8f-ad9c-789ae39fcb28","durationInMs":16177.4,"billedDurationInMs":16178,"memorySizeInMb":10000,"maxMemoryUsedInMb":1155,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9524,"general":9085,"fallback":55637,"unresolved":0},"output_paths_taken":{"normal":1433,"unresolved":0},"t_hyper":1.54364,"t_compile":0.0478366,"t_fast":5.31403,"t_slow":9.13325,"tsRequestStart":1667973209484326385,"tsRequestEnd":1667973225836595286},{"requestId":"b7b27930-69a9-4ce3-8979-4e8630d43ea0","containerId":"824743bd-39c3-4a88-93e4-d1ea8e716734","durationInMs":16204.1,"billedDurationInMs":16205,"memorySizeInMb":10000,"maxMemoryUsedInMb":1178,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":10658,"general":9316,"fallback":57312,"unresolved":0},"output_paths_taken":{"normal":1635,"unresolved":0},"t_hyper":1.39763,"t_compile":0.0494503,"t_fast":5.08698,"t_slow":9.37578,"tsRequestStart":1667973209454012195,"tsRequestEnd":1667973225841302361},{"requestId":"7884df47-40d2-406c-a94f-42797489a15f","containerId":"b5cdc169-6335-4a0b-a147-bff1b3155c85","durationInMs":16288,"billedDurationInMs":16288,"memorySizeInMb":10000,"maxMemoryUsedInMb":1385,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":11020,"general":9218,"fallback":70103,"unresolved":0},"output_paths_taken":{"normal":2008,"unresolved":0},"t_hyper":0.954426,"t_compile":0.0496852,"t_fast":4.45314,"t_slow":10.6771,"tsRequestStart":1667973209404491240,"tsRequestEnd":1667973225869606684},{"requestId":"58fbf849-a24d-435e-9305-9b24970696e4","containerId":"7e493c82-6acd-4385-9cbc-a47fa6e409f5","durationInMs":16804.5,"billedDurationInMs":16805,"memorySizeInMb":10000,"maxMemoryUsedInMb":1390,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8125,"general":5471,"fallback":64484,"unresolved":0},"output_paths_taken":{"normal":2081,"unresolved":0},"t_hyper":0.884826,"t_compile":0.0500024,"t_fast":5.24688,"t_slow":10.4597,"tsRequestStart":1667973208938569610,"tsRequestEnd":1667973225910731040},{"requestId":"ae46c7d5-0463-4b49-aee7-8a8119cb713b","containerId":"4ba09c69-000c-441d-9622-5289f9374f44","durationInMs":17152.3,"billedDurationInMs":17153,"memorySizeInMb":10000,"maxMemoryUsedInMb":1440,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7650,"general":6891,"fallback":68396,"unresolved":0},"output_paths_taken":{"normal":2664,"unresolved":0},"t_hyper":1.38007,"t_compile":0.049736,"t_fast":5.27791,"t_slow":10.2993,"tsRequestStart":1667973208633179047,"tsRequestEnd":1667973225963715589},{"requestId":"a3fce1cd-cdfe-474b-8cb7-a2fc98db4a84","containerId":"83a1dceb-d9c1-4a08-8825-f3774472cc7b","durationInMs":17395.7,"billedDurationInMs":17396,"memorySizeInMb":10000,"maxMemoryUsedInMb":1351,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":13531,"general":6546,"fallback":82848,"unresolved":0},"output_paths_taken":{"normal":2123,"unresolved":0},"t_hyper":1.54733,"t_compile":0.0493342,"t_fast":4.37541,"t_slow":11.2585,"tsRequestStart":1667973208383443011,"tsRequestEnd":1667973225963787277},{"requestId":"aca0952d-51c1-49ad-9495-84425570233f","containerId":"31097bfe-eccf-457b-b636-f23284299c5d","durationInMs":17225.5,"billedDurationInMs":17226,"memorySizeInMb":10000,"maxMemoryUsedInMb":1376,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9403,"general":6119,"fallback":63034,"unresolved":0},"output_paths_taken":{"normal":1915,"unresolved":0},"t_hyper":1.4935,"t_compile":0.0479345,"t_fast":5.59082,"t_slow":9.95825,"tsRequestStart":1667973208560825174,"tsRequestEnd":1667973225964937002},{"requestId":"ddc1606a-b9a9-40c3-a67f-fa432b7e5298","containerId":"46a9072d-eede-49bf-9e19-101a1bee9aaf","durationInMs":17398.2,"billedDurationInMs":17399,"memorySizeInMb":10000,"maxMemoryUsedInMb":1385,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":10464,"general":6920,"fallback":64829,"unresolved":0},"output_paths_taken":{"normal":2417,"unresolved":0},"t_hyper":1.53924,"t_compile":0.0488331,"t_fast":5.28378,"t_slow":10.2834,"tsRequestStart":1667973208476260013,"tsRequestEnd":1667973226050756980},{"requestId":"0581e5b4-d4f0-4d13-9dcd-d1bcc12c46c3","containerId":"c936e487-ca8e-4ce2-a8b1-35d92037c437","durationInMs":17289.6,"billedDurationInMs":17290,"memorySizeInMb":10000,"maxMemoryUsedInMb":1390,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8136,"general":5706,"fallback":62549,"unresolved":0},"output_paths_taken":{"normal":1905,"unresolved":0},"t_hyper":1.48318,"t_compile":0.0497044,"t_fast":5.41433,"t_slow":10.2051,"tsRequestStart":1667973208601854026,"tsRequestEnd":1667973226066940700},{"requestId":"7bacbb53-845d-48ee-9992-0d035f988ae6","containerId":"f0b6381d-f4ce-401a-a0bf-c3e4da7e7fec","durationInMs":17513.2,"billedDurationInMs":17514,"memorySizeInMb":10000,"maxMemoryUsedInMb":1466,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9648,"general":9943,"fallback":67247,"unresolved":0},"output_paths_taken":{"normal":2841,"unresolved":0},"t_hyper":1.4937,"t_compile":0.0498225,"t_fast":5.28307,"t_slow":10.5474,"tsRequestStart":1667973208444046855,"tsRequestEnd":1667973226133539947},{"requestId":"f199b93d-afd9-4b9a-8e7a-f101d98e89e2","containerId":"8094b3ec-3533-4bde-8a6f-bce23efb36d7","durationInMs":16494.7,"billedDurationInMs":16495,"memorySizeInMb":10000,"maxMemoryUsedInMb":1048,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":10799,"general":9579,"fallback":59319,"unresolved":0},"output_paths_taken":{"normal":1281,"unresolved":0},"t_hyper":1.57385,"t_compile":0.0490647,"t_fast":5.19743,"t_slow":9.51234,"tsRequestStart":1667973209510806550,"tsRequestEnd":1667973226187819033},{"requestId":"f8df3aed-3112-4cf7-ba83-4f1816041a99","containerId":"2afd9d5d-b2f5-45c1-a15c-e91c45725236","durationInMs":16687.7,"billedDurationInMs":16688,"memorySizeInMb":10000,"maxMemoryUsedInMb":1401,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":10033,"general":8544,"fallback":61594,"unresolved":0},"output_paths_taken":{"normal":1339,"unresolved":0},"t_hyper":1.44211,"t_compile":0.0483569,"t_fast":5.44632,"t_slow":9.57641,"tsRequestStart":1667973209394526982,"tsRequestEnd":1667973226259907574},{"requestId":"d93bb399-810b-4eea-b491-bb5bdd6f68d8","containerId":"8a0adf01-da6f-44ed-94dc-9d7a315775c1","durationInMs":18034.1,"billedDurationInMs":18035,"memorySizeInMb":10000,"maxMemoryUsedInMb":1392,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":12429,"general":0,"fallback":79684,"unresolved":0},"output_paths_taken":{"normal":2939,"unresolved":0},"t_hyper":1.58131,"t_compile":0.0496583,"t_fast":5.50299,"t_slow":10.7378,"tsRequestStart":1667973208189185105,"tsRequestEnd":1667973226398885358},{"requestId":"a31ec410-78e9-46c8-8fa8-798e17df7df0","containerId":"1da2b1e5-7bc2-4ceb-9d45-f9364a1a370e","durationInMs":18117.3,"billedDurationInMs":18118,"memorySizeInMb":10000,"maxMemoryUsedInMb":1361,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":10606,"general":0,"fallback":92816,"unresolved":0},"output_paths_taken":{"normal":4626,"unresolved":0},"t_hyper":0.918328,"t_compile":0.0501636,"t_fast":5.16307,"t_slow":11.848,"tsRequestStart":1667973208168971896,"tsRequestEnd":1667973226461519614},{"requestId":"caf44ee5-0b44-436e-9ab9-0ac8fd60b717","containerId":"8488b5b9-b483-445d-9825-2efd491935ba","durationInMs":18238.5,"billedDurationInMs":18239,"memorySizeInMb":10000,"maxMemoryUsedInMb":1346,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":11790,"general":0,"fallback":83930,"unresolved":0},"output_paths_taken":{"normal":3762,"unresolved":0},"t_hyper":2.03099,"t_compile":0.0499796,"t_fast":4.8679,"t_slow":11.1013,"tsRequestStart":1667973208179022729,"tsRequestEnd":1667973226593970646},{"requestId":"c3de8f72-fc4b-437d-8aac-79df662512c3","containerId":"a03cc337-c84e-4780-b453-eba54e9c5584","durationInMs":18480.7,"billedDurationInMs":18481,"memorySizeInMb":10000,"maxMemoryUsedInMb":1321,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":61470,"general":0,"fallback":81480,"unresolved":5933},"output_paths_taken":{"normal":5444,"unresolved":5933},"t_hyper":1.22442,"t_compile":0.0433557,"t_fast":5.29609,"t_slow":11.6698,"tsRequestStart":1667973208039287846,"tsRequestEnd":1667973226698633254},{"requestId":"b7911adc-0e61-4a76-9191-0d466a6f8595","containerId":"d66815e4-5ffa-434e-8be3-6c02296101a3","durationInMs":18126.2,"billedDurationInMs":18127,"memorySizeInMb":10000,"maxMemoryUsedInMb":1416,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":8933,"general":8072,"fallback":75954,"unresolved":0},"output_paths_taken":{"normal":3074,"unresolved":0},"t_hyper":1.50014,"t_compile":0.0488321,"t_fast":5.15151,"t_slow":11.2868,"tsRequestStart":1667973208423698643,"tsRequestEnd":1667973226730255328},{"requestId":"c5f94cee-d7a7-49d6-8312-c3b7b5c5fc5b","containerId":"5c27ba80-879c-4306-bf49-79d97bebca30","durationInMs":18328.5,"billedDurationInMs":18329,"memorySizeInMb":10000,"maxMemoryUsedInMb":1450,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":11413,"general":6194,"fallback":85581,"unresolved":0},"output_paths_taken":{"normal":2822,"unresolved":0},"t_hyper":0.973513,"t_compile":0.0495278,"t_fast":5.23614,"t_slow":11.8924,"tsRequestStart":1667973208373335128,"tsRequestEnd":1667973226880096252},{"requestId":"31ef307e-9ce3-43d3-a120-72f7467d8aa3","containerId":"ae0d3c56-8e35-4bfb-82f5-44831f11f0c4","durationInMs":18545.4,"billedDurationInMs":18546,"memorySizeInMb":10000,"maxMemoryUsedInMb":1353,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":10293,"general":0,"fallback":95455,"unresolved":0},"output_paths_taken":{"normal":4447,"unresolved":0},"t_hyper":1.16115,"t_compile":0.0505799,"t_fast":5.26911,"t_slow":11.9288,"tsRequestStart":1667973208158839246,"tsRequestEnd":1667973226884061268},{"requestId":"049193c2-eb09-4817-a1b8-48b9163358e7","containerId":"063b68a6-ebad-476f-95b5-e219d62f1523","durationInMs":18561.7,"billedDurationInMs":18562,"memorySizeInMb":10000,"maxMemoryUsedInMb":1365,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":13480,"general":7330,"fallback":90456,"unresolved":0},"output_paths_taken":{"normal":3247,"unresolved":0},"t_hyper":0.94355,"t_compile":0.0488052,"t_fast":5.36893,"t_slow":12.0544,"tsRequestStart":1667973208271569497,"tsRequestEnd":1667973227009966555},{"requestId":"20994b41-eda9-4987-a82b-efe3190958bd","containerId":"aa529231-9c90-4979-aece-69987da83bb0","durationInMs":18431.5,"billedDurationInMs":18432,"memorySizeInMb":10000,"maxMemoryUsedInMb":1499,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":10339,"general":8612,"fallback":86620,"unresolved":0},"output_paths_taken":{"normal":3623,"unresolved":0},"t_hyper":1.49988,"t_compile":0.0510383,"t_fast":4.31554,"t_slow":12.3885,"tsRequestStart":1667973208413549163,"tsRequestEnd":1667973227023258716},{"requestId":"59a84736-715a-4c57-904b-cd520d75283b","containerId":"378f55fe-75c2-40fd-beb5-11857afc3f62","durationInMs":18471.5,"billedDurationInMs":18472,"memorySizeInMb":10000,"maxMemoryUsedInMb":1371,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":9920,"general":8020,"fallback":88411,"unresolved":0},"output_paths_taken":{"normal":3479,"unresolved":0},"t_hyper":0.997384,"t_compile":0.0489313,"t_fast":5.21465,"t_slow":12.0651,"tsRequestStart":1667973208403611163,"tsRequestEnd":1667973227050870770},{"requestId":"d9de059a-376f-49b5-9808-4f8034f11bb7","containerId":"3a2c6ed1-6788-4cdb-83df-97f9cf0a11d9","durationInMs":18705.8,"billedDurationInMs":18706,"memorySizeInMb":10000,"maxMemoryUsedInMb":1421,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":14630,"general":7511,"fallback":93275,"unresolved":0},"output_paths_taken":{"normal":3425,"unresolved":0},"t_hyper":0.972706,"t_compile":0.051466,"t_fast":4.93542,"t_slow":12.6013,"tsRequestStart":1667973208261382755,"tsRequestEnd":1667973227144314068},{"requestId":"e7c38963-5f5c-4ed1-9c0d-4a4cc7ea0fba","containerId":"9dd5f7ab-4191-4f89-96f3-37a7e97abddd","durationInMs":17611.4,"billedDurationInMs":17612,"memorySizeInMb":10000,"maxMemoryUsedInMb":1390,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":11914,"general":9653,"fallback":68967,"unresolved":0},"output_paths_taken":{"normal":2026,"unresolved":0},"t_hyper":1.39832,"t_compile":0.048879,"t_fast":5.48385,"t_slow":10.5422,"tsRequestStart":1667973209424312342,"tsRequestEnd":1667973227200494260},{"requestId":"25d58c77-353c-4b0d-bbf5-532e08f3ea65","containerId":"a2322714-7c52-45a9-9b8c-c6b9e601abdf","durationInMs":18842.4,"billedDurationInMs":18843,"memorySizeInMb":10000,"maxMemoryUsedInMb":1355,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":15418,"general":8246,"fallback":87541,"unresolved":0},"output_paths_taken":{"normal":3317,"unresolved":0},"t_hyper":1.55239,"t_compile":0.0498168,"t_fast":5.48427,"t_slow":11.6131,"tsRequestStart":1667973208240341161,"tsRequestEnd":1667973227252681107},{"requestId":"7fb67d6f-9c1c-48a4-85d7-7dcc23c38c43","containerId":"3b38dedb-173f-4746-a920-252be8236012","durationInMs":18944.4,"billedDurationInMs":18945,"memorySizeInMb":10000,"maxMemoryUsedInMb":1359,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":16457,"general":7535,"fallback":96783,"unresolved":0},"output_paths_taken":{"normal":3141,"unresolved":0},"t_hyper":0.977634,"t_compile":0.0493694,"t_fast":5.19855,"t_slow":12.5806,"tsRequestStart":1667973208312372664,"tsRequestEnd":1667973227443874352},{"requestId":"6764f7c6-90f0-46c0-baaa-783197dd980a","containerId":"4ca88929-ee71-4376-ae40-02a1baaef947","durationInMs":18985.1,"billedDurationInMs":18986,"memorySizeInMb":10000,"maxMemoryUsedInMb":1391,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":11584,"general":6401,"fallback":86716,"unresolved":0},"output_paths_taken":{"normal":2931,"unresolved":0},"t_hyper":1.4938,"t_compile":0.0495985,"t_fast":5.22621,"t_slow":12.0737,"tsRequestStart":1667973208363206574,"tsRequestEnd":1667973227521915380},{"requestId":"55524733-2a7d-4072-b2c7-cd4ca551990d","containerId":"55ec06ea-d21d-4b2a-8346-97f254bc79a5","durationInMs":19150.6,"billedDurationInMs":19151,"memorySizeInMb":10000,"maxMemoryUsedInMb":1371,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":14587,"general":7627,"fallback":90129,"unresolved":0},"output_paths_taken":{"normal":3486,"unresolved":0},"t_hyper":1.53674,"t_compile":0.049802,"t_fast":5.20963,"t_slow":12.2177,"tsRequestStart":1667973208332687670,"tsRequestEnd":1667973227659578393},{"requestId":"5a720cec-2832-4356-b686-66bc971413b4","containerId":"f7f2a243-8564-41c7-8501-558d2347e6ad","durationInMs":19197.6,"billedDurationInMs":19198,"memorySizeInMb":10000,"maxMemoryUsedInMb":1384,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":14441,"general":8276,"fallback":97014,"unresolved":0},"output_paths_taken":{"normal":3842,"unresolved":0},"t_hyper":0.936307,"t_compile":0.0488674,"t_fast":5.17247,"t_slow":12.9044,"tsRequestStart":1667973208322374865,"tsRequestEnd":1667973227694469453},{"requestId":"a4c472c0-32e9-4210-ba72-79091d73cf17","containerId":"0c5ccf80-e722-423a-a368-e188e6368d04","durationInMs":19303.6,"billedDurationInMs":19304,"memorySizeInMb":10000,"maxMemoryUsedInMb":1410,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":12559,"general":8058,"fallback":93482,"unresolved":0},"output_paths_taken":{"normal":3857,"unresolved":0},"t_hyper":1.4542,"t_compile":0.049251,"t_fast":5.13178,"t_slow":12.5198,"tsRequestStart":1667973208342871390,"tsRequestEnd":1667973227821390543},{"requestId":"b33e0518-996f-422f-9d87-38680d0e5cae","containerId":"ebabfb9d-7725-41b3-971b-88f46385b661","durationInMs":19189.3,"billedDurationInMs":19190,"memorySizeInMb":10000,"maxMemoryUsedInMb":1386,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":6991,"general":6851,"fallback":59450,"unresolved":0},"output_paths_taken":{"normal":2608,"unresolved":0},"t_hyper":0.878478,"t_compile":0.0469115,"t_fast":6.7798,"t_slow":11.3116,"tsRequestStart":1667973208653349076,"tsRequestEnd":1667973228012455150},{"requestId":"1d6de05c-8bc7-4815-92d1-6db39c9fbae3","containerId":"15757b4a-b114-45e1-859e-cfd34b9da5a9","durationInMs":19665.7,"billedDurationInMs":19666,"memorySizeInMb":10000,"maxMemoryUsedInMb":1370,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":11585,"general":7788,"fallback":90601,"unresolved":0},"output_paths_taken":{"normal":3370,"unresolved":0},"t_hyper":1.51763,"t_compile":0.0505836,"t_fast":5.39176,"t_slow":12.5594,"tsRequestStart":1667973208352814484,"tsRequestEnd":1667973228195160713},{"requestId":"47f9a9f0-8409-482f-94fb-fe1007a4abcc","containerId":"2fbb3e6e-1daf-431a-bc75-5e1eddf21e47","durationInMs":19021.3,"billedDurationInMs":19022,"memorySizeInMb":10000,"maxMemoryUsedInMb":1452,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":5485,"general":4302,"fallback":53782,"unresolved":0},"output_paths_taken":{"normal":1255,"unresolved":0},"t_hyper":0.877795,"t_compile":0.0507791,"t_fast":6.6463,"t_slow":11.2643,"tsRequestStart":1667973208999727236,"tsRequestEnd":1667973228202136637},{"requestId":"3466cd39-4598-4c77-aaa9-6181453823b8","containerId":"4d4f753e-fab1-4989-b283-98a60a69250d","durationInMs":20028.9,"billedDurationInMs":20029,"memorySizeInMb":10000,"maxMemoryUsedInMb":1405,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":13668,"general":6598,"fallback":87863,"unresolved":0},"output_paths_taken":{"normal":2678,"unresolved":0},"t_hyper":1.65492,"t_compile":0.0501661,"t_fast":5.56515,"t_slow":12.5884,"tsRequestStart":1667973208282041575,"tsRequestEnd":1667973228478939104},{"requestId":"0d9d21a1-4c11-4fb2-adf0-a2f72ef7f7fe","containerId":"c84581fe-6212-4250-96f3-5cb31d456426","durationInMs":20129.7,"billedDurationInMs":20130,"memorySizeInMb":10000,"maxMemoryUsedInMb":1360,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":15463,"general":9437,"fallback":95914,"unresolved":0},"output_paths_taken":{"normal":4019,"unresolved":0},"t_hyper":1.47653,"t_compile":0.0501222,"t_fast":5.52592,"t_slow":12.934,"tsRequestStart":1667973208250903738,"tsRequestEnd":1667973228562748082},{"requestId":"5c0fe4cf-8a6c-4680-a86c-cd69d4dbac67","containerId":"98d0bfc8-2c7a-48d5-b461-c54b5fbb40eb","durationInMs":19771.8,"billedDurationInMs":19772,"memorySizeInMb":10000,"maxMemoryUsedInMb":1380,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":6730,"general":5736,"fallback":59789,"unresolved":0},"output_paths_taken":{"normal":2092,"unresolved":0},"t_hyper":1.45287,"t_compile":0.0519097,"t_fast":6.45896,"t_slow":11.6754,"tsRequestStart":1667973208643188779,"tsRequestEnd":1667973228586526347},{"requestId":"1a4e2a26-eb8e-4440-a9e4-2d8a70cf0038","containerId":"14ebd118-b95b-418b-a933-8903d9e84398","durationInMs":20589,"billedDurationInMs":20590,"memorySizeInMb":10000,"maxMemoryUsedInMb":1456,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7024,"general":7000,"fallback":68386,"unresolved":0},"output_paths_taken":{"normal":2832,"unresolved":0},"t_hyper":0.915082,"t_compile":0.050319,"t_fast":6.85864,"t_slow":12.6213,"tsRequestStart":1667973208612388387,"tsRequestEnd":1667973229378894779},{"requestId":"95bc6030-d910-420e-b89f-f59e60effaab","containerId":"0133adfd-19a0-40bd-ba5f-c40878c32174","durationInMs":21369.5,"billedDurationInMs":21370,"memorySizeInMb":10000,"maxMemoryUsedInMb":1384,"returnCode":0,"errorMessage":"","input_paths_taken":{"normal":7432,"general":7637,"fallback":73699,"unresolved":0},"output_paths_taken":{"normal":3266,"unresolved":0},"t_hyper":1.4366,"t_compile":0.0490927,"t_fast":6.7902,"t_slow":12.8987,"tsRequestStart":1667973208622706847,"tsRequestEnd":1667973230154772254}]}