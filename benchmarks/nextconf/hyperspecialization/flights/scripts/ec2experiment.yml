## This is an experiment to spin up automatically an EC2 instnace and run everything

# Invoke via ansible-playbook --connection=local --inventory 127.0.0.1, ec2experiment.yml
# or specify hosts file
# you might want to do a dry run first using --check

- hosts: all
  remote_user: root
  gather_facts: no
  vars:
    region: us-east-1
    key_name: vitonexp
    sg_name: vitonsg
  # specify what tasks to execute
  tasks:
    # EC2 credentials create for this experiment
    - name: "Create new EC2 key {{ key_name }}"
      ec2_key:
        name: "{{ key_name }}"
        region: "{{ region }}"
      register: ec2_key_result
    - name: "Save private key"
      copy: content="{{ ec2_key_result.key.private_key }}" dest="./{{ key_name }}.pem" mode=0600
      when: ec2_key_result.changed


    # cf. https://www.ansible.com/blog/ansible-for-aws-introduction-to-spot-instance-automation
    # and https://www.infinitypp.com/ansible/create-aws-resources-using-ansible/
    - name: "Create EC2 security group {{ sg_name }}"
      ec2_group:
        name: "{{ sg_name }}"
        description: "Automatically created security group for Viton experiments"
        region: "{{ region }}"
        rules:
          - proto: tcp
            ports:
              - 22
              - 80
              - 443
              - 8080-8099
            cidr_ip: 0.0.0.0/0
      register: security_group

    - name: "Removing EC2 security group {{ sg_name }}"
      ec2_group:
        state: absent
        name: "{{ sg_name }}"
        region: "{{ region }}"
    # EC2 credentials cleanup
    - name: "Removing EC2 key {{ key_name }}"
      ec2_key:
          name: "{{ key_name }}"
          region: "{{ region }}"
          #  absent means delete keypair
          state: absent
    - name: "Deleting local key file {{ key_name }}.pem"
      file:
        path: "./{{ key_name }}.pem"
        state: absent
      #delegate_to: localhost


# hosts: all
#   # remote_user: root
#   vars:
#     # define here user defined vars, change vars here if you want to run in a different region e.g.
#     region: us-east-1
#     key_name: vitonexp
#
# tasks:
#   - name: "Create new EC2 key {{ key_name }}"
#     ec2_key:
#       name: "{{ key_name }}"
#       region: "{{ region }}"
#     register: ec2_key_result
#   - name: "Save private key"
#     copy: content="{{ ec2_key_result.key.private_key }}" dest="./{{ key_name }}.pem " mode=0600
#     when: ec2_key_result.changed
